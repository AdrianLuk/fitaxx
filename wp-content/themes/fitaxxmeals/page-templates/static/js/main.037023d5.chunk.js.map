{"version":3,"sources":["components/steps/StepList.js","components/SplitButtonCard.js","components/cards/CardItem_Title.js","components/form-sections/Choose.js","components/pagination/PaginationButton.js","components/pagination/Pagination.js","components/SelectDropdown.js","components/cards/CardItem_Picture.js","components/cards/CardList.js","components/utils.js","contexts/Form.js","components/form-sections/Customize.js","components/constants.js","components/table/Table.js","components/SplitButton.js","components/logistics/Logistics.js","components/form-sections/Review.js","components/Total.js","components/cards/CardItem_Number.js","components/Popup.js","components/Form.js","components/snack-steps/Choose.js","contexts/SelectedPackage.js","components/cards/CardListSnack.js","components/snack-steps/Customize.js","components/table/TableSnack.js","components/snack-steps/Review.js","components/TotalSnack.js","components/FormSnack.js","components/vegan-steps/Choose.js","components/cards/CardListVegan.js","components/vegan-steps/Customize.js","components/table/TableVegan.js","components/vegan-steps/Review.js","components/FormVegan.js","components/juice-steps/Choose.js","components/cards/CardListJuice.js","components/juice-steps/Customize.js","components/table/TableJuice.js","components/juice-steps/Review.js","components/TotalJuice.js","components/FormJuice.js","components/fall-menu-steps/Choose.js","components/cards/CardListFallMenu.js","components/fall-menu-steps/Customize.js","components/table/TableFallMenu.js","components/fall-menu-steps/Review.js","components/FormFallMenu.js","app/App.js","serviceWorker.js","index.js"],"names":["StepList","step","className","SplitButton","isActive","text","group","handlePackageSelect","handleSelect","stateKey","item","onClick","CardItem","cardTitle","selectedItem","buttonText","description","id","handleClick","Choose","state","packages","this","props","goals","selectedPackage","selectedGoal","packageList","map","packageItem","acf","price","meal_count","title","rendered","goalList","goal","portion_description","parseFloat","portion_price","toFixed","portion_goal","Component","PaginationButton","handleStepChange","isDisabled","type","disabled","Pagination","handleNextStepChange","handlePrevStepChange","canProceed","SelectDropdown","options","selected","setVariant","getDropdown","useState","value","setValue","dropdownVal","setDropdownVal","useEffect","style","borderRadius","paddingLeft","onChange","e","preventDefault","target","option","index","variation","extra_charge","CardItemWithPic","variantKey","setIsActive","dropdownValue","setDropdownValue","thumbnail","backgroundImage","post_title","paddingTop","variations","CardList","groups","heading","headingColor","subheading","hasNone","selectedVariant","groupName","foodItemRow","isEmptyObject","object","Object","entries","length","constructor","FormContext","React","createContext","FormProvider","Provider","Consumer","CARBS","SALADS","Customize","carbs","meats","vegetables","salads","fallMenu","customizationCount","addToOrder","currentCustomizationId","customizationsRemaining","handleCustomizationAmountIncrement","handleCustomizationAmountChange","handleCustomizationAmountDecrement","selectedCarb","setSelectedCarb","carbVariant","setCarbVariant","selectedMeat","setSelectedMeat","meatVariant","setMeatVariant","selectedVeg","setSelectedVeg","comments","setComments","custTotal","setCustTotal","selectedFallMenu","setSelectedFallMenu","formContext","useContext","customization","useMemo","customization_number","customization_quantity","fall_menu","meat","carb","vegetable","customization_price","total","aria-hidden","max","href","baseURL","name","rows","NO_CARB","ALLOWED_ADDONS","Table","customizations","addOns","shipping","selectedDelivery","deliveryOption","cust","dangerouslySetInnerHTML","__html","reduce","acc","curr","count","addOn","snack","delivery_locations","location","Logistics","setDeliveryOption","values","deliveryTime","setDeliveryTime","handleChange","city","email","setCity","isEmailValid","checkEmail","setEmail","src","width","height","frameBorder","border","allowFullScreen","fullName","placeholder","onBlur","phone","phoneRegionCode","address","address2","blocks","uppercase","postalCode","specialInstructions","emailRegex","Review","isContactValid","handleIsContactValid","handleProceed","submittedCust","setSubmittedCust","paymentOption","setPaymentOption","setPayment","cityValue","setCityValue","setIsEmailValid","initialValues","setValues","useForm","test","header","keys","custCsv","row","fieldName","formattedFieldName","split","w","capitalize","join","addOnCsv","csv","Total","itemCount","totalCustomizations","packagePrice","CardItemNumber","itemsRemaining","handleItemsChange","setCount","Popup","items","active","toggleModal","handleNoThanks","form","display","tabIndex","aria-label","textAlign","marginBottom","allowedAddons","textTransform","snacksRemaining","handleSnackChange","Form","getData","a","axios","get","getTypes","getPackages","getGoals","getCarbs","getMeats","getVegetables","getShippingOptions","getSalads","getSnacks","getFallMenu","getJuices","Promise","all","then","types","shippingOptions","snacks","juices","setState","data","isDataLoaded","scrollToTop","document","getElementById","scrollIntoView","behavior","block","event","currentCustomization","saveCustomization","currentCustomizationCount","submit","addCustomizationToOrder","selection","handleDeliverySelect","selectedDeliveryLocation","isValid","filter","selectedSnack","s","sort","b","modalActive","addOnsRemaining","renderSections","meta","packageAmount","prevProps","prevState","current","size","SelectedPackageContext","SelectedPackageProvider","CardListSnack","maxSnackCount","handleComments","replace","TotalSnack","FormSnack","getSnackSizes","snackSizes","selectedSnacks","homeUrl","CardListVegan","vegansRemaining","handleVeganChange","vegans","vegan","veganCsv","FormVegan","getVegans","selectedVegans","selectedVegan","CardListJuice","maxJuiceCount","juicesRemaining","handleJuiceChange","juice","TotalJuice","FormJuice","getJuiceSizes","juiceSizes","selectedJuices","selectedJuice","CardListFallMenu","fallMenusRemaining","handleFallMenuChange","fallMenus","fallMenuItem","fallMenuCsv","FormFallMenu","selectedFallMenus","SNACK","MEAL","VEGAN","JUICE","PREMADE","App","formType","setFormType","action","encType","method","minHeight","renderForm","Boolean","window","hostname","match","element","parsed","dataset","assign","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.037023d5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./steps.scss\";\r\n// import StepItem from \"./StepItem\";\r\n\r\nconst StepList = ({ step }) => {\r\n    return (\r\n        <div className=\"step-list cell small-12 large-auto\">\r\n            <div className={\"step-item \" + (step >= 1 ? \"is-active\" : \"\")}>\r\n                <div className=\"step-index\">1</div>\r\n                <div className=\"step-name\">Choose</div>\r\n            </div>\r\n            <hr className={\"step-separator \" + (step > 1 ? \"is-active\" : \"\")} />\r\n            <div className={\"step-item \" + (step >= 2 ? \"is-active\" : \"\")}>\r\n                <div className=\"step-index\">2</div>\r\n                <div className=\"step-name\">Customize</div>\r\n            </div>\r\n            <hr className={\"step-separator \" + (step > 2 ? \"is-active\" : \"\")} />\r\n            <div className={\"step-item \" + (step === 3 ? \"is-active\" : \"\")}>\r\n                <div className=\"step-index\">3</div>\r\n                <div className=\"step-name\">Review &amp; Confirm</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StepList;\r\n","import React from \"react\";\r\n\r\nconst SplitButton = ({\r\n    isActive,\r\n    text,\r\n    group,\r\n    handlePackageSelect,\r\n    handleSelect,\r\n    stateKey,\r\n    item\r\n}) => {\r\n    return (\r\n        <button\r\n            onClick={\r\n                group === \"goals\"\r\n                    ? handleSelect(stateKey, item)\r\n                    : handlePackageSelect(item)\r\n            }\r\n            className={\"input-group select-button \"}>\r\n            <span className=\"input-group-field select-button__text\">\r\n                {text}\r\n            </span>\r\n            <span\r\n                className={\r\n                    \"input-group-label select-button__icon fa \" +\r\n                    (isActive ? \"fa-check\" : \"fa-arrow-right\")\r\n                }\r\n            />\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default SplitButton;\r\n","import React from \"react\";\r\nimport SplitButton from \"../SplitButtonCard\";\r\n\r\nconst CardItem = ({\r\n    handleSelect,\r\n    handlePackageSelect,\r\n    item,\r\n    cardTitle,\r\n    selectedItem,\r\n    buttonText,\r\n    description,\r\n    stateKey,\r\n    group\r\n}) => {\r\n    const handleClick = () => {\r\n        // e.preventDefault();\r\n        // group === \"goals\"\r\n        //     ? console.log(\"goals\", stateKey, item)\r\n        //     : console.log(\"not goals\", item);\r\n        group === \"goals\"\r\n            ? handleSelect(stateKey, item)\r\n            : handlePackageSelect(item);\r\n    };\r\n    return (\r\n        <div\r\n            onClick={\r\n                group === \"goals\"\r\n                    ? handleSelect(stateKey, item)\r\n                    : handlePackageSelect(item)\r\n            }\r\n            className={\r\n                \"card text-center small-12 medium-6 large-4 card__item card__item--title \" +\r\n                (item.id === selectedItem.id ? \"card__item--active\" : \"\")\r\n            }>\r\n            <div className=\"card-divider\">{cardTitle}</div>\r\n            <div className=\"card-section\">\r\n                {description && <p>{description}</p>}\r\n                <SplitButton\r\n                    handleClick={handleClick}\r\n                    item={item}\r\n                    stateKey={stateKey}\r\n                    group={group}\r\n                    handleSelect={handleSelect}\r\n                    handlePackageSelect={handlePackageSelect}\r\n                    text={buttonText}\r\n                    isActive={item.id === selectedItem.id ? true : false}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardItem;\r\n","import React, { Component } from 'react';\r\nimport CardItem from '../cards/CardItem_Title';\r\nimport './section.scss';\r\n// import axios from \"axios\";\r\n\r\nexport class Choose extends Component {\r\n  state = {\r\n    packages: [],\r\n    // selectedPackage: null\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    const {\r\n      packages,\r\n      goals,\r\n      handleSelect,\r\n      selectedPackage,\r\n      selectedGoal,\r\n      handlePackageSelect,\r\n      // packageAmount\r\n    } = this.props;\r\n    const packageList = packages.map((packageItem) => (\r\n      <CardItem\r\n        key={packageItem.id}\r\n        item={packageItem}\r\n        stateKey=\"selectedPackage\"\r\n        selectedItem={selectedPackage}\r\n        handleSelect={handlePackageSelect}\r\n        handlePackageSelect={handlePackageSelect}\r\n        buttonText={`$${packageItem.acf.price}`}\r\n        description={`${packageItem.acf.meal_count} Personal Sized Meals`}\r\n        group=\"packages\"\r\n        cardTitle={packageItem.title.rendered}\r\n      />\r\n    ));\r\n    const goalList = goals.map((goal) => (\r\n      <CardItem\r\n        key={goal.id}\r\n        item={goal}\r\n        group=\"goals\"\r\n        selectedItem={selectedGoal}\r\n        handleSelect={handleSelect}\r\n        stateKey=\"selectedGoal\"\r\n        description={goal.acf.portion_description}\r\n        buttonText={\r\n          parseFloat(goal.acf.portion_price) > 0\r\n            ? `$${parseFloat(goal.acf.portion_price).toFixed(2)}`\r\n            : `FREE`\r\n        }\r\n        cardTitle={goal.acf.portion_goal}\r\n      />\r\n    ));\r\n    return (\r\n      <section className=\"section section--choose\">\r\n        <div className=\"section__item\">\r\n          <h2 className=\"section__heading\">Select a Package</h2>\r\n          <p className=\"section__subheading\">\r\n            Choose how many meals you intend to eat per day for six (6) days.\r\n          </p>\r\n          <div className=\"section__grid grid-x grid-margin-x align-large-justify align-spaced\">\r\n            {packageList}\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"section__item\">\r\n          <h2 className=\"section__heading\">Select Your Goal</h2>\r\n          <p className=\"section__subheading\">\r\n            We have 3 sizes for you to choose from: 4oz, 6oz, and 8oz (+$1), to\r\n            help you lose, maintain, and gain weight.\r\n          </p>\r\n          <div className=\"section__grid grid-x grid-margin-x align-large-justify align-spaced\">\r\n            {goalList}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Choose;\r\n","import React from \"react\";\r\n\r\nconst PaginationButton = ({ text, handleStepChange, isDisabled, type }) => {\r\n    return (\r\n        <button\r\n            className={\r\n                \"pagination__item \" +\r\n                (!isDisabled ? \"pagination__item--active\" : \"\")\r\n            }\r\n            type={type}\r\n            disabled={isDisabled}\r\n            onClick={handleStepChange}>\r\n            {text}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default PaginationButton;\r\n","import React from \"react\";\r\nimport PaginationButton from \"./PaginationButton\";\r\nimport \"./pagination.scss\";\r\n\r\nconst Pagination = ({\r\n    step,\r\n    handleNextStepChange,\r\n    handlePrevStepChange,\r\n    canProceed\r\n}) => {\r\n    return (\r\n        <div className=\"pagination__list\">\r\n            <PaginationButton\r\n                isDisabled={step <= 1 ? true : false}\r\n                type=\"button\"\r\n                text=\"Back\"\r\n                handleStepChange={handlePrevStepChange}\r\n            />\r\n            <PaginationButton\r\n                isDisabled={!canProceed ? true : false}\r\n                text={step > 2 ? \"Submit\" : \"Next\"}\r\n                type={step > 2 ? \"submit\" : \"button\"}\r\n                handleStepChange={handleNextStepChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst SelectDropdown = ({\r\n  options,\r\n  selected,\r\n  handleSelect,\r\n  setVariant,\r\n  group,\r\n  getDropdown\r\n}) => {\r\n  const [value, setValue] = useState(options[0]);\r\n  const [dropdownVal, setDropdownVal] = useState(0);\r\n  useEffect(() => {\r\n    getDropdown(value);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [value]);\r\n  return (\r\n    <select\r\n      style={{ borderRadius: 20, paddingLeft: \"1rem\" }}\r\n      value={dropdownVal}\r\n      onChange={e => {\r\n        e.preventDefault();\r\n        if (selected.id === group.id) {\r\n          handleSelect(group);\r\n          setVariant(options[e.target.value]);\r\n        }\r\n        setValue(options[e.target.value]);\r\n        setDropdownVal(e.target.value);\r\n      }}\r\n    >\r\n      {options.map((option, index) => (\r\n        <option key={index} value={index}>\r\n          {`${option.variation} ${\r\n            parseFloat(option.extra_charge) > 0\r\n              ? `(+$${parseFloat(option.extra_charge).toFixed(2)})`\r\n              : \"\"\r\n          }`}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default SelectDropdown;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport SelectDropdown from '../SelectDropdown';\r\n// import SplitButton from \"./SplitButton\";\r\n\r\nconst CardItemWithPic = ({\r\n  handleSelect,\r\n  group,\r\n  stateKey,\r\n  variantKey,\r\n  setVariant,\r\n  selected,\r\n}) => {\r\n  // console.log(selected.id);\r\n  // console.log(group.id);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [dropdownValue, setDropdownValue] = useState({});\r\n  useEffect(() => {\r\n    if (selected.id === group.id) {\r\n      // console.log(group.id);\r\n      setIsActive(true);\r\n    } else {\r\n      setIsActive(false);\r\n    }\r\n  }, [selected.id, group.id, isActive]);\r\n  const getDropdownValue = (e) => {\r\n    setDropdownValue(e);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={\r\n          'card small-12 medium-6 large-4 card__item card__item--picture ' +\r\n          (isActive ? 'card__item--active' : '')\r\n        }\r\n        key={group.id}\r\n      >\r\n        {group.thumbnail && (\r\n          <div\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleSelect(isActive ? {} : group);\r\n              variantKey && setVariant(dropdownValue);\r\n            }}\r\n            className=\"card-img\"\r\n            style={{ backgroundImage: `url(${group.thumbnail})` }}\r\n          />\r\n        )}\r\n        <div className=\"card-divider\">{group.post_title}</div>\r\n        <div className=\"text-center\">\r\n          {+group.acf.extra_charge\r\n            ? `+ $${parseFloat(group.acf.extra_charge).toFixed(2)}`\r\n            : null}\r\n        </div>\r\n        <div\r\n          style={{ paddingTop: +group.acf?.extra_charge ? 0 : '1rem' }}\r\n          className=\"card-section align-right\"\r\n        >\r\n          {group.acf.variations && (\r\n            <SelectDropdown\r\n              group={group}\r\n              stateKey={stateKey}\r\n              variantKey={variantKey}\r\n              options={group.acf.variations}\r\n              handleSelect={handleSelect}\r\n              setVariant={setVariant}\r\n              selected={selected}\r\n              dropdownValue={dropdownValue}\r\n              getDropdown={getDropdownValue}\r\n            />\r\n          )}\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleSelect(isActive ? {} : group);\r\n              variantKey && setVariant(dropdownValue);\r\n            }}\r\n            className={'input-group select-button '}\r\n          >\r\n            <span className=\"input-group-field select-button__text\">\r\n              {isActive ? 'Selected' : 'Select'}\r\n            </span>\r\n            <span\r\n              className={\r\n                'input-group-label select-button__icon fa ' +\r\n                (isActive ? 'fa-check' : 'fa-arrow-right')\r\n              }\r\n            />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CardItemWithPic;\r\n","import React from 'react';\r\n// import SelectDropdown from \"./SelectDropdown\";\r\nimport CardItemWithPic from './CardItem_Picture';\r\n\r\nexport const CardList = ({\r\n  groups,\r\n  heading,\r\n  headingColor,\r\n  subheading,\r\n  handleSelect,\r\n  hasNone,\r\n  stateKey,\r\n  selected,\r\n  selectedVariant,\r\n  setVariant,\r\n  groupName,\r\n  variantKey,\r\n}) => {\r\n  const foodItemRow =\r\n    groups &&\r\n    groups?.map((group) => (\r\n      <CardItemWithPic\r\n        key={group.id}\r\n        group={group}\r\n        selected={selected}\r\n        handleSelect={handleSelect}\r\n        selectedVariant={selectedVariant}\r\n        setVariant={setVariant}\r\n        // handleVariationChange={this.handleVariationChange}\r\n        stateKey={stateKey}\r\n        variantKey={variantKey}\r\n      />\r\n    ));\r\n  return (\r\n    <div className=\"section__item\">\r\n      <h2\r\n        className={`section__heading ${\r\n          headingColor ? `section__heading--${headingColor}` : ''\r\n        }`}\r\n      >\r\n        {heading || `Select your ${groupName}`}\r\n      </h2>\r\n      <p className={`section__subheading`}>\r\n        {subheading || `Select one ${groupName} option per order (required)`}\r\n      </p>\r\n      <div className=\"section__grid grid-x grid-margin-x align-center\">\r\n        {foodItemRow}\r\n      </div>\r\n      {hasNone && (\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            handleSelect(`No ${groupName}`);\r\n            setVariant(`No ${groupName}`);\r\n          }}\r\n          className={\r\n            'input-group select-button ' +\r\n            (selected === `No ${groupName}` ? 'select-button--is-active' : '')\r\n          }\r\n        >\r\n          <span className=\"input-group-field select-button__text\">\r\n            {`No ${groupName}`}\r\n          </span>\r\n          <span\r\n            className={\r\n              'input-group-label select-button__icon fa ' +\r\n              (selected === `No ${groupName}` ? 'fa-check' : 'fa-arrow-right')\r\n            }\r\n          />\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","export const isEmptyObject = object => {\r\n    if (Object.entries(object).length === 0 && object.constructor === Object) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n","import React from \"react\";\r\n\r\nconst FormContext = React.createContext({});\r\n\r\nexport const FormProvider = FormContext.Provider;\r\nexport const FormConsumer = FormContext.Consumer;\r\n\r\nexport default FormContext;\r\n","import React, { useState, useEffect, useContext, useMemo } from 'react';\r\nimport CardList from '../cards/CardList';\r\nimport './section.scss';\r\nimport { isEmptyObject } from '../utils';\r\nimport FormContext from '../../contexts/Form';\r\nconst CARBS = 'carbs';\r\nconst SALADS = 'salads';\r\n// const FALL_MENU = 'fall_menu';\r\n\r\nconst Customize = ({\r\n  carbs,\r\n  meats,\r\n  vegetables,\r\n  salads,\r\n  fallMenu,\r\n  customizationCount,\r\n  addToOrder,\r\n  currentCustomizationId,\r\n  // customizations,\r\n  customizationsRemaining,\r\n  handleCustomizationAmountIncrement,\r\n  handleCustomizationAmountChange,\r\n  handleCustomizationAmountDecrement,\r\n}) => {\r\n  const [selectedCarb, setSelectedCarb] = useState({});\r\n  const [carbVariant, setCarbVariant] = useState({});\r\n  const [selectedMeat, setSelectedMeat] = useState({});\r\n  const [meatVariant, setMeatVariant] = useState({});\r\n  const [selectedVeg, setSelectedVeg] = useState({});\r\n  const [comments, setComments] = useState('');\r\n  const [custTotal, setCustTotal] = useState(0);\r\n  const [selectedFallMenu, setSelectedFallMenu] = useState({});\r\n  const formContext = useContext(FormContext);\r\n  // init object containing all the data for the current customization\r\n  const customization = useMemo(() => {\r\n    return {\r\n      customization_number: currentCustomizationId,\r\n      customization_quantity: customizationCount,\r\n      fall_menu: selectedFallMenu,\r\n      // selectedMeat,\r\n      meat:\r\n        isEmptyObject(selectedFallMenu) && !isEmptyObject(selectedMeat)\r\n          ? meatVariant\r\n          : {},\r\n      // selectedCarb,\r\n      carb: selectedCarb.type === CARBS ? carbVariant : selectedCarb,\r\n      vegetable: selectedCarb.type === CARBS ? selectedVeg : {},\r\n      comments,\r\n      customization_price: custTotal,\r\n    };\r\n  }, [\r\n    carbVariant,\r\n    comments,\r\n    currentCustomizationId,\r\n    custTotal,\r\n    customizationCount,\r\n    meatVariant,\r\n    selectedCarb,\r\n    selectedFallMenu,\r\n    selectedMeat,\r\n    selectedVeg,\r\n  ]);\r\n  useEffect(() => {\r\n    let total = 0;\r\n    if (isEmptyObject(selectedFallMenu)) {\r\n      total =\r\n        (carbVariant?.extra_charge\r\n          ? +carbVariant.extra_charge * customizationCount\r\n          : 0) +\r\n        (meatVariant?.extra_charge\r\n          ? +meatVariant.extra_charge * customizationCount\r\n          : 0) +\r\n        (selectedCarb?.type !== SALADS && selectedVeg?.acf?.extra_charge\r\n          ? +selectedVeg.acf.extra_charge * customizationCount\r\n          : 0);\r\n    } else {\r\n      total = selectedFallMenu?.acf?.extra_charge\r\n        ? +selectedFallMenu.acf.extra_charge * customizationCount\r\n        : 0;\r\n    }\r\n    setCustTotal(total);\r\n  }, [\r\n    selectedCarb,\r\n    carbVariant,\r\n    selectedMeat,\r\n    meatVariant,\r\n    selectedVeg,\r\n    selectedFallMenu,\r\n    customizationCount,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // console.log(customization);\r\n    addToOrder(customization);\r\n    return () => {};\r\n  }, [\r\n    currentCustomizationId,\r\n    selectedMeat,\r\n    meatVariant,\r\n    selectedCarb,\r\n    carbVariant,\r\n    selectedVeg,\r\n    selectedFallMenu,\r\n    customizationCount,\r\n    custTotal,\r\n    comments,\r\n    addToOrder,\r\n    customization,\r\n  ]);\r\n  useEffect(() => {\r\n    setSelectedMeat({});\r\n    setMeatVariant({});\r\n    setSelectedCarb({});\r\n    setCarbVariant({});\r\n    setSelectedVeg({});\r\n    setSelectedFallMenu({});\r\n    setComments('');\r\n    setCustTotal(0);\r\n  }, [currentCustomizationId]);\r\n  // const handleVegClick = selectedVeggie => e => {\r\n  //     e.preventDefault();\r\n  //     // console.log(selectedVeggie);\r\n  //     const alreadySelected = selectedVeg.includes(selectedVeggie);\r\n  //     if (alreadySelected) {\r\n  //         const vegList = selectedVeg.filter(veg => veg !== selectedVeggie);\r\n  //         setSelectedVeg(vegList);\r\n  //     } else {\r\n  //         const vegList = [...selectedVeg, selectedVeggie];\r\n  //         setSelectedVeg(vegList);\r\n  //     }\r\n  // };\r\n  return (\r\n    <section className=\"section section--customize\">\r\n      <div className=\"customize__counter\">\r\n        <h5 className=\"section__heading text-center\">\r\n          Choose number of meals for this customization\r\n        </h5>\r\n        <div className=\"input-group plus-minus-input align-center\">\r\n          <div className=\"input-group-button\">\r\n            <button\r\n              onClick={handleCustomizationAmountDecrement}\r\n              type=\"button\"\r\n              className=\"button hollow circle\"\r\n            >\r\n              <i className=\"fa fa-minus\" aria-hidden=\"true\" />\r\n            </button>\r\n          </div>\r\n          <input\r\n            type=\"number\"\r\n            value={\r\n              customizationCount > customizationsRemaining\r\n                ? customizationsRemaining\r\n                : customizationCount\r\n            }\r\n            onChange={handleCustomizationAmountChange}\r\n            className=\"input-group-field\"\r\n            max={customizationsRemaining}\r\n          />\r\n          <div className=\"input-group-button\">\r\n            <button\r\n              onClick={handleCustomizationAmountIncrement}\r\n              type=\"button\"\r\n              className=\"button hollow circle\"\r\n            >\r\n              <i className=\"fa fa-plus\" aria-hidden=\"true\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {isEmptyObject(selectedMeat) &&\r\n        isEmptyObject(selectedCarb) &&\r\n        isEmptyObject(selectedVeg) && (\r\n          <CardList\r\n            groupName=\"fall menu\"\r\n            stateKey=\"selectedFallMenu\"\r\n            heading={`Our fall menu`}\r\n            headingColor={`orange`}\r\n            subheading={`Try our limited edition fall menu! No substitutions allowed.`}\r\n            selected={selectedFallMenu}\r\n            handleSelect={setSelectedFallMenu}\r\n            groups={fallMenu}\r\n            hasNone={false}\r\n          />\r\n        )}\r\n      {isEmptyObject(selectedFallMenu) && (\r\n        <>\r\n          <hr />\r\n          <CardList\r\n            groupName=\"carb\"\r\n            stateKey=\"selectedCarb\"\r\n            selected={selectedCarb}\r\n            selectedVariant={carbVariant}\r\n            variantKey=\"carbVariant\"\r\n            handleSelect={setSelectedCarb}\r\n            setVariant={setCarbVariant}\r\n            groups={[...carbs, ...salads]}\r\n            hasNone={true}\r\n          />\r\n          <hr />\r\n          <CardList\r\n            groupName=\"meat\"\r\n            stateKey=\"selectedMeat\"\r\n            selected={selectedMeat}\r\n            // selectedVariant={meatVariant}\r\n            variantKey=\"meatVariant\"\r\n            handleSelect={setSelectedMeat}\r\n            setVariant={setMeatVariant}\r\n            groups={meats}\r\n            hasNone={false}\r\n          />\r\n          {(isEmptyObject(selectedCarb) || selectedCarb.type !== SALADS) && (\r\n            <>\r\n              <hr />\r\n              <CardList\r\n                groupName=\"vegetable\"\r\n                stateKey=\"selectedVeg\"\r\n                selected={selectedVeg}\r\n                // selectedVariant={meatVariant}\r\n                // variantKey=\"meatVariant\"\r\n                handleSelect={setSelectedVeg}\r\n                // setVariant={setMeatVariant}\r\n                groups={vegetables}\r\n                hasNone={false}\r\n              />\r\n            </>\r\n          )}\r\n          <hr />\r\n        </>\r\n      )}\r\n      <div className=\"section__item\">\r\n        <h3 className=\"section__heading\">Comments</h3>\r\n        <p className=\"section__subheading\">\r\n          <strong>We also serve halal meat!</strong> Please add any comments for\r\n          this customization\r\n        </p>\r\n        <p className=\"section__subheading\">\r\n          <em>\r\n            Please Note: Items in salad can be removed but not substituted. For\r\n            more information,{' '}\r\n            <a href={`${formContext.baseURL}/frequently-asked-questions`}>\r\n              click here\r\n            </a>\r\n          </em>\r\n        </p>\r\n        <div className=\"customize__textarea-container\">\r\n          <textarea\r\n            className=\"customize__textarea\"\r\n            value={comments}\r\n            onChange={(e) => setComments(e.target.value)}\r\n            name=\"\"\r\n            id=\"\"\r\n            rows={4}\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Customize;\r\n","export const NO_CARB = \"No carb\";\r\nexport const ALLOWED_ADDONS = 14;\r\nexport const ADDON_PRICE = 5;\r\n","import React, { Fragment } from 'react';\r\nimport './table.scss';\r\nimport { NO_CARB, ADDON_PRICE } from '../constants';\r\nimport { isEmptyObject } from '../utils';\r\n// const isEmptyObject = object => {\r\n//     if (Object.entries(object).length === 0 && object.constructor === Object) {\r\n//         return true;\r\n//     } else {\r\n//         return false;\r\n//     }\r\n// };\r\nconst Table = ({\r\n  customizations,\r\n  addOns,\r\n  selectedPackage,\r\n  goal,\r\n  shipping,\r\n  selectedDelivery,\r\n  deliveryOption,\r\n  total,\r\n}) => {\r\n  // console.log(selectedDelivery);\r\n  // console.log(customizations);\r\n  // console.log(selectedPackage);\r\n  // console.log(goal);\r\n  return (\r\n    <table className=\"table unstriped\">\r\n      <thead className=\"table__head\">\r\n        <tr>\r\n          <th>Order Summary</th>\r\n          <th className=\"text-center\">QTY</th>\r\n          <th className=\"text-center\">Price</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr className=\"table__row table__row--bold\">\r\n          <td>{selectedPackage.title.rendered}</td>\r\n          <td />\r\n          <td>{`$${selectedPackage.acf.price}`}</td>\r\n        </tr>\r\n        <tr className=\"table__row table__row--indent-1\">\r\n          <td>{`${selectedPackage.acf.meal_count}-meal pack`}</td>\r\n          <td />\r\n          <td />\r\n        </tr>\r\n        {goal && (\r\n          <tr className=\"table__row table__row--indent-1\">\r\n            <td>{`${goal.acf.portion_description}`}</td>\r\n            <td />\r\n            <td>\r\n              {parseFloat(goal.acf.portion_price) > 0\r\n                ? `$${parseFloat(\r\n                    +goal.acf.portion_price * +selectedPackage.acf.meal_count\r\n                  ).toFixed(2)}`\r\n                : `Included`}\r\n            </td>\r\n          </tr>\r\n        )}\r\n        {customizations?.map((cust, index) => (\r\n          <Fragment key={index}>\r\n            <tr className=\"table__row table__row--bold table__row--indent-1\">\r\n              <td>{`Customized Meal ${index + 1}`}</td>\r\n              <td className=\"text-center\">{`x${cust.customization_quantity}`}</td>\r\n              <td />\r\n            </tr>\r\n            {isEmptyObject(cust.fall_menu) ? (\r\n              <>\r\n                <tr className=\"table__row table__row--indent-1-5\">\r\n                  <td>\r\n                    {cust.carb.variation || cust.carb.post_title || NO_CARB}\r\n                  </td>\r\n                  <td />\r\n                  <td>\r\n                    {+cust.carb.extra_charge > 0\r\n                      ? `$${parseFloat(\r\n                          cust.carb.extra_charge * cust.customization_quantity\r\n                        ).toFixed(2)}`\r\n                      : ''}\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"table__row table__row--indent-1-5\">\r\n                  <td>{cust.meat.variation}</td>\r\n                  <td />\r\n                  <td>\r\n                    {+cust.meat.extra_charge > 0\r\n                      ? `$${parseFloat(\r\n                          cust.meat.extra_charge * cust.customization_quantity\r\n                        ).toFixed(2)}`\r\n                      : ''}\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"table__row table__row--indent-1-5\">\r\n                  <td>{cust.vegetable.post_title}</td>\r\n                  <td />\r\n                  <td>\r\n                    {cust.vegetable.acf && cust.vegetable.acf.extra_charge\r\n                      ? `$${parseFloat(\r\n                          cust.vegetable.acf.extra_charge *\r\n                            cust.customization_quantity\r\n                        ).toFixed(2)}`\r\n                      : ''}\r\n                  </td>\r\n                </tr>\r\n              </>\r\n            ) : (\r\n              <tr className=\"table__row table__row--indent-1-5\">\r\n                <td>{cust.fall_menu?.post_title}</td>\r\n                <td />\r\n                <td>\r\n                  {+cust.fall_menu?.acf?.extra_charge > 0\r\n                    ? `$${parseFloat(\r\n                        cust.fall_menu?.acf?.extra_charge *\r\n                          cust.customization_quantity\r\n                      ).toFixed(2)}`\r\n                    : ''}\r\n                </td>\r\n              </tr>\r\n            )}\r\n            {cust.comments.length > 0 && (\r\n              <tr className=\"table__row table__row--indent-1-5\">\r\n                <td\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: cust.comments,\r\n                  }}\r\n                />\r\n                <td />\r\n                <td />\r\n              </tr>\r\n            )}\r\n          </Fragment>\r\n        ))}\r\n        {addOns.length > 0 && (\r\n          <>\r\n            <tr className=\"table__row table__row--bold\">\r\n              <td>Snacks</td>\r\n              <td />\r\n              <td>{`$${parseFloat(\r\n                addOns.reduce((acc, curr) => acc + curr.count, 0) * ADDON_PRICE\r\n              ).toFixed(2)}`}</td>\r\n            </tr>\r\n            {addOns.map((addOn) => (\r\n              <tr\r\n                key={addOn.snack.id}\r\n                className=\"table__row table__row--indent-1\"\r\n              >\r\n                <td>{addOn.snack.post_title}</td>\r\n                <td className={`text-bold text-center`}>{`x${addOn.count}`}</td>\r\n                <td />\r\n              </tr>\r\n            ))}\r\n          </>\r\n        )}\r\n        {selectedDelivery !== 'default' && deliveryOption === 'delivery' && (\r\n          <Fragment>\r\n            <tr className=\"table__row table__row--bold\">\r\n              <td>Delivery Location</td>\r\n              <td />\r\n              <td />\r\n            </tr>\r\n            <tr className=\"table__row table__row--indent-1\">\r\n              <td>{shipping.delivery_locations[selectedDelivery].location}</td>\r\n              <td />\r\n              <td>{`$${parseFloat(\r\n                shipping.delivery_locations[selectedDelivery].price\r\n              ).toFixed(2)}`}</td>\r\n            </tr>\r\n          </Fragment>\r\n        )}\r\n      </tbody>\r\n      <tfoot className=\"table__footer\">\r\n        <tr>\r\n          <th>Order Total</th>\r\n          <th />\r\n          <th className=\"text-center\">{`$${total.toFixed(2)}`}</th>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nconst SplitButton = ({\r\n    handleClick,\r\n    isActive,\r\n    text\r\n    // group,\r\n    // handlePackageSelect,\r\n    // handleSelect,\r\n    // stateKey,\r\n    // item\r\n}) => {\r\n    return (\r\n        <button\r\n            onClick={handleClick}\r\n            className={\r\n                \"input-group select-button \" +\r\n                (isActive ? \"select-button--is-active\" : \"\")\r\n            }>\r\n            <span className=\"input-group-field select-button__text\">\r\n                {text}\r\n            </span>\r\n            <span\r\n                className={\r\n                    \"input-group-label select-button__icon fa \" +\r\n                    (isActive ? \"fa-check\" : \"fa-arrow-right\")\r\n                }\r\n            />\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default SplitButton;\r\n","import React, { Fragment } from 'react';\r\nimport SplitButton from '../SplitButton';\r\nimport Cleave from 'cleave.js/react';\r\nimport './logistics.scss';\r\n// eslint-disable-next-line no-unused-vars\r\nimport CleavePhone from 'cleave.js/dist/addons/cleave-phone.ca';\r\n\r\n// const useForm = initialValues => {\r\n//     const [values, setValues] = useState(initialValues);\r\n//     return [\r\n//         values,\r\n//         e => {\r\n//             setValues({\r\n//                 ...values,\r\n//                 [e.target.id]: e.target.value\r\n//             });\r\n//         }\r\n//     ];\r\n// };\r\n\r\nconst Logistics = ({\r\n  shipping,\r\n  handleSelect,\r\n  setDeliveryOption,\r\n  deliveryOption,\r\n  deliveryTime,\r\n  setDeliveryTime,\r\n  values,\r\n  handleChange,\r\n  city,\r\n  setCity,\r\n  email,\r\n  isEmailValid,\r\n  checkEmail,\r\n  setEmail,\r\n}) => {\r\n  return (\r\n    <div className=\"logistics\">\r\n      <div className=\"logistics__grid logistics__buttons grid-x grid-margin-x align-spaced\">\r\n        <SplitButton\r\n          isActive={deliveryOption === 'delivery' ? true : false}\r\n          handleClick={setDeliveryOption('delivery')}\r\n          text={`Delivery`}\r\n        />\r\n        <SplitButton\r\n          isActive={deliveryOption === 'pickup' ? true : false}\r\n          handleClick={setDeliveryOption('pickup')}\r\n          text={`Pick Up`}\r\n        />\r\n      </div>\r\n      <div className=\"logistics__grid logistics__form-fields grid-x grid-margin-x\">\r\n        {deliveryOption === 'pickup' && (\r\n          <Fragment>\r\n            <p className=\"logistics__text small-12 large-5 cell\">\r\n              <span className=\"logistics__text--label\">Pickup Address:</span>\r\n              <span className=\"logistics__text--address\">\r\n                1050 The Queensway\r\n                <br />\r\n                Etobicoke, ON M8Z 0A8\r\n              </span>\r\n            </p>\r\n            <iframe\r\n              title=\"google-map\"\r\n              src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2848.4225986611723!2d-79.51912848270673!3d43.62345496402142!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x882b37d29a6109d5%3A0x9c6a7f1d70f0128!2s1050+The+Queensway%2C+Etobicoke%2C+ON+M8Z+0A8!5e0!3m2!1sen!2sca!4v1563905780053!5m2!1sen!2sca\"\r\n              className=\"small-12 large-7 cell logistics__map\"\r\n              width=\"200\"\r\n              height=\"200\"\r\n              frameBorder=\"0\"\r\n              style={{ border: 0 }}\r\n              allowFullScreen\r\n            />\r\n          </Fragment>\r\n        )}\r\n        <input\r\n          onChange={handleChange}\r\n          value={values.fullName}\r\n          id=\"fullName\"\r\n          placeholder={`Full Name*`}\r\n          type=\"text\"\r\n          className=\"small-12 cell logistics__input\"\r\n        />\r\n        <div className=\"small-12 large-6 cell\">\r\n          <input\r\n            onChange={setEmail}\r\n            onBlur={checkEmail}\r\n            value={email}\r\n            id=\"email\"\r\n            placeholder={`Email*`}\r\n            type=\"email\"\r\n            className=\"logistics__input\"\r\n          />\r\n          {!isEmailValid && (\r\n            <p className=\"error-msg\">Please enter valid email</p>\r\n          )}\r\n        </div>\r\n        <Cleave\r\n          className=\"small-12 large-6 cell logistics__input\"\r\n          options={{ phone: true, phoneRegionCode: 'CA' }}\r\n          onChange={handleChange}\r\n          placeholder={`Phone Number*`}\r\n          id=\"phone\"\r\n          value={values.phone}\r\n        />\r\n        {deliveryOption === 'delivery' && (\r\n          <Fragment>\r\n            <input\r\n              className=\"small-12 cell logistics__input\"\r\n              type=\"text\"\r\n              id=\"address\"\r\n              onChange={handleChange}\r\n              value={values.address}\r\n              placeholder={`Address*`}\r\n            />\r\n            <input\r\n              className=\"small-12 cell logistics__input\"\r\n              type=\"text\"\r\n              id=\"address2\"\r\n              onChange={handleChange}\r\n              value={values.address2}\r\n              placeholder={`Address Line 2`}\r\n            />\r\n            <select\r\n              onChange={(e) => {\r\n                handleSelect(e.target.value);\r\n              }}\r\n              value={city}\r\n              id=\"city\"\r\n              className=\"small-12 large-6 cell logistics__input\"\r\n            >\r\n              <option value={`default`} disabled>\r\n                City*\r\n              </option>\r\n              {shipping.delivery_locations.map((location, index) => (\r\n                <option key={index} value={index}>{`${\r\n                  location.location\r\n                } ($${parseFloat(location.price).toFixed(2)})`}</option>\r\n              ))}\r\n            </select>\r\n            <Cleave\r\n              className=\"small-12 large-6 cell logistics__input\"\r\n              options={{ blocks: [3, 3], uppercase: true }}\r\n              id=\"postalCode\"\r\n              onChange={handleChange}\r\n              value={values.postalCode}\r\n              placeholder={`Postal Code`}\r\n            />\r\n          </Fragment>\r\n        )}\r\n        <input\r\n          onChange={handleChange}\r\n          value={values.specialInstructions}\r\n          id=\"specialInstructions\"\r\n          placeholder={`Special Instructions`}\r\n          type=\"text\"\r\n          className=\"small-12 cell logistics__input\"\r\n        />\r\n        {/* {shipping.delivery_times.map((time, index) => (\r\n          <div key={index} className=\"cell small-12 large-6\">\r\n            <SplitButton\r\n              text={time.timeframe}\r\n              isActive={deliveryTime === time.timeframe ? true : false}\r\n              handleClick={setDeliveryTime(time.timeframe)}\r\n            />\r\n          </div>\r\n        ))} */}\r\n        <div className=\"logistics__message cell small-12 font-normal\">{`Please note: Due to COVID-19, ${deliveryOption} will be between 10am - 7pm. A text message will be sent ${\r\n          deliveryOption === 'delivery'\r\n            ? `prior to delivery with the ETA.`\r\n            : `when food is ready for pick-up.`\r\n        }`}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logistics;\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport Table from \"../table/Table\";\r\nimport Logistics from \"../logistics/Logistics\";\r\n// import CardItem from \"../cards/CardItem_Title\";\r\nimport SplitButton from \"../SplitButton\";\r\nimport \"./section.scss\";\r\nimport { capitalize } from \"lodash\";\r\nconst useForm = initialValues => {\r\n    const [values, setValues] = useState(initialValues);\r\n    return [\r\n        values,\r\n        e => {\r\n            setValues({\r\n                ...values,\r\n                [e.target.id]: e.target.value,\r\n            });\r\n        },\r\n    ];\r\n};\r\nconst emailRegex = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\nconst Review = ({\r\n    addOns,\r\n    customizations,\r\n    selectedPackage,\r\n    selectedGoal,\r\n    shipping,\r\n    handleSelect,\r\n    selectedDelivery,\r\n    deliveryOption,\r\n    setDeliveryOption,\r\n    deliveryTime,\r\n    setDeliveryTime,\r\n    total,\r\n    isContactValid,\r\n    handleIsContactValid,\r\n    handleProceed,\r\n}) => {\r\n    let [submittedCust, setSubmittedCust] = useState(customizations);\r\n    const [paymentOption, setPaymentOption] = useState(\"cash\");\r\n    const setPayment = option => e => {\r\n        e.preventDefault();\r\n        setPaymentOption(option);\r\n    };\r\n    // const [cityIndex, setCityIndex] = useState(\"\");\r\n    const [cityValue, setCityValue] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [isEmailValid, setIsEmailValid] = useState(true);\r\n    const [values, handleChange] = useForm({\r\n        fullName: \"\",\r\n        // email: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n        address2: \"\",\r\n        // city: \"\",\r\n        postalCode: \"\",\r\n        specialInstructions: \"\",\r\n    });\r\n\r\n    const checkEmail = () => {\r\n        setIsEmailValid(emailRegex.test(email));\r\n        // setEmail(e);\r\n    };\r\n    const handleEmail = e => {\r\n        setEmail(e.target.value);\r\n        checkEmail();\r\n    };\r\n    useEffect(() => {\r\n        // const replacer = (key, value) =>\r\n        //     value === null || value.length === 0 ? \"none\" : value; // specify how you want to handle null values here\r\n        const header = Object.keys(customizations[0]);\r\n        const custCsv = customizations.map(row => {\r\n            //   console.log(row);\r\n            return header\r\n                .map(fieldName => {\r\n                    const formattedFieldName = fieldName\r\n                        .split(\"_\")\r\n                        .map(w => capitalize(w))\r\n                        .join(\" \");\r\n                    return fieldName === `customization_price`\r\n                        ? null\r\n                        : `${formattedFieldName}: ${\r\n                              row[fieldName].constructor === Object\r\n                                  ? row[fieldName] && row[fieldName].variation\r\n                                      ? row[fieldName].variation\r\n                                      : row[fieldName].post_title || `None`\r\n                                  : row[fieldName]\r\n                          }`;\r\n                    // return JSON.stringify(\r\n                    //     `${formattedFieldName} : ${row[fieldName]}`,\r\n                    //     replacer\r\n                    // );\r\n                })\r\n                .join(\"\\r\\n\");\r\n        });\r\n        const addOnCsv =\r\n            addOns.length > 0\r\n                ? addOns\r\n                      .map(row => {\r\n                          return `Snack: ${row.snack.post_title}\r\n                          Quantity: ${row.count}\r\n                          `;\r\n                      })\r\n                      .join(\"\\r\\n\")\r\n                : \"\";\r\n        const csv = [...custCsv, addOnCsv].join(\"\\r\\n\");\r\n        // console.log(csv);\r\n        setSubmittedCust(csv);\r\n        // console.log(customizations);\r\n        // console.log(submittedCust);\r\n    }, [addOns, customizations, submittedCust]);\r\n\r\n    useEffect(() => {\r\n        setCityValue(shipping.delivery_locations[+selectedDelivery]);\r\n        // console.log(cityValue);\r\n        return setCityValue(shipping.delivery_locations[+selectedDelivery]);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [cityValue, selectedDelivery]);\r\n\r\n    useEffect(() => {\r\n        // validate for when selected delivery method is delivery\r\n        if (deliveryOption === \"delivery\") {\r\n            if (\r\n                selectedDelivery !== \"default\" &&\r\n                values.fullName.length > 0 &&\r\n                values.phone.length > 0 &&\r\n                values.address.length > 0 &&\r\n                isEmailValid\r\n            ) {\r\n                handleIsContactValid(true);\r\n            } else {\r\n                handleIsContactValid(false);\r\n            }\r\n        } else {\r\n            //validate for when selected delivery method is pickup\r\n            if (\r\n                values.fullName.length > 0 &&\r\n                values.phone.length > 0 &&\r\n                isEmailValid\r\n            ) {\r\n                handleIsContactValid(true);\r\n            } else {\r\n                handleIsContactValid(false);\r\n            }\r\n        }\r\n        handleProceed();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [\r\n        deliveryOption,\r\n        selectedDelivery,\r\n        isEmailValid,\r\n        values.address,\r\n        values.fullName,\r\n        values.phone,\r\n    ]);\r\n    useEffect(() => {\r\n        handleProceed();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isContactValid]);\r\n    // useEffect(() => {\r\n    //     submittedCust.forEach(c => {\r\n    //         const veg = c.selectedVeg.join();\r\n    //         return { ...c, selectedVeg: veg };\r\n    //     });\r\n    //     console.log(submittedCust);\r\n    // }, [submittedCust]);\r\n    return (\r\n        <Fragment>\r\n            <section className=\"section section--review\">\r\n                <div className=\"section__item\">\r\n                    <h2 className=\"section__heading\">Review Your Order</h2>\r\n                    <p className=\"section__subheading\">\r\n                        Take a look at your orders and make sure that we have\r\n                        everything you want and need!\r\n                    </p>\r\n                    <div className=\"grid-x grid-margin-x section__grid\">\r\n                        <div className=\"cell small-12 large-6\">\r\n                            <Table\r\n                                customizations={customizations}\r\n                                addOns={addOns}\r\n                                selectedPackage={selectedPackage}\r\n                                goal={selectedGoal}\r\n                                shipping={shipping}\r\n                                selectedDelivery={selectedDelivery}\r\n                                deliveryOption={deliveryOption}\r\n                                total={total}\r\n                            />\r\n                        </div>\r\n                        <div className=\"cell small-12 large-6\">\r\n                            <Logistics\r\n                                handleSelect={handleSelect}\r\n                                shipping={shipping}\r\n                                setDeliveryOption={setDeliveryOption}\r\n                                deliveryOption={deliveryOption}\r\n                                values={values}\r\n                                handleChange={handleChange}\r\n                                city={\r\n                                    selectedDelivery === \"default\"\r\n                                        ? \"default\"\r\n                                        : selectedDelivery\r\n                                }\r\n                                email={email}\r\n                                setEmail={handleEmail}\r\n                                checkEmail={checkEmail}\r\n                                isEmailValid={isEmailValid}\r\n                                deliveryTime={deliveryTime}\r\n                                setDeliveryTime={setDeliveryTime}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"section section--payment\">\r\n                <div className=\"section__item\">\r\n                    <h2 className=\"section__heading\">Payment Option</h2>\r\n                    <p className=\"section__subheading\">\r\n                        Unfortunately, we currently do not accept pre-payment\r\n                        via credit card or debit card. Cash or e-Transfer only.\r\n                    </p>\r\n                    <div className=\"grid-x grid-margin-x section__grid align-center\">\r\n                        <div\r\n                            onClick={setPayment(\"cash\")}\r\n                            className={\r\n                                \"card text-center small-12 medium-6 large-4 card__item card__item--title \" +\r\n                                (paymentOption === \"cash\"\r\n                                    ? \"card__item--active\"\r\n                                    : \"\")\r\n                            }>\r\n                            <div className=\"card-divider\">{`Cash`}</div>\r\n                            <div className=\"card-section align-justify\">\r\n                                <p>{`Deposit Required. Paid on Day-Of.`}</p>\r\n                                <SplitButton\r\n                                    handleClick={setPayment(\"cash\")}\r\n                                    text={\r\n                                        paymentOption === \"cash\"\r\n                                            ? \"Selected\"\r\n                                            : \"Select\"\r\n                                    }\r\n                                    isActive={\r\n                                        paymentOption === \"cash\" ? true : false\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            onClick={setPayment(\"etransfer\")}\r\n                            className={\r\n                                \"card text-center small-12 medium-6 large-4 card__item card__item--title \" +\r\n                                (paymentOption === \"etransfer\"\r\n                                    ? \"card__item--active\"\r\n                                    : \"\")\r\n                            }>\r\n                            <div className=\"card-divider\">{`E-Transfer`}</div>\r\n                            <div className=\"card-section\">\r\n                                <p>\r\n                                    {`Paid to `}\r\n                                    <a href=\"mailto:roundaxxfitness@gmail.com\">\r\n                                        roundaxxfitness@gmail.com\r\n                                    </a>\r\n                                </p>\r\n                                <p>Transferred by Sunday 9PM latest</p>\r\n                                <SplitButton\r\n                                    handleClick={setPayment(\"etransfer\")}\r\n                                    text={\r\n                                        paymentOption === \"etransfer\"\r\n                                            ? \"Selected\"\r\n                                            : \"Select\"\r\n                                    }\r\n                                    isActive={\r\n                                        paymentOption === \"etransfer\"\r\n                                            ? true\r\n                                            : false\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <input type=\"hidden\" name=\"1\" value={values.fullName} />\r\n                <input\r\n                    type=\"hidden\"\r\n                    name=\"2\"\r\n                    value={selectedPackage.title.rendered}\r\n                />\r\n                <input\r\n                    type=\"hidden\"\r\n                    name=\"3\"\r\n                    value={selectedGoal.title.rendered}\r\n                />\r\n                <input type=\"hidden\" name=\"5\" value={total.toFixed(2)} />\r\n                <input type=\"hidden\" name=\"6\" value={deliveryOption} />\r\n                <input type=\"hidden\" name=\"7\" value={deliveryTime} />\r\n                <input type=\"hidden\" name=\"8\" value={paymentOption} />\r\n                <input type=\"hidden\" name=\"18\" value={email} />\r\n                <input type=\"hidden\" name=\"10\" value={values.phone} />\r\n                <input type=\"hidden\" name=\"11\" value={values.address} />\r\n                <input type=\"hidden\" name=\"12\" value={values.address2} />\r\n                <input\r\n                    type=\"hidden\"\r\n                    name=\"13\"\r\n                    value={cityValue?.location ?? \"\"}\r\n                />\r\n                <input type=\"hidden\" name=\"14\" value={values.postalCode} />\r\n                <input\r\n                    type=\"hidden\"\r\n                    name=\"15\"\r\n                    value={values.specialInstructions}\r\n                />\r\n                <input type=\"hidden\" name=\"16\" value={submittedCust} />\r\n                <input type=\"hidden\" name=\"17\" value={`No`} />\r\n            </section>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Review;\r\n","import React from \"react\";\r\n\r\nconst Total = ({\r\n  step,\r\n  itemCount,\r\n  packagePrice,\r\n  selectedGoal,\r\n  selectedDelivery,\r\n  deliveryOption,\r\n  totalCustomizations,\r\n  customizationsRemaining,\r\n  total\r\n}) => {\r\n  return (\r\n    <div className=\"total\">\r\n      {step === 2 && (\r\n        <span\r\n          className={\r\n            \"total__label \" + (step === 2 ? \"total__label--border-right\" : \"\")\r\n          }\r\n        >\r\n          {`${totalCustomizations -\r\n            customizationsRemaining} / ${totalCustomizations}`}{\" \"}\r\n          <span className=\"total__label--customize\">Customized</span>\r\n        </span>\r\n      )}\r\n      <span className=\"total__label\">{`${itemCount} Meals`}</span>\r\n      {total && <span className=\"total__price\">{`$${total.toFixed(2)}`}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Total;\r\n","import React, { Fragment, useState } from 'react';\r\n// import SplitButton from \"./SplitButton\";\r\n\r\nconst CardItemNumber = ({ group, itemsRemaining, handleItemsChange }) => {\r\n  // console.log(selected.id);\r\n  // console.log(group.id);\r\n  // const maxSnackCount = useContext(SelectedPackageContext);\r\n  const [count, setCount] = useState(0);\r\n  const increment = () => {\r\n    +itemsRemaining > 0 && setCount(count + 1);\r\n    +itemsRemaining > 0 && handleItemsChange(group, count + 1);\r\n  };\r\n  const decrement = () => {\r\n    count > 0 && setCount(count - 1);\r\n    count > 0 && handleItemsChange(group, count - 1);\r\n  };\r\n  // useEffect(() => {\r\n  //     setCount(\r\n  //         form?.selectedSnacks.find(snack => +snack.snack.id === +group.id)\r\n  //             ?.snack.count || 0\r\n  //     );\r\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, []);\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={\r\n          'card small-12 medium-6 large-4 card__item card__item--picture '\r\n        }\r\n        key={group.id}\r\n      >\r\n        {group?.thumbnail && (\r\n          <div\r\n            className=\"card-img card-img--no-filter\"\r\n            style={{ backgroundImage: `url(${group.thumbnail})` }}\r\n          />\r\n        )}\r\n        <div className=\"card-divider\">{group.post_title}</div>\r\n        <div className=\"text-center\">\r\n          {+group.acf.extra_charge\r\n            ? `+ $${parseFloat(group.acf.extra_charge).toFixed(2)}`\r\n            : null}\r\n        </div>\r\n        <div\r\n          style={{ paddingTop: +group.acf?.extra_charge ? 0 : '1rem' }}\r\n          className=\"card-section card-section--snack align-right\"\r\n        >\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n            }}\r\n            className={'input-group select-button select-button--is-snack'}\r\n          >\r\n            <span\r\n              onClick={decrement}\r\n              className={\r\n                'input-group-label select-button__icon select-button__icon--before fa fa-minus'\r\n              }\r\n            />\r\n            <span className=\"input-group-field select-button__text select-button__text--no-bg select-button__text--square\">\r\n              {count}\r\n            </span>\r\n            <span\r\n              onClick={increment}\r\n              className={\r\n                'input-group-label select-button__icon select-button__icon--after fa fa-plus'\r\n              }\r\n            />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CardItemNumber;\r\n","import React, { useContext } from 'react';\r\nimport CardItemNumber from './cards/CardItem_Number';\r\nimport FormContext from '../contexts/Form';\r\n\r\nconst Popup = ({ items, active, toggleModal, handleNoThanks }) => {\r\n  const form = useContext(FormContext);\r\n  return (\r\n    <div\r\n      className={`reveal-overlay`}\r\n      style={{ display: active ? 'block' : 'none' }}\r\n    >\r\n      <div\r\n        className=\"large reveal upsell\"\r\n        tabIndex=\"-1\"\r\n        style={{ display: active ? 'block' : 'none' }}\r\n      >\r\n        <button\r\n          onClick={handleNoThanks}\r\n          className=\"close-btn\"\r\n          aria-label=\"Close reveal\"\r\n          type=\"button\"\r\n        >\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n        <div className=\"modal-header grid-y align-center-middle\">\r\n          <h2 className=\"section__heading\" style={{ textAlign: 'center' }}>\r\n            Would you like to\r\n            <br className=\"show-for-large\" /> add a snack/juice?\r\n          </h2>\r\n          <p className=\"section__subheading\" style={{ marginBottom: '0.5rem' }}>\r\n            You can add up to {form.allowedAddons} snacks/juices to your order\r\n          </p>\r\n          <h5\r\n            className=\"section__heading\"\r\n            style={{ marginBottom: '1rem', textTransform: 'none' }}\r\n          >\r\n            $5.00 each\r\n          </h5>\r\n          <button\r\n            onClick={handleNoThanks}\r\n            type=\"button\"\r\n            className=\"pagination__item\"\r\n          >\r\n            No Thanks\r\n          </button>\r\n        </div>\r\n        <div className=\"grid-x grid-margin-x grid-container align-justify\">\r\n          {items?.map((group) => (\r\n            <CardItemNumber\r\n              itemsRemaining={form.snacksRemaining}\r\n              handleItemsChange={form.handleSnackChange}\r\n              key={group.id}\r\n              group={group}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"grid-x align-center\">\r\n          <button\r\n            className={'pagination__item pagination__item--active'}\r\n            type=\"button\"\r\n            onClick={toggleModal}\r\n          >\r\n            Add Items\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","import React, { Component, Fragment } from 'react';\r\nimport StepList from './steps/StepList';\r\nimport Choose from './form-sections/Choose';\r\nimport Pagination from './pagination/Pagination';\r\nimport Customize from './form-sections/Customize';\r\nimport Review from './form-sections/Review';\r\nimport Total from './Total';\r\nimport axios from 'axios';\r\nimport { isEmptyObject } from './utils';\r\nimport { NO_CARB, ALLOWED_ADDONS, ADDON_PRICE } from './constants';\r\nimport { FormProvider } from '../contexts/Form';\r\nimport Popup from './Popup';\r\n\r\nexport class Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 1,\r\n      isDataLoaded: false,\r\n      types: {},\r\n      packages: [],\r\n      goals: [],\r\n      carbs: [],\r\n      meats: [],\r\n      vegetables: [],\r\n      salads: [],\r\n      juices: [],\r\n      snacks: [],\r\n      fallMenu: [],\r\n      addOns: [],\r\n      addOnsRemaining: ALLOWED_ADDONS,\r\n      shippingOptions: null,\r\n      selectedPackage: {},\r\n      packageAmount: 1,\r\n      selectedGoal: {},\r\n      currentCustomizationCount: 1,\r\n      currentCustomizationId: 1,\r\n      customizationsRemaining: null,\r\n      totalCustomizations: 0,\r\n      currentCustomization: {},\r\n      customizations: [],\r\n      comments: '',\r\n      selectedDeliveryLocation: 'default',\r\n      deliveryOption: 'delivery',\r\n      deliveryTime: '',\r\n      isContactValid: false,\r\n      canProceed: false,\r\n      total: null,\r\n      modalActive: true,\r\n    };\r\n    this.baseURL = 'https://fitaxxmeals.com';\r\n  }\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.selectedPackage.id !== this.state.selectedPackage.id) {\r\n      this.setState({ customizations: [] });\r\n    }\r\n    if (\r\n      prevState.selectedPackage !== this.state.selectedPackage ||\r\n      prevState.selectedGoal !== this.state.selectedGoal ||\r\n      prevState.step !== this.state.step\r\n    ) {\r\n      this.handleProceed();\r\n    }\r\n    if (prevState.currentCustomization !== this.state.currentCustomization) {\r\n      this.handleProceed();\r\n    }\r\n    if (prevState.addOns !== this.state.addOns) {\r\n      this.setState({\r\n        addOnsRemaining:\r\n          ALLOWED_ADDONS -\r\n          +this.state.addOns.reduce((acc, curr) => acc + curr.count, 0),\r\n      });\r\n    }\r\n    if (\r\n      prevState.selectedPackage !== this.state.selectedPackage ||\r\n      prevState.selectedGoal !== this.state.selectedGoal ||\r\n      prevState.currentCustomization !== this.state.currentCustomization ||\r\n      prevState.step !== this.state.step ||\r\n      prevState.selectedDeliveryLocation !==\r\n        this.state.selectedDeliveryLocation ||\r\n      prevState.deliveryOption !== this.state.deliveryOption ||\r\n      prevState.addOns !== this.state.addOns\r\n    ) {\r\n      const total =\r\n        +this.state.selectedPackage?.acf?.price +\r\n        (this.state.selectedGoal.acf && this.state.selectedPackage.acf\r\n          ? +this.state.selectedPackage.acf.meal_count *\r\n            +this.state.selectedGoal.acf.portion_price\r\n          : 0) +\r\n        (this.state.selectedDeliveryLocation !== 'default' &&\r\n        this.state.deliveryOption === 'delivery'\r\n          ? +this.state.shippingOptions.delivery_locations[\r\n              this.state.selectedDeliveryLocation\r\n            ].price\r\n          : 0) +\r\n        (this.state.currentCustomization.carb !== NO_CARB &&\r\n        this.state.currentCustomization?.carb?.extra_charge\r\n          ? +this.state.currentCustomization.carb.extra_charge *\r\n            +this.state.currentCustomization.customization_quantity\r\n          : 0) +\r\n        (this.state.currentCustomization?.meat?.extra_charge\r\n          ? +this.state.currentCustomization.meat.extra_charge *\r\n            +this.state.currentCustomization.customization_quantity\r\n          : 0) +\r\n        (this.state.currentCustomization?.vegetable?.acf?.extra_charge\r\n          ? +this.state.currentCustomization.vegetable.acf.extra_charge *\r\n            +this.state.currentCustomization.customization_quantity\r\n          : 0) +\r\n        (this.state.currentCustomization?.fall_menu?.acf?.extra_charge\r\n          ? +this.state.currentCustomization.fall_menu.acf.extra_charge *\r\n            +this.state.currentCustomization.customization_quantity\r\n          : 0) +\r\n        this.state.customizations.reduce(\r\n          (total, current) => total + current.customization_price,\r\n          0\r\n        ) +\r\n        (this.state.addOns.length > 0\r\n          ? this.state.addOns.reduce((acc, curr) => acc + curr.count, 0) *\r\n            ADDON_PRICE\r\n          : 0);\r\n      this.setState({ total: total });\r\n    }\r\n  }\r\n  getData = async () => {\r\n    const getTypes = await axios.get(`${this.baseURL}/wp-json/wp/v2/types`);\r\n    const getPackages = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/packages?order=asc&per_page=100`\r\n    );\r\n    const getGoals = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/goals?order=asc&per_page=100`\r\n    );\r\n    const getCarbs = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/carbs?order=asc&per_page=100`\r\n    );\r\n    const getMeats = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/meats?order=asc&per_page=100`\r\n    );\r\n    const getVegetables = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/vegetables?order=asc&per_page=100`\r\n    );\r\n    const getShippingOptions = await axios.get(\r\n      `${this.baseURL}/wp-json/acf/v3/options/options`\r\n    );\r\n    const getSalads = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/salads?order=asc&per_page=100`\r\n    );\r\n    const getSnacks = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/snacks?order=asc&per_page=100`\r\n    );\r\n    const getFallMenu = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/fall_menu?order=asc&per_page=100`\r\n    );\r\n    const getJuices = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/juice?order=asc&per_page=100`\r\n    );\r\n    Promise.all([\r\n      getTypes,\r\n      getPackages,\r\n      getGoals,\r\n      getCarbs,\r\n      getMeats,\r\n      getVegetables,\r\n      getShippingOptions,\r\n      getSalads,\r\n      getSnacks,\r\n      getFallMenu,\r\n      getJuices,\r\n    ]).then(\r\n      ([\r\n        types,\r\n        packages,\r\n        goals,\r\n        carbs,\r\n        meats,\r\n        vegetables,\r\n        shippingOptions,\r\n        salads,\r\n        snacks,\r\n        fallMenu,\r\n        juices,\r\n      ]) => {\r\n        this.setState({\r\n          types: types.data,\r\n          packages: packages.data,\r\n          goals: goals.data,\r\n          carbs: carbs.data,\r\n          meats: meats.data,\r\n          vegetables: vegetables.data,\r\n          shippingOptions: shippingOptions.data.acf,\r\n          // deliveryTime: shippingOptions.data.acf.delivery_times[0].timeframe,\r\n          deliveryTime: ``,\r\n          salads: salads.data,\r\n          snacks: snacks.data,\r\n          fallMenu: fallMenu.data,\r\n          juices: juices.data,\r\n          isDataLoaded: true,\r\n        });\r\n      }\r\n    );\r\n    // console.log(this.state.packages);\r\n    // console.log(this.state.goals);\r\n    // console.log(this.state.carbs);\r\n  };\r\n  // Handle fields change\r\n  // handleChange = input => e => {\r\n  //     this.setState({ [input]: e.target.value });\r\n  // };\r\n  scrollToTop = () => {\r\n    document\r\n      .getElementById('form-anchor')\r\n      .scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n  };\r\n  handlePrevStepChange = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ step: this.state.step - 1 });\r\n  };\r\n  handleNextStepChange = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.step === 1) {\r\n      if (\r\n        isEmptyObject(this.state.selectedPackage) ||\r\n        isEmptyObject(this.state.selectedGoal)\r\n      ) {\r\n      } else {\r\n        this.setState({ step: this.state.step + 1 });\r\n        this.scrollToTop();\r\n      }\r\n    } else if (this.state.step === 2) {\r\n      // this.addCustomizationToOrder();\r\n      // save customization if valid and have customizations left to customize\r\n      if (\r\n        this.state.customizationsRemaining > 0 &&\r\n        isEmptyObject(this.state.currentCustomization.carb) &&\r\n        isEmptyObject(this.state.currentCustomization.meat) &&\r\n        !isEmptyObject(this.state.currentCustomization.fall_menu)\r\n      ) {\r\n        this.saveCustomization(this.state.currentCustomization);\r\n      } else if (\r\n        this.state.customizationsRemaining > 0 &&\r\n        !isEmptyObject(this.state.currentCustomization.carb) &&\r\n        !isEmptyObject(this.state.currentCustomization.meat) &&\r\n        isEmptyObject(this.state.currentCustomization.fall_menu)\r\n      ) {\r\n        this.saveCustomization(this.state.currentCustomization);\r\n      } else if (this.state.customizationsRemaining === 0) {\r\n        // if user has no customizations left to customize, simply go to next step without saving\r\n        this.setState({ step: this.state.step + 1 });\r\n      } else {\r\n        // else do nothing\r\n        return false;\r\n      }\r\n      // else {\r\n      //     this.setState({ step: this.state.step + 1 });\r\n      //     this.scrollToTop();\r\n      // }\r\n      if (\r\n        this.state.customizationsRemaining -\r\n          this.state.currentCustomizationCount >\r\n        0\r\n      ) {\r\n        this.setState({\r\n          step: 2,\r\n          currentCustomization: {},\r\n          currentCustomizationId: this.state.currentCustomizationId + 1,\r\n        });\r\n        this.scrollToTop();\r\n      } else {\r\n        this.setState({ step: this.state.step + 1 });\r\n        this.scrollToTop();\r\n      }\r\n    } else {\r\n      if (this.state.isContactValid) {\r\n        document.getElementById('order-form').submit();\r\n      }\r\n    }\r\n  };\r\n  addCustomizationToOrder = (customization) => {\r\n    // console.log(customization);\r\n    // const customizations = [...this.state.customizations, customization];\r\n    // console.log(customizations);\r\n    // this.saveCustomization(customizations);\r\n    this.setState({ currentCustomization: customization });\r\n  };\r\n  saveCustomization = (customization) => {\r\n    const customizations = [...this.state.customizations, customization];\r\n    this.setState({\r\n      customizations: customizations,\r\n      currentCustomization: {},\r\n      // currentCustomizationCount:\r\n      //     this.state.customizationsRemaining -\r\n      //     this.state.currentCustomizationCount,\r\n      currentCustomizationCount: 1,\r\n      customizationsRemaining:\r\n        this.state.customizationsRemaining -\r\n        this.state.currentCustomizationCount,\r\n    });\r\n  };\r\n  handleCustomizationAmountDecrement = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.currentCustomizationCount <= 1) {\r\n      return false;\r\n    } else {\r\n      this.setState({\r\n        currentCustomizationCount: +this.state.currentCustomizationCount - 1,\r\n      });\r\n    }\r\n  };\r\n  handleCustomizationAmountChange = (e) => {\r\n    if (e.target.value > +this.state.customizationsRemaining) {\r\n      this.setState({\r\n        currentCustomizationCount: +this.state.customizationsRemaining,\r\n      });\r\n    } else {\r\n      this.setState({ currentCustomizationCount: +e.target.value });\r\n    }\r\n  };\r\n  handleCustomizationAmountIncrement = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      +this.state.currentCustomizationCount >=\r\n      +this.state.customizationsRemaining\r\n    ) {\r\n      this.setState({\r\n        currentCustomizationCount: +this.state.customizationsRemaining,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        currentCustomizationCount: +this.state.currentCustomizationCount + 1,\r\n      });\r\n    }\r\n  };\r\n  handlePackageSelect = (selection) => (e) => {\r\n    e.preventDefault();\r\n    // console.log(selection);\r\n    if (selection.acf) {\r\n      this.setState({\r\n        selectedPackage: selection,\r\n        // currentCustomizationCount: +selection.acf.meal_count,\r\n        currentCustomizationCount: 1,\r\n        totalCustomizations: +selection.acf.meal_count,\r\n        customizationsRemaining: +selection.acf.meal_count,\r\n      });\r\n    }\r\n  };\r\n  handleProceed = () => {\r\n    if (this.state.step === 1) {\r\n      if (\r\n        !isEmptyObject(this.state.selectedPackage) &&\r\n        !isEmptyObject(this.state.selectedGoal)\r\n      ) {\r\n        this.setState({ canProceed: true });\r\n        // return true;\r\n      } else {\r\n        this.setState({ canProceed: false });\r\n        // return false;\r\n      }\r\n    }\r\n    // if (this.state.step === 2) {\r\n    //     if (\r\n    //         this.state.currentCustomization.carb &&\r\n    //         this.state.currentCustomization.meat\r\n    //     ) {\r\n    //         if (\r\n    //             this.state.currentCustomization.carb.length > 0 &&\r\n    //             this.state.currentCustomization.meat.length > 0\r\n    //         ) {\r\n    //             this.setState({ canProceed: true });\r\n    //             // return true;\r\n    //         } else {\r\n    //             this.setState({ canProceed: false });\r\n    //             // return false;\r\n    //         }\r\n    //     }\r\n    //     if (this.state.customizationsRemaining === 0) {\r\n    //         this.setState({ canProceed: true });\r\n    //     }\r\n    // }\r\n    // if (this.state.step === 3) {\r\n    //     if (this.state.isContactValid) {\r\n    //         this.setState({ canProceed: true });\r\n    //     } else {\r\n    //         this.setState({ canProceed: false });\r\n    //     }\r\n    // }\r\n  };\r\n  handleSelect = (state, selection) => (e) => {\r\n    e.preventDefault();\r\n    // console.log(selection);\r\n    this.setState({ [state]: selection });\r\n  };\r\n  handleDeliverySelect = (selected) => {\r\n    this.setState({ selectedDeliveryLocation: selected });\r\n  };\r\n  setDeliveryOption = (option) => (e) => {\r\n    e.preventDefault();\r\n    this.setState({ deliveryOption: option });\r\n  };\r\n  setDeliveryTime = (option) => (e) => {\r\n    e.preventDefault();\r\n    this.setState({ deliveryTime: option });\r\n  };\r\n  handleIsContactValid = (isValid) => {\r\n    this.setState({ isContactValid: isValid });\r\n  };\r\n  handleSnackChange = (snack, count) => {\r\n    this.setState({\r\n      addOns: [\r\n        ...this.state.addOns.filter(\r\n          (selectedSnack) => selectedSnack.snack.id !== snack.id\r\n        ),\r\n        { snack, count },\r\n      ]\r\n        .filter((s) => s.count > 0)\r\n        .sort((a, b) => a.snack.id - b.snack.id),\r\n    });\r\n  };\r\n  toggleModal = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ modalActive: !this.state.modalActive });\r\n  };\r\n  handleNoThanks = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      modalActive: !this.state.modalActive,\r\n      addOnsRemaining: 14,\r\n      addOns: [],\r\n    });\r\n  };\r\n  renderSections = () => {\r\n    const { step } = this.state;\r\n    if (!step) {\r\n      return (\r\n        <div className=\"spinner-container\">\r\n          <span className=\"spinner fa fa-spin fa-spinner fa-3x fa-fw\" />\r\n        </div>\r\n      );\r\n    }\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <Choose\r\n            meta={this.state.types}\r\n            packages={this.state.packages}\r\n            goals={this.state.goals}\r\n            handleSelect={this.handleSelect}\r\n            handlePackageSelect={this.handlePackageSelect}\r\n            selectedPackage={this.state.selectedPackage}\r\n            selectedGoal={this.state.selectedGoal}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <Customize\r\n            meta={this.state.types}\r\n            carbs={this.state.carbs}\r\n            meats={this.state.meats}\r\n            fallMenu={this.state.fallMenu}\r\n            customizations={this.state.customizations}\r\n            vegetables={this.state.vegetables}\r\n            salads={this.state.salads}\r\n            currentCustomizationId={this.state.currentCustomizationId}\r\n            customizationCount={this.state.currentCustomizationCount}\r\n            handleCustomizationAmountDecrement={\r\n              this.handleCustomizationAmountDecrement\r\n            }\r\n            handleCustomizationAmountChange={\r\n              this.handleCustomizationAmountChange\r\n            }\r\n            handleCustomizationAmountIncrement={\r\n              this.handleCustomizationAmountIncrement\r\n            }\r\n            addToOrder={this.addCustomizationToOrder}\r\n            customizationsRemaining={this.state.customizationsRemaining}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <>\r\n            <Review\r\n              customizations={this.state.customizations}\r\n              selectedPackage={this.state.selectedPackage}\r\n              selectedGoal={this.state.selectedGoal}\r\n              selectedDelivery={this.state.selectedDeliveryLocation}\r\n              shipping={this.state.shippingOptions}\r\n              handleSelect={this.handleDeliverySelect}\r\n              deliveryOption={this.state.deliveryOption}\r\n              setDeliveryOption={this.setDeliveryOption}\r\n              deliveryTime={this.state.deliveryTime}\r\n              setDeliveryTime={this.setDeliveryTime}\r\n              total={this.state.total}\r\n              isContactValid={this.state.isContactValid}\r\n              handleIsContactValid={this.handleIsContactValid}\r\n              handleProceed={this.handleProceed}\r\n              addOns={this.state.addOns}\r\n            />\r\n            <Popup\r\n              items={[\r\n                ...this.state.salads,\r\n                ...this.state.snacks,\r\n                ...this.state.juices,\r\n              ]}\r\n              active={this.state.modalActive}\r\n              toggleModal={this.toggleModal}\r\n              handleNoThanks={this.handleNoThanks}\r\n            />\r\n          </>\r\n        );\r\n      default:\r\n        return (\r\n          <div className=\"spinner-container\">\r\n            <span className=\"spinner fa fa-spin fa-spinner fa-3x fa-fw\" />\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n  render() {\r\n    if (!this.state.isDataLoaded) {\r\n      return (\r\n        <div className=\"spinner-container\">\r\n          <span className=\"spinner fa fa-spin fa-spinner fa-3x fa-fw\" />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <FormProvider\r\n          value={{\r\n            baseURL: this.baseURL,\r\n            handleSnackChange: this.handleSnackChange,\r\n            snacksRemaining: this.state.addOnsRemaining,\r\n            allowedAddons: ALLOWED_ADDONS,\r\n          }}\r\n        >\r\n          <div className=\"form__header grid-container grid-x align-justify align-middle\">\r\n            <StepList step={this.state.step} />\r\n            <Total\r\n              step={this.state.step}\r\n              itemCount={+this.state.totalCustomizations}\r\n              packagePrice={this.state.selectedPackage}\r\n              selectedGoal={this.state.selectedGoal}\r\n              selectedDelivery={this.state.selectedDeliveryLocation}\r\n              deliveryOption={this.state.deliveryOption}\r\n              totalCustomizations={this.state.totalCustomizations}\r\n              customizationsRemaining={this.state.customizationsRemaining}\r\n              total={this.state.total}\r\n            />\r\n          </div>\r\n          <div className=\"grid-container\">{this.renderSections()}</div>\r\n          <Pagination\r\n            canProceed={this.state.canProceed}\r\n            handleNextStepChange={this.handleNextStepChange}\r\n            handlePrevStepChange={this.handlePrevStepChange}\r\n            step={this.state.step}\r\n          />\r\n        </FormProvider>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport CardItem from \"../cards/CardItem_Title\";\r\nimport \"./section.scss\";\r\n// import axios from \"axios\";\r\n\r\nexport class Choose extends Component {\r\n    state = {\r\n        packages: [],\r\n        // selectedPackage: null\r\n    };\r\n\r\n    render() {\r\n        // console.log(this.props);\r\n        const {\r\n            packages,\r\n            // handleSelect,\r\n            selectedPackage,\r\n            // selectedGoal,\r\n            handlePackageSelect,\r\n            // packageAmount\r\n        } = this.props;\r\n        const packageList = packages.map(packageItem => (\r\n            <CardItem\r\n                key={packageItem.id}\r\n                item={packageItem}\r\n                stateKey=\"selectedPackage\"\r\n                selectedItem={selectedPackage}\r\n                handleSelect={handlePackageSelect}\r\n                handlePackageSelect={handlePackageSelect}\r\n                buttonText={`$${parseFloat(packageItem.acf.price).toFixed(2)}`}\r\n                description={`${packageItem.acf.size} Snacks`}\r\n                group=\"packages\"\r\n                cardTitle={packageItem.title.rendered}\r\n            />\r\n        ));\r\n        return (\r\n            <section className=\"section section--choose\">\r\n                <div className=\"section__item\">\r\n                    <h2 className=\"section__heading\">Select Snack Package</h2>\r\n                    <p className=\"section__subheading\">\r\n                        Choose how many snacks you would like.\r\n                    </p>\r\n                    <div className=\"section__grid grid-x grid-margin-x align-large-justify align-spaced\">\r\n                        {packageList}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Choose;\r\n","import React from \"react\";\r\n\r\nconst SelectedPackageContext = React.createContext({});\r\n\r\nexport const SelectedPackageProvider = SelectedPackageContext.Provider;\r\nexport const SelectedPackageConsumer = SelectedPackageContext.Consumer;\r\n\r\nexport default SelectedPackageContext;\r\n","import React, { useContext } from 'react';\r\n// import SelectDropdown from \"./SelectDropdown\";\r\nimport CardItemNumber from './CardItem_Number';\r\nimport SelectedPackageContext from '../../contexts/SelectedPackage';\r\nimport FormContext from '../../contexts/Form';\r\n\r\nexport const CardListSnack = ({\r\n  groups,\r\n  handleSelect,\r\n  hasNone,\r\n  stateKey,\r\n  selected,\r\n  selectedVariant,\r\n  setVariant,\r\n  groupName,\r\n  variantKey,\r\n}) => {\r\n  const maxSnackCount = useContext(SelectedPackageContext);\r\n  const form = useContext(FormContext);\r\n  const foodItemRow =\r\n    groups &&\r\n    groups.map((group) => (\r\n      <CardItemNumber\r\n        itemsRemaining={form.snacksRemaining}\r\n        handleItemsChange={form.handleSnackChange}\r\n        key={group.id}\r\n        group={group}\r\n      />\r\n    ));\r\n  return (\r\n    <div className=\"section__item\">\r\n      <h2 className=\"section__heading\">{`Select your ${groupName}s`}</h2>\r\n      <p className=\"section__subheading\">{`Select ${maxSnackCount?.acf?.size} snacks`}</p>\r\n      <div className=\"section__grid grid-x grid-margin-x align-center\">\r\n        {foodItemRow}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardListSnack;\r\n","import React, { useContext } from 'react';\r\nimport CardList from '../cards/CardListSnack';\r\nimport './section.scss';\r\nimport FormContext from '../../contexts/Form';\r\n\r\nconst Customize = ({\r\n  carbs,\r\n  meats,\r\n  vegetables,\r\n  snacks,\r\n  salads,\r\n  customizationCount,\r\n  addToOrder,\r\n  currentCustomizationId,\r\n  // customizations,\r\n  customizationsRemaining,\r\n  handleCustomizationAmountIncrement,\r\n  handleCustomizationAmountChange,\r\n  handleCustomizationAmountDecrement,\r\n  comments,\r\n}) => {\r\n  const form = useContext(FormContext);\r\n  return (\r\n    <section className=\"section section--customize\">\r\n      <CardList groupName=\"snack\" groups={salads} />\r\n      <hr />\r\n      <div className=\"section__item\">\r\n        <h3 className=\"section__heading\">Comments</h3>\r\n        <p className=\"section__subheading\">\r\n          Please add any comments for your order\r\n        </p>\r\n        <p className=\"section__subheading\">\r\n          <em>\r\n            Please Note: Items in salad can be removed but not substituted. For\r\n            more information,{' '}\r\n            <a href={`${form.baseURL}/frequently-asked-questions`}>\r\n              click here\r\n            </a>\r\n          </em>\r\n        </p>\r\n        <div className=\"customize__textarea-container\">\r\n          <textarea\r\n            className=\"customize__textarea\"\r\n            value={comments}\r\n            onChange={(e) => form.handleComments(e.target.value)}\r\n            name=\"\"\r\n            id=\"\"\r\n            rows={4}\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Customize;\r\n","import React, { Fragment, useContext } from 'react';\r\nimport './table.scss';\r\nimport FormContext from '../../contexts/Form';\r\n// const isEmptyObject = object => {\r\n//     if (Object.entries(object).length === 0 && object.constructor === Object) {\r\n//         return true;\r\n//     } else {\r\n//         return false;\r\n//     }\r\n// };\r\nconst Table = ({\r\n  customizations,\r\n  selectedPackage,\r\n  goal,\r\n  shipping,\r\n  selectedDelivery,\r\n  deliveryOption,\r\n  total,\r\n  snacks,\r\n}) => {\r\n  const form = useContext(FormContext);\r\n  return (\r\n    <table className=\"table unstriped\">\r\n      <thead className=\"table__head\">\r\n        <tr>\r\n          <th>Order Summary</th>\r\n          <th className=\"text-center\">QTY</th>\r\n          <th className=\"text-center\">Price</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr className=\"table__row table__row--bold\">\r\n          <td>{selectedPackage.title.rendered}</td>\r\n          <td />\r\n          <td>{`$${parseFloat(selectedPackage.acf.price).toFixed(2)}`}</td>\r\n        </tr>\r\n        {snacks?.map((snack, index) => (\r\n          <Fragment key={index}>\r\n            <tr className=\"table__row table__row--bold table__row--indent-1\">\r\n              <td>{`${snack.snack.post_title}`}</td>\r\n              <td className=\"text-center\">{`x${snack.count}`}</td>\r\n              <td />\r\n            </tr>\r\n          </Fragment>\r\n        ))}\r\n        {form.comments.length > 0 && (\r\n          <tr className=\"table__row\">\r\n            <td\r\n              dangerouslySetInnerHTML={{\r\n                __html: form.comments.replace(/\\n/g, '<br>'),\r\n              }}\r\n            />\r\n            <td />\r\n            <td />\r\n          </tr>\r\n        )}\r\n        {selectedDelivery !== 'default' && deliveryOption === 'delivery' && (\r\n          <Fragment>\r\n            <tr className=\"table__row table__row--bold\">\r\n              <td>Delivery Location</td>\r\n              <td />\r\n              <td />\r\n            </tr>\r\n            <tr className=\"table__row table__row--indent-1\">\r\n              <td>{shipping.delivery_locations[selectedDelivery].location}</td>\r\n              <td />\r\n              <td>{`$${parseFloat(\r\n                shipping.delivery_locations[selectedDelivery].price\r\n              ).toFixed(2)}`}</td>\r\n            </tr>\r\n          </Fragment>\r\n        )}\r\n      </tbody>\r\n      <tfoot className=\"table__footer\">\r\n        <tr>\r\n          <th>Order Total</th>\r\n          <th />\r\n          <th className=\"text-center\">{`$${total.toFixed(2)}`}</th>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport Table from \"../table/TableSnack\";\r\nimport Logistics from \"../logistics/Logistics\";\r\n// import CardItem from \"../cards/CardItem_Title\";\r\nimport SplitButton from \"../SplitButton\";\r\nimport \"./section.scss\";\r\nimport { capitalize } from \"lodash\";\r\nconst useForm = initialValues => {\r\n    const [values, setValues] = useState(initialValues);\r\n    return [\r\n        values,\r\n        e => {\r\n            setValues({\r\n                ...values,\r\n                [e.target.id]: e.target.value,\r\n            });\r\n        },\r\n    ];\r\n};\r\nconst emailRegex = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\nconst Review = ({\r\n    snacks,\r\n    customizations,\r\n    selectedPackage,\r\n    selectedGoal,\r\n    shipping,\r\n    handleSelect,\r\n    selectedDelivery,\r\n    deliveryOption,\r\n    setDeliveryOption,\r\n    deliveryTime,\r\n    setDeliveryTime,\r\n    total,\r\n    isContactValid,\r\n    handleIsContactValid,\r\n    handleProceed,\r\n}) => {\r\n    const [submittedCust, setSubmittedCust] = useState(\"\");\r\n    const [paymentOption, setPaymentOption] = useState(\"cash\");\r\n    const setPayment = option => e => {\r\n        e.preventDefault();\r\n        setPaymentOption(option);\r\n    };\r\n    // const [cityIndex, setCityIndex] = useState(\"\");\r\n    const [cityValue, setCityValue] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [isEmailValid, setIsEmailValid] = useState(true);\r\n    const [values, handleChange] = useForm({\r\n        fullName: \"\",\r\n        // email: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n        address2: \"\",\r\n        // city: \"\",\r\n        postalCode: \"\",\r\n        specialInstructions: \"\",\r\n    });\r\n\r\n    const checkEmail = () => {\r\n        setIsEmailValid(emailRegex.test(email));\r\n        // setEmail(e);\r\n    };\r\n    const handleEmail = e => {\r\n        setEmail(e.target.value);\r\n        checkEmail();\r\n    };\r\n    useEffect(() => {\r\n        // const replacer = (key, value) =>\r\n        //     value === null || value.length === 0 ? \"none\" : value; // specify how you want to handle null values here\r\n        const header = Object.keys(snacks[0]);\r\n        let csv = snacks.map(row => {\r\n            //   console.log(row);\r\n            return header\r\n                .map(fieldName => {\r\n                    const formattedFieldName = fieldName\r\n                        .split(\"_\")\r\n                        .map(w => capitalize(w))\r\n                        .join(\" \");\r\n                    return fieldName === `customization_price`\r\n                        ? null\r\n                        : `${formattedFieldName}: ${\r\n                              row[fieldName].constructor === Object\r\n                                  ? row[fieldName] && row[fieldName].variation\r\n                                      ? row[fieldName].variation\r\n                                      : row[fieldName].post_title || `None`\r\n                                  : row[fieldName]\r\n                          }`;\r\n                    // return JSON.stringify(\r\n                    //     `${formattedFieldName} : ${row[fieldName]}`,\r\n                    //     replacer\r\n                    // );\r\n                })\r\n                .join(\"\\r\\n\");\r\n        });\r\n        csv = csv.join(\"\\r\\n\");\r\n        // console.log(csv);\r\n        setSubmittedCust(csv);\r\n        // console.log(customizations);\r\n        // console.log(submittedCust);\r\n    }, [snacks, submittedCust]);\r\n\r\n    useEffect(() => {\r\n        setCityValue(shipping.delivery_locations[+selectedDelivery]);\r\n        // console.log(cityValue);\r\n        return setCityValue(shipping.delivery_locations[+selectedDelivery]);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [cityValue, selectedDelivery]);\r\n\r\n    useEffect(() => {\r\n        // validate for when selected delivery method is delivery\r\n        if (deliveryOption === \"delivery\") {\r\n            if (\r\n                selectedDelivery !== \"default\" &&\r\n                values.fullName.length > 0 &&\r\n                values.phone.length > 0 &&\r\n                values.address.length > 0 &&\r\n                isEmailValid\r\n            ) {\r\n                handleIsContactValid(true);\r\n            } else {\r\n                handleIsContactValid(false);\r\n            }\r\n        } else {\r\n            //validate for when selected delivery method is pickup\r\n            if (\r\n                values.fullName.length > 0 &&\r\n                values.phone.length > 0 &&\r\n                isEmailValid\r\n            ) {\r\n                handleIsContactValid(true);\r\n            } else {\r\n                handleIsContactValid(false);\r\n            }\r\n        }\r\n        handleProceed();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [\r\n        deliveryOption,\r\n        selectedDelivery,\r\n        isEmailValid,\r\n        values.address,\r\n        values.fullName,\r\n        values.phone,\r\n    ]);\r\n    useEffect(() => {\r\n        handleProceed();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isContactValid]);\r\n    // useEffect(() => {\r\n    //     submittedCust.forEach(c => {\r\n    //         const veg = c.selectedVeg.join();\r\n    //         return { ...c, selectedVeg: veg };\r\n    //     });\r\n    //     console.log(submittedCust);\r\n    // }, [submittedCust]);\r\n    return (\r\n        <Fragment>\r\n            <section className=\"section section--review\">\r\n                <div className=\"section__item\">\r\n                    <h2 className=\"section__heading\">Review Your Order</h2>\r\n                    <p className=\"section__subheading\">\r\n                        Take a look at your orders and make sure that we have\r\n                        everything you want and need!\r\n                    </p>\r\n                    <div className=\"grid-x grid-margin-x section__grid\">\r\n                        <div className=\"cell small-12 large-6\">\r\n                            <Table\r\n                                snacks={snacks}\r\n                                selectedPackage={selectedPackage}\r\n                                shipping={shipping}\r\n                                selectedDelivery={selectedDelivery}\r\n                                deliveryOption={deliveryOption}\r\n                                total={total}\r\n                            />\r\n                        </div>\r\n                        <div className=\"cell small-12 large-6\">\r\n                            <Logistics\r\n                                handleSelect={handleSelect}\r\n                                shipping={shipping}\r\n                                setDeliveryOption={setDeliveryOption}\r\n                                deliveryOption={deliveryOption}\r\n                                values={values}\r\n                                handleChange={handleChange}\r\n                                city={\r\n                                    selectedDelivery === \"default\"\r\n                                        ? \"default\"\r\n                                        : selectedDelivery\r\n                                }\r\n                                email={email}\r\n                                setEmail={handleEmail}\r\n                                checkEmail={checkEmail}\r\n                                isEmailValid={isEmailValid}\r\n                                deliveryTime={deliveryTime}\r\n                                setDeliveryTime={setDeliveryTime}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"section section--payment\">\r\n                <div className=\"section__item\">\r\n                    <h2 className=\"section__heading\">Payment Option</h2>\r\n                    <p className=\"section__subheading\">\r\n                        Unfortunately, we currently do not accept pre-payment\r\n                        via credit card or debit card. Cash or e-Transfer only.\r\n                    </p>\r\n                    <div className=\"grid-x grid-margin-x section__grid align-center\">\r\n                        <div\r\n                            onClick={setPayment(\"cash\")}\r\n                            className={\r\n                                \"card text-center small-12 medium-6 large-4 card__item card__item--title \" +\r\n                                (paymentOption === \"cash\"\r\n                                    ? \"card__item--active\"\r\n                                    : \"\")\r\n                            }>\r\n                            <div className=\"card-divider\">{`Cash`}</div>\r\n                            <div className=\"card-section align-justify\">\r\n                                <p>{`Deposit Required. Paid on Day-Of.`}</p>\r\n                                <SplitButton\r\n                                    handleClick={setPayment(\"cash\")}\r\n                                    text={\r\n                                        paymentOption === \"cash\"\r\n                                            ? \"Selected\"\r\n                                            : \"Select\"\r\n                                    }\r\n                                    isActive={\r\n                                        paymentOption === \"cash\" ? true : false\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            onClick={setPayment(\"etransfer\")}\r\n                            className={\r\n                                \"card text-center small-12 medium-6 large-4 card__item card__item--title \" +\r\n                                (paymentOption === \"etransfer\"\r\n                                    ? \"card__item--active\"\r\n                                    : \"\")\r\n                            }>\r\n                            <div className=\"card-divider\">{`E-Transfer`}</div>\r\n                            <div className=\"card-section\">\r\n                                <p>\r\n                                    {`Paid to `}\r\n                                    <a href=\"mailto:roundaxxfitness@gmail.com\">\r\n                                        roundaxxfitness@gmail.com\r\n                                    </a>\r\n                                </p>\r\n                                <p>Transferred by Sunday 9PM latest</p>\r\n                                <SplitButton\r\n                                    handleClick={setPayment(\"etransfer\")}\r\n                                    text={\r\n                                        paymentOption === \"etransfer\"\r\n                                            ? \"Selected\"\r\n                                            : \"Select\"\r\n                                    }\r\n                                    isActive={\r\n                                        paymentOption === \"etransfer\"\r\n                                            ? true\r\n                                            : false\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <input type=\"hidden\" name=\"1\" value={values.fullName} />\r\n                <input\r\n                    type=\"hidden\"\r\n                    name=\"2\"\r\n                    value={selectedPackage.title.rendered}\r\n                />\r\n                <input type=\"hidden\" name=\"5\" value={total.toFixed(2)} />\r\n                <input type=\"hidden\" name=\"6\" value={deliveryOption} />\r\n                <input type=\"hidden\" name=\"7\" value={deliveryTime} />\r\n                <input type=\"hidden\" name=\"8\" value={paymentOption} />\r\n                <input type=\"hidden\" name=\"18\" value={email} />\r\n                <input type=\"hidden\" name=\"10\" value={values.phone} />\r\n                <input type=\"hidden\" name=\"11\" value={values.address} />\r\n                <input type=\"hidden\" name=\"12\" value={values.address2} />\r\n                <input\r\n                    type=\"hidden\"\r\n                    name=\"13\"\r\n                    value={cityValue?.location ?? \"\"}\r\n                />\r\n                <input type=\"hidden\" name=\"14\" value={values.postalCode} />\r\n                <input\r\n                    type=\"hidden\"\r\n                    name=\"15\"\r\n                    value={values.specialInstructions}\r\n                />\r\n                <input type=\"hidden\" name=\"16\" value={submittedCust} />\r\n                <input type=\"hidden\" name=\"17\" value={`No`} />\r\n            </section>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Review;\r\n","import React from 'react';\r\n\r\nconst TotalSnack = ({\r\n  step,\r\n  itemCount,\r\n  packagePrice,\r\n  selectedGoal,\r\n  selectedDelivery,\r\n  deliveryOption,\r\n  totalCustomizations,\r\n  customizationsRemaining,\r\n  total,\r\n}) => {\r\n  return (\r\n    <div className=\"total\">\r\n      <span className=\"total__label\">{`${itemCount || 0} Snacks`}</span>\r\n      {total && <span className=\"total__price\">{`$${total.toFixed(2)}`}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalSnack;\r\n","import React, { Component } from 'react';\r\nimport StepList from './steps/StepList';\r\nimport Choose from './snack-steps/Choose';\r\nimport Customize from './snack-steps/Customize';\r\nimport Review from './snack-steps/Review';\r\nimport Pagination from './pagination/Pagination';\r\nimport Total from './TotalSnack';\r\nimport { SelectedPackageProvider } from '../contexts/SelectedPackage';\r\nimport axios from 'axios';\r\nimport { FormProvider } from '../contexts/Form';\r\n\r\nexport class FormSnack extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 1,\r\n      isDataLoaded: false,\r\n      types: {},\r\n      packages: [],\r\n      goals: [],\r\n      salads: [],\r\n      snackSizes: [],\r\n      snacks: [],\r\n      selectedSnacks: [],\r\n      shippingOptions: null,\r\n      selectedPackage: {},\r\n      packageAmount: 1,\r\n      selectedGoal: {},\r\n      currentCustomizationCount: 1,\r\n      currentCustomizationId: 1,\r\n      customizationsRemaining: null,\r\n      snacksRemaining: null,\r\n      totalCustomizations: 0,\r\n      currentCustomization: {},\r\n      customizations: [],\r\n      comments: '',\r\n      selectedDeliveryLocation: 'default',\r\n      deliveryOption: 'delivery',\r\n      deliveryTime: '',\r\n      isContactValid: false,\r\n      canProceed: false,\r\n      total: null,\r\n    };\r\n    this.baseURL = this.props?.homeUrl || 'https://fitaxxmeals.com';\r\n  }\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevState.selectedPackage !== this.state.selectedPackage ||\r\n      prevState.step !== this.state.step\r\n    ) {\r\n      this.handleProceed();\r\n    }\r\n    if (\r\n      prevState.selectedPackage !== this.state.selectedPackage ||\r\n      prevState.step !== this.state.step ||\r\n      prevState.selectedDeliveryLocation !==\r\n        this.state.selectedDeliveryLocation ||\r\n      prevState.deliveryOption !== this.state.deliveryOption\r\n    ) {\r\n      const total =\r\n        +this.state.selectedPackage?.acf?.price +\r\n        (this.state.selectedDeliveryLocation !== 'default' &&\r\n        this.state.deliveryOption === 'delivery'\r\n          ? +this.state.shippingOptions.delivery_locations[\r\n              this.state.selectedDeliveryLocation\r\n            ].price\r\n          : 0);\r\n      this.setState({ total });\r\n    }\r\n    if (prevState.selectedSnacks !== this.state.selectedSnacks) {\r\n      this.setState({\r\n        snacksRemaining:\r\n          +this.state.selectedPackage?.acf?.size -\r\n          +this.state.selectedSnacks.reduce((acc, curr) => acc + curr.count, 0),\r\n      });\r\n    }\r\n  }\r\n  getData = async () => {\r\n    const getTypes = await axios.get(`${this.baseURL}/wp-json/wp/v2/types`);\r\n    const getPackages = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/packages?order=asc&per_page=100`\r\n    );\r\n    const getGoals = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/goals?order=asc&per_page=100`\r\n    );\r\n    const getShippingOptions = await axios.get(\r\n      `${this.baseURL}/wp-json/acf/v3/options/options`\r\n    );\r\n    const getSalads = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/salads?order=asc&per_page=100`\r\n    );\r\n    const getSnacks = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/snacks?order=asc&per_page=100`\r\n    );\r\n    const getSnackSizes = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/snack_sizes?order=asc&per_page=100`\r\n    );\r\n    Promise.all([\r\n      getTypes,\r\n      getPackages,\r\n      getGoals,\r\n      getShippingOptions,\r\n      getSalads,\r\n      getSnacks,\r\n      getSnackSizes,\r\n    ]).then(\r\n      ([\r\n        types,\r\n        packages,\r\n        goals,\r\n        shippingOptions,\r\n        salads,\r\n        snacks,\r\n        snackSizes,\r\n      ]) => {\r\n        this.setState({\r\n          types: types.data,\r\n          packages: packages.data,\r\n          goals: goals.data,\r\n          shippingOptions: shippingOptions.data.acf,\r\n          // deliveryTime: shippingOptions.data.acf.delivery_times[0].timeframe,\r\n          deliveryTime: ``,\r\n          salads: salads.data,\r\n          snacks: snacks.data,\r\n          snackSizes: snackSizes.data,\r\n          isDataLoaded: true,\r\n        });\r\n      }\r\n    );\r\n    // console.log(this.state.salads);\r\n    // console.log(this.state.packages);\r\n    // console.log(this.state.goals);\r\n    // console.log(this.state.carbs);\r\n  };\r\n  // Handle fields change\r\n  // handleChange = input => e => {\r\n  //     this.setState({ [input]: e.target.value });\r\n  // };\r\n  scrollToTop = () => {\r\n    document\r\n      .getElementById('form-anchor')\r\n      .scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n  };\r\n  isEmptyObject = (object) => {\r\n    if (Object.entries(object).length === 0 && object.constructor === Object) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  handlePrevStepChange = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ step: this.state.step - 1 });\r\n  };\r\n  handleNextStepChange = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.step === 1) {\r\n      if (this.isEmptyObject(this.state.selectedPackage)) {\r\n      } else {\r\n        this.setState({ step: this.state.step + 1 });\r\n        this.scrollToTop();\r\n      }\r\n    } else if (this.state.step === 2) {\r\n      // this.addCustomizationToOrder();\r\n      if (this.state.snacksRemaining === 0) {\r\n        // if user has no customizations left to customize, simply go to next step without saving\r\n        this.setState({ step: this.state.step + 1 });\r\n      } else {\r\n        // else do nothing\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.state.isContactValid) {\r\n        document.getElementById('order-form').submit();\r\n      }\r\n    }\r\n  };\r\n  handlePackageSelect = (selection) => (e) => {\r\n    e.preventDefault();\r\n    // console.log(selection);\r\n    if (selection.acf) {\r\n      this.setState({\r\n        selectedPackage: selection,\r\n        snacksRemaining: +selection.acf.size,\r\n      });\r\n    }\r\n  };\r\n  handleSnackChange = (snack, count) => {\r\n    this.setState({\r\n      selectedSnacks: [\r\n        ...this.state.selectedSnacks.filter(\r\n          (selectedSnack) => selectedSnack.snack.id !== snack.id\r\n        ),\r\n        { snack, count },\r\n      ]\r\n        .filter((s) => s.count > 0)\r\n        .sort((a, b) => a.snack.id - b.snack.id),\r\n    });\r\n  };\r\n  handleComments = (comments) => {\r\n    this.setState({\r\n      comments,\r\n    });\r\n  };\r\n  handleProceed = () => {\r\n    if (this.state.step === 1) {\r\n      if (!this.isEmptyObject(this.state.selectedPackage)) {\r\n        this.setState({ canProceed: true });\r\n        // return true;\r\n      } else {\r\n        this.setState({ canProceed: false });\r\n        // return false;\r\n      }\r\n    }\r\n  };\r\n  handleSelect = (state, selection) => (e) => {\r\n    e.preventDefault();\r\n    // console.log(selection);\r\n    this.setState({ [state]: selection });\r\n  };\r\n  handleDeliverySelect = (selected) => {\r\n    this.setState({ selectedDeliveryLocation: selected });\r\n  };\r\n  setDeliveryOption = (option) => (e) => {\r\n    e.preventDefault();\r\n    this.setState({ deliveryOption: option });\r\n  };\r\n  setDeliveryTime = (option) => (e) => {\r\n    e.preventDefault();\r\n    this.setState({ deliveryTime: option });\r\n  };\r\n  handleIsContactValid = (isValid) => {\r\n    this.setState({ isContactValid: isValid });\r\n  };\r\n  renderSections = () => {\r\n    const { step } = this.state;\r\n    if (!step) {\r\n      return (\r\n        <div className=\"spinner-container\">\r\n          <span className=\"spinner fa fa-spin fa-spinner fa-3x fa-fw\" />\r\n        </div>\r\n      );\r\n    }\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <Choose\r\n            meta={this.state.types}\r\n            packages={this.state.snackSizes}\r\n            // goals={this.state.goals}\r\n            // handleSelect={this.handleSelect}\r\n            handlePackageSelect={this.handlePackageSelect}\r\n            selectedPackage={this.state.selectedPackage}\r\n            // selectedGoal={this.state.selectedGoal}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <Customize\r\n            // snacks={this.state.snacks}\r\n            salads={[...this.state.salads, ...this.state.snacks]}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <Review\r\n            snacks={this.state.selectedSnacks}\r\n            selectedPackage={this.state.selectedPackage}\r\n            selectedDelivery={this.state.selectedDeliveryLocation}\r\n            shipping={this.state.shippingOptions}\r\n            handleSelect={this.handleDeliverySelect}\r\n            deliveryOption={this.state.deliveryOption}\r\n            setDeliveryOption={this.setDeliveryOption}\r\n            deliveryTime={this.state.deliveryTime}\r\n            setDeliveryTime={this.setDeliveryTime}\r\n            total={this.state.total}\r\n            isContactValid={this.state.isContactValid}\r\n            handleIsContactValid={this.handleIsContactValid}\r\n            handleProceed={this.handleProceed}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <div className=\"spinner-container\">\r\n            <span className=\"spinner fa fa-spin fa-spinner fa-3x fa-fw\" />\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n  render() {\r\n    if (!this.state.isDataLoaded) {\r\n      return (\r\n        <div className=\"spinner-container\">\r\n          <span className=\"spinner fa fa-spin fa-spinner fa-3x fa-fw\" />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <FormProvider\r\n        value={{\r\n          baseURL: this.baseURL,\r\n          handleSnackChange: this.handleSnackChange,\r\n          snacksRemaining: this.state.snacksRemaining,\r\n          handleComments: this.handleComments,\r\n          comments: this.state.comments,\r\n          selectedSnacks: this.state.selectedSnacks,\r\n        }}\r\n      >\r\n        <SelectedPackageProvider value={this.state?.selectedPackage}>\r\n          <div className=\"form__header grid-container grid-x align-justify align-middle\">\r\n            <StepList step={this.state.step} />\r\n            <Total\r\n              itemCount={+this.state?.selectedPackage?.acf?.size}\r\n              total={this.state.total}\r\n            />\r\n          </div>\r\n          <div className=\"grid-container\">{this.renderSections()}</div>\r\n          <Pagination\r\n            canProceed={this.state.canProceed}\r\n            handleNextStepChange={this.handleNextStepChange}\r\n            handlePrevStepChange={this.handlePrevStepChange}\r\n            step={this.state.step}\r\n          />\r\n        </SelectedPackageProvider>\r\n      </FormProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormSnack;\r\n","import React, { Component } from 'react';\r\nimport CardItem from '../cards/CardItem_Title';\r\nimport './section.scss';\r\n// import axios from \"axios\";\r\n\r\nexport class Choose extends Component {\r\n  state = {\r\n    packages: [],\r\n    // selectedPackage: null\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    const {\r\n      packages,\r\n      goals,\r\n      handleSelect,\r\n      selectedPackage,\r\n      selectedGoal,\r\n      handlePackageSelect,\r\n      // packageAmount\r\n    } = this.props;\r\n    const packageList = packages.map((packageItem) => (\r\n      <CardItem\r\n        key={packageItem.id}\r\n        item={packageItem}\r\n        stateKey=\"selectedPackage\"\r\n        selectedItem={selectedPackage}\r\n        handleSelect={handlePackageSelect}\r\n        handlePackageSelect={handlePackageSelect}\r\n        buttonText={`$${packageItem.acf.price}`}\r\n        description={`${packageItem.acf.meal_count} Personal Sized Meals`}\r\n        group=\"packages\"\r\n        cardTitle={packageItem.title.rendered}\r\n      />\r\n    ));\r\n    const goalList = goals.map((goal) => (\r\n      <CardItem\r\n        key={goal.id}\r\n        item={goal}\r\n        group=\"goals\"\r\n        selectedItem={selectedGoal}\r\n        handleSelect={handleSelect}\r\n        stateKey=\"selectedGoal\"\r\n        description={goal.acf.portion_description}\r\n        buttonText={\r\n          parseFloat(goal.acf.portion_price) > 0\r\n            ? `$${parseFloat(goal.acf.portion_price).toFixed(2)}`\r\n            : `FREE`\r\n        }\r\n        cardTitle={goal.acf.portion_goal}\r\n      />\r\n    ));\r\n    return (\r\n      <section className=\"section section--choose\">\r\n        <div className=\"section__item\">\r\n          <h2 className=\"section__heading\">Select a Package</h2>\r\n          <p className=\"section__subheading\">\r\n            Choose how many meals you intend to eat per day for six (6) days.\r\n          </p>\r\n          <div className=\"section__grid grid-x grid-margin-x align-large-justify align-spaced\">\r\n            {packageList}\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"section__item\">\r\n          <h2 className=\"section__heading\">Select Your Goal</h2>\r\n          <p className=\"section__subheading\">\r\n            We have 3 sizes for you to choose from: 4oz, 6oz, and 8oz (+$1), to\r\n            help you lose, maintain, and gain weight.\r\n          </p>\r\n          <div className=\"section__grid grid-x grid-margin-x align-large-justify align-spaced\">\r\n            {goalList}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Choose;\r\n","import React, { useContext } from \"react\";\r\n// import SelectDropdown from \"./SelectDropdown\";\r\nimport CardItemNumber from \"./CardItem_Number\";\r\nimport SelectedPackageContext from \"../../contexts/SelectedPackage\";\r\nimport FormContext from \"../../contexts/Form\";\r\n\r\nexport const CardListVegan = ({\r\n    groups,\r\n    handleSelect,\r\n    hasNone,\r\n    stateKey,\r\n    selected,\r\n    selectedVariant,\r\n    setVariant,\r\n    groupName,\r\n    variantKey,\r\n}) => {\r\n    const selectedPackage = useContext(SelectedPackageContext);\r\n    const form = useContext(FormContext);\r\n    const foodItemRow =\r\n        groups &&\r\n        groups.map(group => (\r\n            <CardItemNumber\r\n                key={group.id}\r\n                group={group}\r\n                itemsRemaining={form.vegansRemaining}\r\n                handleItemsChange={form.handleVeganChange}\r\n            />\r\n        ));\r\n    return (\r\n        <div className=\"section__item\">\r\n            <h2 className=\"section__heading\">{`Select your ${groupName}s`}</h2>\r\n            <p className=\"section__subheading\">\r\n                Please note: All vegan salads do <strong>NOT</strong> include\r\n                cheese\r\n            </p>\r\n            <p className=\"section__subheading\">{`Select your ${selectedPackage?.acf?.meal_count} items from our vegan menu (required)`}</p>\r\n            <div className=\"section__grid grid-x grid-margin-x align-center\">\r\n                {foodItemRow}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardListVegan;\r\n","import React, { useContext } from 'react';\r\nimport CardList from '../cards/CardListVegan';\r\nimport './section.scss';\r\nimport FormContext from '../../contexts/Form';\r\n\r\nconst Customize = ({\r\n  carbs,\r\n  meats,\r\n  vegetables,\r\n  snacks,\r\n  salads,\r\n  vegans,\r\n  customizationCount,\r\n  addToOrder,\r\n  currentCustomizationId,\r\n  // customizations,\r\n  customizationsRemaining,\r\n  handleCustomizationAmountIncrement,\r\n  handleCustomizationAmountChange,\r\n  handleCustomizationAmountDecrement,\r\n  comments,\r\n}) => {\r\n  const form = useContext(FormContext);\r\n  return (\r\n    <section className=\"section section--customize\">\r\n      <CardList groupName=\"vegan menu item\" groups={vegans} />\r\n      <hr />\r\n      <div className=\"section__item\">\r\n        <h3 className=\"section__heading\">Comments</h3>\r\n        <p className=\"section__subheading\">\r\n          Please add any comments for your order\r\n        </p>\r\n        <p className=\"section__subheading\">\r\n          <em>\r\n            Please Note: Items in meals can be removed but not substituted. For\r\n            more information,{' '}\r\n            <a href={`${form.baseURL}/frequently-asked-questions`}>\r\n              click here\r\n            </a>\r\n          </em>\r\n        </p>\r\n        <div className=\"customize__textarea-container\">\r\n          <textarea\r\n            className=\"customize__textarea\"\r\n            value={comments}\r\n            onChange={(e) => form.handleComments(e.target.value)}\r\n            name=\"\"\r\n            id=\"\"\r\n            rows={4}\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Customize;\r\n","import React, { Fragment, useContext } from 'react';\r\nimport './table.scss';\r\nimport FormContext from '../../contexts/Form';\r\nimport { ADDON_PRICE } from '../constants';\r\n// const isEmptyObject = object => {\r\n//     if (Object.entries(object).length === 0 && object.constructor === Object) {\r\n//         return true;\r\n//     } else {\r\n//         return false;\r\n//     }\r\n// };\r\nconst Table = ({\r\n  selectedPackage,\r\n  addOns,\r\n  vegans,\r\n  goal,\r\n  shipping,\r\n  selectedDelivery,\r\n  deliveryOption,\r\n  total,\r\n}) => {\r\n  const form = useContext(FormContext);\r\n  return (\r\n    <table className=\"table unstriped\">\r\n      <thead className=\"table__head\">\r\n        <tr>\r\n          <th>Order Summary</th>\r\n          <th className=\"text-center\">QTY</th>\r\n          <th className=\"text-center\">Price</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr className=\"table__row table__row--bold\">\r\n          <td>{selectedPackage.title.rendered}</td>\r\n          <td />\r\n          <td>{`$${parseFloat(selectedPackage.acf.price).toFixed(2)}`}</td>\r\n        </tr>\r\n        {goal && (\r\n          <tr className=\"table__row table__row--indent-1\">\r\n            <td>{`${goal.acf.portion_description}`}</td>\r\n            <td />\r\n            <td>\r\n              {parseFloat(goal.acf.portion_price) > 0\r\n                ? `$${parseFloat(\r\n                    +goal.acf.portion_price * +selectedPackage.acf.meal_count\r\n                  ).toFixed(2)}`\r\n                : `Included`}\r\n            </td>\r\n          </tr>\r\n        )}\r\n        {vegans?.map((vegan, index) => (\r\n          <Fragment key={index}>\r\n            <tr className=\"table__row table__row--bold\">\r\n              <td>{`${vegan.vegan.post_title}`}</td>\r\n              <td className=\"text-center\">{`x${vegan.count}`}</td>\r\n              <td />\r\n            </tr>\r\n          </Fragment>\r\n        ))}\r\n        {form.comments.length > 0 && (\r\n          <tr className=\"table__row\">\r\n            <td\r\n              dangerouslySetInnerHTML={{\r\n                __html: form.comments.replace(/\\n/g, '<br>'),\r\n              }}\r\n            />\r\n            <td />\r\n            <td />\r\n          </tr>\r\n        )}\r\n        {addOns.length > 0 && (\r\n          <>\r\n            <tr className=\"table__row table__row--bold\">\r\n              <td>Snacks</td>\r\n              <td />\r\n              <td>{`$${parseFloat(\r\n                addOns.reduce((acc, curr) => acc + curr.count, 0) * ADDON_PRICE\r\n              ).toFixed(2)}`}</td>\r\n            </tr>\r\n            {addOns.map((addOn) => (\r\n              <tr\r\n                key={addOn.snack.id}\r\n                className=\"table__row table__row--indent-1\"\r\n              >\r\n                <td>{addOn.snack.post_title}</td>\r\n                <td className={`text-bold text-center`}>{`x${addOn.count}`}</td>\r\n                <td />\r\n              </tr>\r\n            ))}\r\n          </>\r\n        )}\r\n        {selectedDelivery !== 'default' && deliveryOption === 'delivery' && (\r\n          <Fragment>\r\n            <tr className=\"table__row table__row--bold\">\r\n              <td>Delivery Location</td>\r\n              <td />\r\n              <td />\r\n            </tr>\r\n            <tr className=\"table__row table__row--indent-1\">\r\n              <td>{shipping.delivery_locations[selectedDelivery].location}</td>\r\n              <td />\r\n              <td>{`$${parseFloat(\r\n                shipping.delivery_locations[selectedDelivery].price\r\n              ).toFixed(2)}`}</td>\r\n            </tr>\r\n          </Fragment>\r\n        )}\r\n      </tbody>\r\n      <tfoot className=\"table__footer\">\r\n        <tr>\r\n          <th>Order Total</th>\r\n          <th />\r\n          <th className=\"text-center\">{`$${total.toFixed(2)}`}</th>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport Table from \"../table/TableVegan\";\r\nimport Logistics from \"../logistics/Logistics\";\r\n// import CardItem from \"../cards/CardItem_Title\";\r\nimport SplitButton from \"../SplitButton\";\r\nimport \"./section.scss\";\r\nimport { capitalize } from \"lodash\";\r\nconst useForm = initialValues => {\r\n    const [values, setValues] = useState(initialValues);\r\n    return [\r\n        values,\r\n        e => {\r\n            setValues({\r\n                ...values,\r\n                [e.target.id]: e.target.value,\r\n            });\r\n        },\r\n    ];\r\n};\r\nconst emailRegex = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\nconst Review = ({\r\n    snacks,\r\n    vegans,\r\n    addOns,\r\n    customizations,\r\n    selectedPackage,\r\n    selectedGoal,\r\n    shipping,\r\n    handleSelect,\r\n    selectedDelivery,\r\n    deliveryOption,\r\n    setDeliveryOption,\r\n    deliveryTime,\r\n    setDeliveryTime,\r\n    total,\r\n    isContactValid,\r\n    handleIsContactValid,\r\n    handleProceed,\r\n}) => {\r\n    const [submittedCust, setSubmittedCust] = useState(\"\");\r\n    const [paymentOption, setPaymentOption] = useState(\"cash\");\r\n    const setPayment = option => e => {\r\n        e.preventDefault();\r\n        setPaymentOption(option);\r\n    };\r\n    // const [cityIndex, setCityIndex] = useState(\"\");\r\n    const [cityValue, setCityValue] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [isEmailValid, setIsEmailValid] = useState(true);\r\n    const [values, handleChange] = useForm({\r\n        fullName: \"\",\r\n        // email: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n        address2: \"\",\r\n        // city: \"\",\r\n        postalCode: \"\",\r\n        specialInstructions: \"\",\r\n    });\r\n\r\n    const checkEmail = () => {\r\n        setIsEmailValid(emailRegex.test(email));\r\n        // setEmail(e);\r\n    };\r\n    const handleEmail = e => {\r\n        setEmail(e.target.value);\r\n        checkEmail();\r\n    };\r\n    useEffect(() => {\r\n        // const replacer = (key, value) =>\r\n        //     value === null || value.length === 0 ? \"none\" : value; // specify how you want to handle null values here\r\n        const header = Object.keys(vegans[0]);\r\n        const veganCsv = vegans.map(row => {\r\n            //   console.log(row);\r\n            return header\r\n                .map(fieldName => {\r\n                    const formattedFieldName = fieldName\r\n                        .split(\"_\")\r\n                        .map(w => capitalize(w))\r\n                        .join(\" \");\r\n                    return fieldName === `customization_price`\r\n                        ? null\r\n                        : `${formattedFieldName}: ${\r\n                              row[fieldName].constructor === Object\r\n                                  ? row[fieldName] && row[fieldName].variation\r\n                                      ? row[fieldName].variation\r\n                                      : row[fieldName].post_title || `None`\r\n                                  : row[fieldName]\r\n                          }`;\r\n                    // return JSON.stringify(\r\n                    //     `${formattedFieldName} : ${row[fieldName]}`,\r\n                    //     replacer\r\n                    // );\r\n                })\r\n                .join(\"\\r\\n\");\r\n        });\r\n        const addOnCsv =\r\n            addOns.length > 0\r\n                ? addOns\r\n                      .map(row => {\r\n                          return `Snack: ${row.snack.post_title}\r\n            Quantity: ${row.count}\r\n            `;\r\n                      })\r\n                      .join(\"\\r\\n\")\r\n                : \"\";\r\n        const csv = [...veganCsv, addOnCsv].join(\"\\r\\n\");\r\n        // console.log(csv);\r\n        setSubmittedCust(csv);\r\n        // console.log(customizations);\r\n        // console.log(submittedCust);\r\n    }, [vegans, addOns, submittedCust]);\r\n\r\n    useEffect(() => {\r\n        setCityValue(shipping.delivery_locations[+selectedDelivery]);\r\n        // console.log(cityValue);\r\n        return setCityValue(shipping.delivery_locations[+selectedDelivery]);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [cityValue, selectedDelivery]);\r\n\r\n    useEffect(() => {\r\n        // validate for when selected delivery method is delivery\r\n        if (deliveryOption === \"delivery\") {\r\n            if (\r\n                selectedDelivery !== \"default\" &&\r\n                values.fullName.length > 0 &&\r\n                values.phone.length > 0 &&\r\n                values.address.length > 0 &&\r\n                isEmailValid\r\n            ) {\r\n                handleIsContactValid(true);\r\n            } else {\r\n                handleIsContactValid(false);\r\n            }\r\n        } else {\r\n            //validate for when selected delivery method is pickup\r\n            if (\r\n                values.fullName.length > 0 &&\r\n                values.phone.length > 0 &&\r\n                isEmailValid\r\n            ) {\r\n                handleIsContactValid(true);\r\n            } else {\r\n                handleIsContactValid(false);\r\n            }\r\n        }\r\n        handleProceed();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [\r\n        deliveryOption,\r\n        selectedDelivery,\r\n        isEmailValid,\r\n        values.address,\r\n        values.fullName,\r\n        values.phone,\r\n    ]);\r\n    useEffect(() => {\r\n        handleProceed();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isContactValid]);\r\n    // useEffect(() => {\r\n    //     submittedCust.forEach(c => {\r\n    //         const veg = c.selectedVeg.join();\r\n    //         return { ...c, selectedVeg: veg };\r\n    //     });\r\n    //     console.log(submittedCust);\r\n    // }, [submittedCust]);\r\n    return (\r\n        <Fragment>\r\n            <section className=\"section section--review\">\r\n                <div className=\"section__item\">\r\n                    <h2 className=\"section__heading\">Review Your Order</h2>\r\n                    <p className=\"section__subheading\">\r\n                        Take a look at your orders and make sure that we have\r\n                        everything you want and need!\r\n                    </p>\r\n                    <div className=\"grid-x grid-margin-x section__grid\">\r\n                        <div className=\"cell small-12 large-6\">\r\n                            <Table\r\n                                vegans={vegans}\r\n                                addOns={addOns}\r\n                                selectedPackage={selectedPackage}\r\n                                shipping={shipping}\r\n                                goal={selectedGoal}\r\n                                selectedDelivery={selectedDelivery}\r\n                                deliveryOption={deliveryOption}\r\n                                total={total}\r\n                            />\r\n                        </div>\r\n                        <div className=\"cell small-12 large-6\">\r\n                            <Logistics\r\n                                handleSelect={handleSelect}\r\n                                shipping={shipping}\r\n                                setDeliveryOption={setDeliveryOption}\r\n                                deliveryOption={deliveryOption}\r\n                                values={values}\r\n                                handleChange={handleChange}\r\n                                city={\r\n                                    selectedDelivery === \"default\"\r\n                                        ? \"default\"\r\n                                        : selectedDelivery\r\n                                }\r\n                                email={email}\r\n                                setEmail={handleEmail}\r\n                                checkEmail={checkEmail}\r\n                                isEmailValid={isEmailValid}\r\n                                deliveryTime={deliveryTime}\r\n                                setDeliveryTime={setDeliveryTime}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"section section--payment\">\r\n                <div className=\"section__item\">\r\n                    <h2 className=\"section__heading\">Payment Option</h2>\r\n                    <p className=\"section__subheading\">\r\n                        Unfortunately, we currently do not accept pre-payment\r\n                        via credit card or debit card. Cash or e-Transfer only.\r\n                    </p>\r\n                    <div className=\"grid-x grid-margin-x section__grid align-center\">\r\n                        <div\r\n                            onClick={setPayment(\"cash\")}\r\n                            className={\r\n                                \"card text-center small-12 medium-6 large-4 card__item card__item--title \" +\r\n                                (paymentOption === \"cash\"\r\n                                    ? \"card__item--active\"\r\n                                    : \"\")\r\n                            }>\r\n                            <div className=\"card-divider\">{`Cash`}</div>\r\n                            <div className=\"card-section align-justify\">\r\n                                <p>{`Deposit Required. Paid on Day-Of.`}</p>\r\n                                <SplitButton\r\n                                    handleClick={setPayment(\"cash\")}\r\n                                    text={\r\n                                        paymentOption === \"cash\"\r\n                                            ? \"Selected\"\r\n                                            : \"Select\"\r\n                                    }\r\n                                    isActive={\r\n                                        paymentOption === \"cash\" ? true : false\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            onClick={setPayment(\"etransfer\")}\r\n                            className={\r\n                                \"card text-center small-12 medium-6 large-4 card__item card__item--title \" +\r\n                                (paymentOption === \"etransfer\"\r\n                                    ? \"card__item--active\"\r\n                                    : \"\")\r\n                            }>\r\n                            <div className=\"card-divider\">{`E-Transfer`}</div>\r\n                            <div className=\"card-section\">\r\n                                <p>\r\n                                    {`Paid to `}\r\n                                    <a href=\"mailto:roundaxxfitness@gmail.com\">\r\n                                        roundaxxfitness@gmail.com\r\n                                    </a>\r\n                                </p>\r\n                                <p>Transferred by Sunday 9PM latest</p>\r\n                                <SplitButton\r\n                                    handleClick={setPayment(\"etransfer\")}\r\n                                    text={\r\n                                        paymentOption === \"etransfer\"\r\n                                            ? \"Selected\"\r\n                                            : \"Select\"\r\n                                    }\r\n                                    isActive={\r\n                                        paymentOption === \"etransfer\"\r\n                                            ? true\r\n                                            : false\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <input type=\"hidden\" name=\"1\" value={values.fullName} />\r\n                <input\r\n                    type=\"hidden\"\r\n                    name=\"2\"\r\n                    value={selectedPackage.title.rendered}\r\n                />\r\n                <input\r\n                    type=\"hidden\"\r\n                    name=\"3\"\r\n                    value={selectedGoal.title.rendered}\r\n                />\r\n                <input type=\"hidden\" name=\"5\" value={total.toFixed(2)} />\r\n                <input type=\"hidden\" name=\"6\" value={deliveryOption} />\r\n                <input type=\"hidden\" name=\"7\" value={deliveryTime} />\r\n                <input type=\"hidden\" name=\"8\" value={paymentOption} />\r\n                <input type=\"hidden\" name=\"18\" value={email} />\r\n                <input type=\"hidden\" name=\"10\" value={values.phone} />\r\n                <input type=\"hidden\" name=\"11\" value={values.address} />\r\n                <input type=\"hidden\" name=\"12\" value={values.address2} />\r\n                <input\r\n                    type=\"hidden\"\r\n                    name=\"13\"\r\n                    value={cityValue?.location ?? \"\"}\r\n                />\r\n                <input type=\"hidden\" name=\"14\" value={values.postalCode} />\r\n                <input\r\n                    type=\"hidden\"\r\n                    name=\"15\"\r\n                    value={values.specialInstructions}\r\n                />\r\n                <input type=\"hidden\" name=\"16\" value={submittedCust} />\r\n                <input type=\"hidden\" name=\"17\" value={`No`} />\r\n            </section>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Review;\r\n","import React, { Component } from 'react';\r\nimport StepList from './steps/StepList';\r\nimport Choose from './vegan-steps/Choose';\r\nimport Customize from './vegan-steps/Customize';\r\nimport Review from './vegan-steps/Review';\r\nimport Pagination from './pagination/Pagination';\r\nimport Total from './TotalSnack';\r\nimport { SelectedPackageProvider } from '../contexts/SelectedPackage';\r\nimport axios from 'axios';\r\nimport { isEmptyObject } from './utils';\r\nimport { FormProvider } from '../contexts/Form';\r\nimport { ALLOWED_ADDONS, ADDON_PRICE } from './constants';\r\nimport Popup from './Popup';\r\n\r\nexport class FormVegan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 1,\r\n      isDataLoaded: false,\r\n      types: {},\r\n      packages: [],\r\n      goals: [],\r\n      vegans: [],\r\n      selectedVegans: [],\r\n      vegansRemaining: null,\r\n      salads: [],\r\n      juices: [],\r\n      snackSizes: [],\r\n      snacks: [],\r\n      selectedSnacks: [],\r\n      addOns: [],\r\n      addOnsRemaining: ALLOWED_ADDONS,\r\n      shippingOptions: null,\r\n      selectedPackage: {},\r\n      packageAmount: 1,\r\n      selectedGoal: {},\r\n      snacksRemaining: null,\r\n      totalCustomizations: 0,\r\n      currentCustomization: {},\r\n      customizations: [],\r\n      comments: '',\r\n      selectedDeliveryLocation: 'default',\r\n      deliveryOption: 'delivery',\r\n      deliveryTime: '',\r\n      isContactValid: false,\r\n      canProceed: false,\r\n      total: null,\r\n      modalActive: true,\r\n    };\r\n    this.baseURL = this.props?.homeUrl || 'https://fitaxxmeals.com';\r\n  }\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevState.selectedPackage !== this.state.selectedPackage ||\r\n      prevState.step !== this.state.step\r\n    ) {\r\n      this.handleProceed();\r\n    }\r\n    if (prevState.addOns !== this.state.addOns) {\r\n      this.setState({\r\n        addOnsRemaining:\r\n          ALLOWED_ADDONS -\r\n          +this.state.addOns.reduce((acc, curr) => acc + curr.count, 0),\r\n      });\r\n    }\r\n    if (\r\n      prevState.selectedPackage !== this.state.selectedPackage ||\r\n      prevState.selectedGoal !== this.state.selectedGoal ||\r\n      prevState.step !== this.state.step ||\r\n      prevState.selectedDeliveryLocation !==\r\n        this.state.selectedDeliveryLocation ||\r\n      prevState.deliveryOption !== this.state.deliveryOption ||\r\n      prevState.addOns !== this.state.addOns\r\n    ) {\r\n      const total =\r\n        +this.state.selectedPackage?.acf?.price +\r\n        (this.state.selectedGoal.acf && this.state.selectedPackage.acf\r\n          ? +this.state.selectedPackage.acf.meal_count *\r\n            +this.state.selectedGoal.acf.portion_price\r\n          : 0) +\r\n        (this.state.selectedDeliveryLocation !== 'default' &&\r\n        this.state.deliveryOption === 'delivery'\r\n          ? +this.state.shippingOptions.delivery_locations[\r\n              this.state.selectedDeliveryLocation\r\n            ].price\r\n          : 0) +\r\n        (this.state.addOns.length > 0\r\n          ? this.state.addOns.reduce((acc, curr) => acc + curr.count, 0) *\r\n            ADDON_PRICE\r\n          : 0);\r\n      this.setState({ total });\r\n    }\r\n    if (prevState.selectedVegans !== this.state.selectedVegans) {\r\n      this.setState({\r\n        vegansRemaining:\r\n          +this.state.selectedPackage?.acf?.meal_count -\r\n          +this.state.selectedVegans.reduce((acc, curr) => acc + curr.count, 0),\r\n      });\r\n    }\r\n  }\r\n  getData = async () => {\r\n    const getTypes = await axios.get(`${this.baseURL}/wp-json/wp/v2/types`);\r\n    const getPackages = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/packages?order=asc&per_page=100`\r\n    );\r\n    const getGoals = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/goals?order=asc&per_page=100`\r\n    );\r\n    const getShippingOptions = await axios.get(\r\n      `${this.baseURL}/wp-json/acf/v3/options/options`\r\n    );\r\n    const getSalads = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/salads?order=asc&per_page=100`\r\n    );\r\n    const getSnacks = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/snacks?order=asc&per_page=100`\r\n    );\r\n    const getSnackSizes = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/snack_sizes?order=asc&per_page=100`\r\n    );\r\n    const getVegans = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/vegan?order=asc&per_page=100`\r\n    );\r\n    const getJuices = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/juice?order=asc&per_page=100`\r\n    );\r\n    Promise.all([\r\n      getTypes,\r\n      getPackages,\r\n      getGoals,\r\n      getShippingOptions,\r\n      getSalads,\r\n      getSnacks,\r\n      getSnackSizes,\r\n      getVegans,\r\n      getJuices,\r\n    ]).then(\r\n      ([\r\n        types,\r\n        packages,\r\n        goals,\r\n        shippingOptions,\r\n        salads,\r\n        snacks,\r\n        snackSizes,\r\n        vegans,\r\n        juices,\r\n      ]) => {\r\n        this.setState({\r\n          types: types.data,\r\n          packages: packages.data,\r\n          goals: goals.data,\r\n          shippingOptions: shippingOptions.data.acf,\r\n          // deliveryTime: shippingOptions.data.acf.delivery_times[0].timeframe,\r\n          deliveryTime: ``,\r\n          salads: salads.data,\r\n          snacks: snacks.data,\r\n          snackSizes: snackSizes.data,\r\n          vegans: vegans.data,\r\n          juices: juices.data,\r\n          isDataLoaded: true,\r\n        });\r\n      }\r\n    );\r\n    // console.log(this.state.salads);\r\n    // console.log(this.state.packages);\r\n    // console.log(this.state.goals);\r\n    // console.log(this.state.carbs);\r\n  };\r\n  // Handle fields change\r\n  // handleChange = input => e => {\r\n  //     this.setState({ [input]: e.target.value });\r\n  // };\r\n  scrollToTop = () => {\r\n    document\r\n      .getElementById('form-anchor')\r\n      .scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n  };\r\n\r\n  handlePrevStepChange = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ step: this.state.step - 1 });\r\n  };\r\n  handleNextStepChange = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.step === 1) {\r\n      if (\r\n        isEmptyObject(this.state.selectedPackage) ||\r\n        isEmptyObject(this.state.selectedGoal)\r\n      ) {\r\n      } else {\r\n        this.setState({ step: this.state.step + 1 });\r\n        this.scrollToTop();\r\n      }\r\n    } else if (this.state.step === 2) {\r\n      // this.addCustomizationToOrder();\r\n      if (this.state.vegansRemaining === 0) {\r\n        // if user has no customizations left to customize, simply go to next step without saving\r\n        this.setState({ step: this.state.step + 1 });\r\n      } else {\r\n        // else do nothing\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.state.isContactValid) {\r\n        document.getElementById('order-form').submit();\r\n      }\r\n    }\r\n  };\r\n  handlePackageSelect = (selection) => (e) => {\r\n    e.preventDefault();\r\n    // console.log(selection);\r\n    if (selection.acf) {\r\n      this.setState({\r\n        selectedPackage: selection,\r\n        vegansRemaining: +selection.acf.meal_count,\r\n      });\r\n    }\r\n  };\r\n  handleVeganChange = (vegan, count) => {\r\n    this.setState({\r\n      selectedVegans: [\r\n        ...this.state.selectedVegans.filter(\r\n          (selectedVegan) => selectedVegan.vegan.id !== vegan.id\r\n        ),\r\n        { vegan, count },\r\n      ]\r\n        .filter((s) => s.count > 0)\r\n        .sort((a, b) => a.vegan.id - b.vegan.id),\r\n    });\r\n  };\r\n  handleSnackChange = (snack, count) => {\r\n    this.setState({\r\n      addOns: [\r\n        ...this.state.addOns.filter(\r\n          (selectedSnack) => selectedSnack.snack.id !== snack.id\r\n        ),\r\n        { snack, count },\r\n      ]\r\n        .filter((s) => s.count > 0)\r\n        .sort((a, b) => a.snack.id - b.snack.id),\r\n    });\r\n  };\r\n  handleComments = (comments) => {\r\n    this.setState({\r\n      comments,\r\n    });\r\n  };\r\n  handleProceed = () => {\r\n    if (this.state.step === 1) {\r\n      if (!isEmptyObject(this.state.selectedPackage)) {\r\n        this.setState({ canProceed: true });\r\n        // return true;\r\n      } else {\r\n        this.setState({ canProceed: false });\r\n        // return false;\r\n      }\r\n    }\r\n  };\r\n  handleSelect = (state, selection) => (e) => {\r\n    e.preventDefault();\r\n    // console.log(selection);\r\n    this.setState({ [state]: selection });\r\n  };\r\n  handleDeliverySelect = (selected) => {\r\n    this.setState({ selectedDeliveryLocation: selected });\r\n  };\r\n  setDeliveryOption = (option) => (e) => {\r\n    e.preventDefault();\r\n    this.setState({ deliveryOption: option });\r\n  };\r\n  setDeliveryTime = (option) => (e) => {\r\n    e.preventDefault();\r\n    this.setState({ deliveryTime: option });\r\n  };\r\n  handleIsContactValid = (isValid) => {\r\n    this.setState({ isContactValid: isValid });\r\n  };\r\n  toggleModal = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ modalActive: !this.state.modalActive });\r\n  };\r\n  handleNoThanks = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      modalActive: !this.state.modalActive,\r\n      addOnsRemaining: 14,\r\n      addOns: [],\r\n    });\r\n  };\r\n  renderSections = () => {\r\n    const { step } = this.state;\r\n    if (!step) {\r\n      return (\r\n        <div className=\"spinner-container\">\r\n          <span className=\"spinner fa fa-spin fa-spinner fa-3x fa-fw\" />\r\n        </div>\r\n      );\r\n    }\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <Choose\r\n            meta={this.state.types}\r\n            packages={this.state.packages}\r\n            goals={this.state.goals}\r\n            handleSelect={this.handleSelect}\r\n            handlePackageSelect={this.handlePackageSelect}\r\n            selectedPackage={this.state.selectedPackage}\r\n            selectedGoal={this.state.selectedGoal}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <Customize\r\n            // snacks={this.state.snacks}\r\n            // salads={[...this.state.salads, ...this.state.snacks]}\r\n            vegans={this.state.vegans}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <>\r\n            <Review\r\n              vegans={this.state.selectedVegans}\r\n              selectedPackage={this.state.selectedPackage}\r\n              selectedGoal={this.state.selectedGoal}\r\n              selectedDelivery={this.state.selectedDeliveryLocation}\r\n              shipping={this.state.shippingOptions}\r\n              handleSelect={this.handleDeliverySelect}\r\n              deliveryOption={this.state.deliveryOption}\r\n              setDeliveryOption={this.setDeliveryOption}\r\n              deliveryTime={this.state.deliveryTime}\r\n              setDeliveryTime={this.setDeliveryTime}\r\n              total={this.state.total}\r\n              isContactValid={this.state.isContactValid}\r\n              handleIsContactValid={this.handleIsContactValid}\r\n              handleProceed={this.handleProceed}\r\n              addOns={this.state.addOns}\r\n            />\r\n            <Popup\r\n              items={[\r\n                ...this.state.salads,\r\n                ...this.state.snacks,\r\n                ...this.state.juices,\r\n              ]}\r\n              active={this.state.modalActive}\r\n              toggleModal={this.toggleModal}\r\n              handleNoThanks={this.handleNoThanks}\r\n            />\r\n          </>\r\n        );\r\n      default:\r\n        return (\r\n          <div className=\"spinner-container\">\r\n            <span className=\"spinner fa fa-spin fa-spinner fa-3x fa-fw\" />\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n  render() {\r\n    if (!this.state.isDataLoaded) {\r\n      return (\r\n        <div className=\"spinner-container\">\r\n          <span className=\"spinner fa fa-spin fa-spinner fa-3x fa-fw\" />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <FormProvider\r\n        value={{\r\n          baseURL: this.baseURL,\r\n          handleSnackChange: this.handleSnackChange,\r\n          snacksRemaining: this.state.addOnsRemaining,\r\n          handleComments: this.handleComments,\r\n          comments: this.state.comments,\r\n          vegansRemaining: this.state.vegansRemaining,\r\n          handleVeganChange: this.handleVeganChange,\r\n          allowedAddons: ALLOWED_ADDONS,\r\n        }}\r\n      >\r\n        <SelectedPackageProvider value={this.state?.selectedPackage}>\r\n          <div className=\"form__header grid-container grid-x align-justify align-middle\">\r\n            <StepList step={this.state.step} />\r\n            <Total\r\n              itemCount={+this.state?.selectedPackage?.acf?.meal_count}\r\n              total={this.state.total}\r\n            />\r\n          </div>\r\n          <div className=\"grid-container\">{this.renderSections()}</div>\r\n          <Pagination\r\n            canProceed={this.state.canProceed}\r\n            handleNextStepChange={this.handleNextStepChange}\r\n            handlePrevStepChange={this.handlePrevStepChange}\r\n            step={this.state.step}\r\n          />\r\n        </SelectedPackageProvider>\r\n      </FormProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormVegan;\r\n","import React, { Component } from 'react';\r\nimport CardItem from '../cards/CardItem_Title';\r\nimport './section.scss';\r\n// import axios from \"axios\";\r\n\r\nexport class Choose extends Component {\r\n  state = {\r\n    packages: [],\r\n    // selectedPackage: null\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    const {\r\n      packages,\r\n      // handleSelect,\r\n      selectedPackage,\r\n      // selectedGoal,\r\n      handlePackageSelect,\r\n      // packageAmount\r\n    } = this.props;\r\n    const packageList = packages.map((packageItem) => (\r\n      <CardItem\r\n        key={packageItem.id}\r\n        item={packageItem}\r\n        stateKey=\"selectedPackage\"\r\n        selectedItem={selectedPackage}\r\n        handleSelect={handlePackageSelect}\r\n        handlePackageSelect={handlePackageSelect}\r\n        buttonText={`$${parseFloat(packageItem.acf.price).toFixed(2)}`}\r\n        description={`${packageItem.acf.size} Juices`}\r\n        group=\"packages\"\r\n        cardTitle={packageItem.title.rendered}\r\n      />\r\n    ));\r\n    return (\r\n      <section className=\"section section--choose\">\r\n        <div className=\"section__item\">\r\n          <h2 className=\"section__heading\">Select Juice Package</h2>\r\n          <p className=\"section__subheading\">\r\n            Choose how many juices you would like.\r\n          </p>\r\n          <div className=\"section__grid grid-x grid-margin-x align-large-justify align-spaced\">\r\n            {packageList}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Choose;\r\n","import React, { useContext } from 'react';\r\n// import SelectDropdown from \"./SelectDropdown\";\r\nimport CardItemNumber from './CardItem_Number';\r\nimport SelectedPackageContext from '../../contexts/SelectedPackage';\r\nimport FormContext from '../../contexts/Form';\r\n\r\nexport const CardListJuice = ({\r\n  groups,\r\n  handleSelect,\r\n  hasNone,\r\n  stateKey,\r\n  selected,\r\n  selectedVariant,\r\n  setVariant,\r\n  groupName,\r\n  variantKey,\r\n}) => {\r\n  const maxJuiceCount = useContext(SelectedPackageContext);\r\n  const form = useContext(FormContext);\r\n  const foodItemRow =\r\n    groups &&\r\n    groups.map((group) => (\r\n      <CardItemNumber\r\n        itemsRemaining={form.juicesRemaining}\r\n        handleItemsChange={form.handleJuiceChange}\r\n        key={group.id}\r\n        group={group}\r\n      />\r\n    ));\r\n  return (\r\n    <div className=\"section__item\">\r\n      <h2 className=\"section__heading\">{`Select your ${groupName}s`}</h2>\r\n      <p className=\"section__subheading\">{`Select ${maxJuiceCount?.acf?.size} juices`}</p>\r\n      <div className=\"section__grid grid-x grid-margin-x align-center\">\r\n        {foodItemRow}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardListJuice;\r\n","import React, { useContext } from 'react';\r\nimport CardList from '../cards/CardListJuice';\r\nimport './section.scss';\r\nimport FormContext from '../../contexts/Form';\r\n\r\nconst Customize = ({\r\n  carbs,\r\n  meats,\r\n  vegetables,\r\n  snacks,\r\n  juices,\r\n  customizationCount,\r\n  addToOrder,\r\n  currentCustomizationId,\r\n  // customizations,\r\n  customizationsRemaining,\r\n  handleCustomizationAmountIncrement,\r\n  handleCustomizationAmountChange,\r\n  handleCustomizationAmountDecrement,\r\n  comments,\r\n}) => {\r\n  const form = useContext(FormContext);\r\n  return (\r\n    <section className=\"section section--customize\">\r\n      <CardList groupName=\"juice\" groups={juices} />\r\n      <hr />\r\n      <div className=\"section__item\">\r\n        <h3 className=\"section__heading\">Comments</h3>\r\n        <p className=\"section__subheading\">\r\n          Please add any comments for your order\r\n        </p>\r\n        <div className=\"customize__textarea-container\">\r\n          <textarea\r\n            className=\"customize__textarea\"\r\n            value={comments}\r\n            onChange={(e) => form.handleComments(e.target.value)}\r\n            name=\"\"\r\n            id=\"\"\r\n            rows={4}\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Customize;\r\n","import React, { Fragment, useContext } from 'react';\r\nimport './table.scss';\r\nimport FormContext from '../../contexts/Form';\r\n// const isEmptyObject = object => {\r\n//     if (Object.entries(object).length === 0 && object.constructor === Object) {\r\n//         return true;\r\n//     } else {\r\n//         return false;\r\n//     }\r\n// };\r\nconst Table = ({\r\n  customizations,\r\n  selectedPackage,\r\n  goal,\r\n  shipping,\r\n  selectedDelivery,\r\n  deliveryOption,\r\n  total,\r\n  juices,\r\n}) => {\r\n  const form = useContext(FormContext);\r\n  return (\r\n    <table className=\"table unstriped\">\r\n      <thead className=\"table__head\">\r\n        <tr>\r\n          <th>Order Summary</th>\r\n          <th className=\"text-center\">QTY</th>\r\n          <th className=\"text-center\">Price</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr className=\"table__row table__row--bold\">\r\n          <td>{selectedPackage.title.rendered}</td>\r\n          <td />\r\n          <td>{`$${parseFloat(selectedPackage.acf.price).toFixed(2)}`}</td>\r\n        </tr>\r\n        {juices?.map((juice, index) => (\r\n          <Fragment key={index}>\r\n            <tr className=\"table__row table__row--bold table__row--indent-1\">\r\n              <td>{`${juice.juice.post_title}`}</td>\r\n              <td className=\"text-center\">{`x${juice.count}`}</td>\r\n              <td />\r\n            </tr>\r\n          </Fragment>\r\n        ))}\r\n        {form.comments.length > 0 && (\r\n          <tr className=\"table__row\">\r\n            <td\r\n              dangerouslySetInnerHTML={{\r\n                __html: form.comments.replace(/\\n/g, '<br>'),\r\n              }}\r\n            />\r\n            <td />\r\n            <td />\r\n          </tr>\r\n        )}\r\n        {selectedDelivery !== 'default' && deliveryOption === 'delivery' && (\r\n          <Fragment>\r\n            <tr className=\"table__row table__row--bold\">\r\n              <td>Delivery Location</td>\r\n              <td />\r\n              <td />\r\n            </tr>\r\n            <tr className=\"table__row table__row--indent-1\">\r\n              <td>{shipping.delivery_locations[selectedDelivery].location}</td>\r\n              <td />\r\n              <td>{`$${parseFloat(\r\n                shipping.delivery_locations[selectedDelivery].price\r\n              ).toFixed(2)}`}</td>\r\n            </tr>\r\n          </Fragment>\r\n        )}\r\n      </tbody>\r\n      <tfoot className=\"table__footer\">\r\n        <tr>\r\n          <th>Order Total</th>\r\n          <th />\r\n          <th className=\"text-center\">{`$${total.toFixed(2)}`}</th>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport Table from '../table/TableJuice';\r\nimport Logistics from '../logistics/Logistics';\r\n// import CardItem from \"../cards/CardItem_Title\";\r\nimport SplitButton from '../SplitButton';\r\nimport './section.scss';\r\nimport { capitalize } from 'lodash';\r\nconst useForm = (initialValues) => {\r\n  const [values, setValues] = useState(initialValues);\r\n  return [\r\n    values,\r\n    (e) => {\r\n      setValues({\r\n        ...values,\r\n        [e.target.id]: e.target.value,\r\n      });\r\n    },\r\n  ];\r\n};\r\nconst emailRegex = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\nconst Review = ({\r\n  juices,\r\n  customizations,\r\n  selectedPackage,\r\n  selectedGoal,\r\n  shipping,\r\n  handleSelect,\r\n  selectedDelivery,\r\n  deliveryOption,\r\n  setDeliveryOption,\r\n  deliveryTime,\r\n  setDeliveryTime,\r\n  total,\r\n  isContactValid,\r\n  handleIsContactValid,\r\n  handleProceed,\r\n}) => {\r\n  const [submittedCust, setSubmittedCust] = useState('');\r\n  const [paymentOption, setPaymentOption] = useState('cash');\r\n  const setPayment = (option) => (e) => {\r\n    e.preventDefault();\r\n    setPaymentOption(option);\r\n  };\r\n  // const [cityIndex, setCityIndex] = useState(\"\");\r\n  const [cityValue, setCityValue] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isEmailValid, setIsEmailValid] = useState(true);\r\n  const [values, handleChange] = useForm({\r\n    fullName: '',\r\n    // email: \"\",\r\n    phone: '',\r\n    address: '',\r\n    address2: '',\r\n    // city: \"\",\r\n    postalCode: '',\r\n    specialInstructions: '',\r\n  });\r\n\r\n  const checkEmail = () => {\r\n    setIsEmailValid(emailRegex.test(email));\r\n    // setEmail(e);\r\n  };\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n    checkEmail();\r\n  };\r\n  useEffect(() => {\r\n    // const replacer = (key, value) =>\r\n    //     value === null || value.length === 0 ? \"none\" : value; // specify how you want to handle null values here\r\n    const header = Object.keys(juices[0]);\r\n    let csv = juices.map((row) => {\r\n      //   console.log(row);\r\n      return header\r\n        .map((fieldName) => {\r\n          const formattedFieldName = fieldName\r\n            .split('_')\r\n            .map((w) => capitalize(w))\r\n            .join(' ');\r\n          return fieldName === `customization_price`\r\n            ? null\r\n            : `${formattedFieldName}: ${\r\n                row[fieldName].constructor === Object\r\n                  ? row[fieldName] && row[fieldName].variation\r\n                    ? row[fieldName].variation\r\n                    : row[fieldName].post_title || `None`\r\n                  : row[fieldName]\r\n              }`;\r\n          // return JSON.stringify(\r\n          //     `${formattedFieldName} : ${row[fieldName]}`,\r\n          //     replacer\r\n          // );\r\n        })\r\n        .join('\\r\\n');\r\n    });\r\n    csv = csv.join('\\r\\n');\r\n    // console.log(csv);\r\n    setSubmittedCust(csv);\r\n    // console.log(customizations);\r\n    // console.log(submittedCust);\r\n  }, [juices, submittedCust]);\r\n\r\n  useEffect(() => {\r\n    setCityValue(shipping.delivery_locations[+selectedDelivery]);\r\n    // console.log(cityValue);\r\n    return setCityValue(shipping.delivery_locations[+selectedDelivery]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cityValue, selectedDelivery]);\r\n\r\n  useEffect(() => {\r\n    // validate for when selected delivery method is delivery\r\n    if (deliveryOption === 'delivery') {\r\n      if (\r\n        selectedDelivery !== 'default' &&\r\n        values.fullName.length > 0 &&\r\n        values.phone.length > 0 &&\r\n        values.address.length > 0 &&\r\n        isEmailValid\r\n      ) {\r\n        handleIsContactValid(true);\r\n      } else {\r\n        handleIsContactValid(false);\r\n      }\r\n    } else {\r\n      //validate for when selected delivery method is pickup\r\n      if (\r\n        values.fullName.length > 0 &&\r\n        values.phone.length > 0 &&\r\n        isEmailValid\r\n      ) {\r\n        handleIsContactValid(true);\r\n      } else {\r\n        handleIsContactValid(false);\r\n      }\r\n    }\r\n    handleProceed();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    deliveryOption,\r\n    selectedDelivery,\r\n    isEmailValid,\r\n    values.address,\r\n    values.fullName,\r\n    values.phone,\r\n  ]);\r\n  useEffect(() => {\r\n    handleProceed();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isContactValid]);\r\n  // useEffect(() => {\r\n  //     submittedCust.forEach(c => {\r\n  //         const veg = c.selectedVeg.join();\r\n  //         return { ...c, selectedVeg: veg };\r\n  //     });\r\n  //     console.log(submittedCust);\r\n  // }, [submittedCust]);\r\n  return (\r\n    <Fragment>\r\n      <section className=\"section section--review\">\r\n        <div className=\"section__item\">\r\n          <h2 className=\"section__heading\">Review Your Order</h2>\r\n          <p className=\"section__subheading\">\r\n            Take a look at your orders and make sure that we have everything you\r\n            want and need!\r\n          </p>\r\n          <div className=\"grid-x grid-margin-x section__grid\">\r\n            <div className=\"cell small-12 large-6\">\r\n              <Table\r\n                juices={juices}\r\n                selectedPackage={selectedPackage}\r\n                shipping={shipping}\r\n                selectedDelivery={selectedDelivery}\r\n                deliveryOption={deliveryOption}\r\n                total={total}\r\n              />\r\n            </div>\r\n            <div className=\"cell small-12 large-6\">\r\n              <Logistics\r\n                handleSelect={handleSelect}\r\n                shipping={shipping}\r\n                setDeliveryOption={setDeliveryOption}\r\n                deliveryOption={deliveryOption}\r\n                values={values}\r\n                handleChange={handleChange}\r\n                city={\r\n                  selectedDelivery === 'default' ? 'default' : selectedDelivery\r\n                }\r\n                email={email}\r\n                setEmail={handleEmail}\r\n                checkEmail={checkEmail}\r\n                isEmailValid={isEmailValid}\r\n                deliveryTime={deliveryTime}\r\n                setDeliveryTime={setDeliveryTime}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"section section--payment\">\r\n        <div className=\"section__item\">\r\n          <h2 className=\"section__heading\">Payment Option</h2>\r\n          <p className=\"section__subheading\">\r\n            Unfortunately, we currently do not accept pre-payment via credit\r\n            card or debit card. Cash or e-Transfer only.\r\n          </p>\r\n          <div className=\"grid-x grid-margin-x section__grid align-center\">\r\n            <div\r\n              onClick={setPayment('cash')}\r\n              className={\r\n                'card text-center small-12 medium-6 large-4 card__item card__item--title ' +\r\n                (paymentOption === 'cash' ? 'card__item--active' : '')\r\n              }\r\n            >\r\n              <div className=\"card-divider\">{`Cash`}</div>\r\n              <div className=\"card-section align-justify\">\r\n                <p>{`Deposit Required. Paid on Day-Of.`}</p>\r\n                <SplitButton\r\n                  handleClick={setPayment('cash')}\r\n                  text={paymentOption === 'cash' ? 'Selected' : 'Select'}\r\n                  isActive={paymentOption === 'cash' ? true : false}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              onClick={setPayment('etransfer')}\r\n              className={\r\n                'card text-center small-12 medium-6 large-4 card__item card__item--title ' +\r\n                (paymentOption === 'etransfer' ? 'card__item--active' : '')\r\n              }\r\n            >\r\n              <div className=\"card-divider\">{`E-Transfer`}</div>\r\n              <div className=\"card-section\">\r\n                <p>\r\n                  {`Paid to `}\r\n                  <a href=\"mailto:roundaxxfitness@gmail.com\">\r\n                    roundaxxfitness@gmail.com\r\n                  </a>\r\n                </p>\r\n                <p>Transferred by Sunday 9PM latest</p>\r\n                <SplitButton\r\n                  handleClick={setPayment('etransfer')}\r\n                  text={paymentOption === 'etransfer' ? 'Selected' : 'Select'}\r\n                  isActive={paymentOption === 'etransfer' ? true : false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <input type=\"hidden\" name=\"1\" value={values.fullName} />\r\n        <input type=\"hidden\" name=\"2\" value={selectedPackage.title.rendered} />\r\n        <input type=\"hidden\" name=\"5\" value={total.toFixed(2)} />\r\n        <input type=\"hidden\" name=\"6\" value={deliveryOption} />\r\n        <input type=\"hidden\" name=\"7\" value={deliveryTime} />\r\n        <input type=\"hidden\" name=\"8\" value={paymentOption} />\r\n        <input type=\"hidden\" name=\"18\" value={email} />\r\n        <input type=\"hidden\" name=\"10\" value={values.phone} />\r\n        <input type=\"hidden\" name=\"11\" value={values.address} />\r\n        <input type=\"hidden\" name=\"12\" value={values.address2} />\r\n        <input type=\"hidden\" name=\"13\" value={cityValue?.location ?? ''} />\r\n        <input type=\"hidden\" name=\"14\" value={values.postalCode} />\r\n        <input type=\"hidden\" name=\"15\" value={values.specialInstructions} />\r\n        <input type=\"hidden\" name=\"16\" value={submittedCust} />\r\n        <input type=\"hidden\" name=\"17\" value={`No`} />\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React from 'react';\r\n\r\nconst TotalJuice = ({\r\n  step,\r\n  itemCount,\r\n  packagePrice,\r\n  selectedGoal,\r\n  selectedDelivery,\r\n  deliveryOption,\r\n  totalCustomizations,\r\n  customizationsRemaining,\r\n  total,\r\n}) => {\r\n  return (\r\n    <div className=\"total\">\r\n      <span className=\"total__label\">{`${itemCount || 0} Snacks`}</span>\r\n      {total && <span className=\"total__price\">{`$${total.toFixed(2)}`}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalJuice;\r\n","import React, { Component } from 'react';\r\nimport StepList from './steps/StepList';\r\nimport Choose from './juice-steps/Choose';\r\nimport Customize from './juice-steps/Customize';\r\nimport Review from './juice-steps/Review';\r\nimport Pagination from './pagination/Pagination';\r\nimport Total from './TotalJuice';\r\nimport { SelectedPackageProvider } from '../contexts/SelectedPackage';\r\nimport axios from 'axios';\r\nimport { FormProvider } from '../contexts/Form';\r\n\r\nexport class FormJuice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 1,\r\n      isDataLoaded: false,\r\n      types: {},\r\n      packages: [],\r\n      goals: [],\r\n      salads: [],\r\n      juiceSizes: [],\r\n      juices: [],\r\n      selectedJuices: [],\r\n      shippingOptions: null,\r\n      selectedPackage: {},\r\n      packageAmount: 1,\r\n      selectedGoal: {},\r\n      currentCustomizationCount: 1,\r\n      currentCustomizationId: 1,\r\n      customizationsRemaining: null,\r\n      juicesRemaining: null,\r\n      totalCustomizations: 0,\r\n      currentCustomization: {},\r\n      customizations: [],\r\n      comments: '',\r\n      selectedDeliveryLocation: 'default',\r\n      deliveryOption: 'delivery',\r\n      deliveryTime: '',\r\n      isContactValid: false,\r\n      canProceed: false,\r\n      total: null,\r\n    };\r\n    this.baseURL = this.props?.homeUrl || 'https://fitaxxmeals.com';\r\n  }\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevState.selectedPackage !== this.state.selectedPackage ||\r\n      prevState.step !== this.state.step\r\n    ) {\r\n      this.handleProceed();\r\n    }\r\n    if (\r\n      prevState.selectedPackage !== this.state.selectedPackage ||\r\n      prevState.step !== this.state.step ||\r\n      prevState.selectedDeliveryLocation !==\r\n        this.state.selectedDeliveryLocation ||\r\n      prevState.deliveryOption !== this.state.deliveryOption\r\n    ) {\r\n      const total =\r\n        +this.state.selectedPackage?.acf?.price +\r\n        (this.state.selectedDeliveryLocation !== 'default' &&\r\n        this.state.deliveryOption === 'delivery'\r\n          ? +this.state.shippingOptions.delivery_locations[\r\n              this.state.selectedDeliveryLocation\r\n            ].price\r\n          : 0);\r\n      this.setState({ total });\r\n    }\r\n    if (prevState.selectedJuices !== this.state.selectedJuices) {\r\n      this.setState({\r\n        juicesRemaining:\r\n          +this.state.selectedPackage?.acf?.size -\r\n          +this.state.selectedJuices.reduce((acc, curr) => acc + curr.count, 0),\r\n      });\r\n    }\r\n  }\r\n  getData = async () => {\r\n    const getTypes = await axios.get(`${this.baseURL}/wp-json/wp/v2/types`);\r\n    const getPackages = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/packages?order=asc&per_page=100`\r\n    );\r\n    const getGoals = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/goals?order=asc&per_page=100`\r\n    );\r\n    const getShippingOptions = await axios.get(\r\n      `${this.baseURL}/wp-json/acf/v3/options/options`\r\n    );\r\n    const getSalads = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/salads?order=asc&per_page=100`\r\n    );\r\n    const getJuices = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/juice?order=asc&per_page=100`\r\n    );\r\n    const getJuiceSizes = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/juice_size?order=desc&per_page=100`\r\n    );\r\n    Promise.all([\r\n      getTypes,\r\n      getPackages,\r\n      getGoals,\r\n      getShippingOptions,\r\n      getSalads,\r\n      getJuices,\r\n      getJuiceSizes,\r\n    ]).then(\r\n      ([\r\n        types,\r\n        packages,\r\n        goals,\r\n        shippingOptions,\r\n        salads,\r\n        juices,\r\n        juiceSizes,\r\n      ]) => {\r\n        this.setState({\r\n          types: types.data,\r\n          packages: packages.data,\r\n          goals: goals.data,\r\n          shippingOptions: shippingOptions.data.acf,\r\n          // deliveryTime: shippingOptions.data.acf.delivery_times[0].timeframe,\r\n          deliveryTime: ``,\r\n          salads: salads.data,\r\n          juices: juices.data,\r\n          juiceSizes: juiceSizes.data,\r\n          isDataLoaded: true,\r\n        });\r\n      }\r\n    );\r\n    // console.log(this.state.salads);\r\n    // console.log(this.state.packages);\r\n    // console.log(this.state.goals);\r\n    // console.log(this.state.carbs);\r\n  };\r\n  // Handle fields change\r\n  // handleChange = input => e => {\r\n  //     this.setState({ [input]: e.target.value });\r\n  // };\r\n  scrollToTop = () => {\r\n    document\r\n      .getElementById('form-anchor')\r\n      .scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n  };\r\n  isEmptyObject = (object) => {\r\n    if (Object.entries(object).length === 0 && object.constructor === Object) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  handlePrevStepChange = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ step: this.state.step - 1 });\r\n  };\r\n  handleNextStepChange = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.step === 1) {\r\n      if (this.isEmptyObject(this.state.selectedPackage)) {\r\n      } else {\r\n        this.setState({ step: this.state.step + 1 });\r\n        this.scrollToTop();\r\n      }\r\n    } else if (this.state.step === 2) {\r\n      // this.addCustomizationToOrder();\r\n      if (this.state.juicesRemaining === 0) {\r\n        // if user has no customizations left to customize, simply go to next step without saving\r\n        this.setState({ step: this.state.step + 1 });\r\n      } else {\r\n        // else do nothing\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.state.isContactValid) {\r\n        document.getElementById('order-form').submit();\r\n      }\r\n    }\r\n  };\r\n  handlePackageSelect = (selection) => (e) => {\r\n    e.preventDefault();\r\n    // console.log(selection);\r\n    if (selection.acf) {\r\n      this.setState({\r\n        selectedPackage: selection,\r\n        juicesRemaining: +selection.acf.size,\r\n      });\r\n    }\r\n  };\r\n  handleJuiceChange = (juice, count) => {\r\n    this.setState({\r\n      selectedJuices: [\r\n        ...this.state.selectedJuices.filter(\r\n          (selectedJuice) => selectedJuice.juice.id !== juice.id\r\n        ),\r\n        { juice, count },\r\n      ]\r\n        .filter((s) => s.count > 0)\r\n        .sort((a, b) => a.juice.id - b.juice.id),\r\n    });\r\n  };\r\n  handleComments = (comments) => {\r\n    this.setState({\r\n      comments,\r\n    });\r\n  };\r\n  handleProceed = () => {\r\n    if (this.state.step === 1) {\r\n      if (!this.isEmptyObject(this.state.selectedPackage)) {\r\n        this.setState({ canProceed: true });\r\n        // return true;\r\n      } else {\r\n        this.setState({ canProceed: false });\r\n        // return false;\r\n      }\r\n    }\r\n  };\r\n  handleSelect = (state, selection) => (e) => {\r\n    e.preventDefault();\r\n    // console.log(selection);\r\n    this.setState({ [state]: selection });\r\n  };\r\n  handleDeliverySelect = (selected) => {\r\n    this.setState({ selectedDeliveryLocation: selected });\r\n  };\r\n  setDeliveryOption = (option) => (e) => {\r\n    e.preventDefault();\r\n    this.setState({ deliveryOption: option });\r\n  };\r\n  setDeliveryTime = (option) => (e) => {\r\n    e.preventDefault();\r\n    this.setState({ deliveryTime: option });\r\n  };\r\n  handleIsContactValid = (isValid) => {\r\n    this.setState({ isContactValid: isValid });\r\n  };\r\n  renderSections = () => {\r\n    const { step } = this.state;\r\n    if (!step) {\r\n      return (\r\n        <div className=\"spinner-container\">\r\n          <span className=\"spinner fa fa-spin fa-spinner fa-3x fa-fw\" />\r\n        </div>\r\n      );\r\n    }\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <Choose\r\n            meta={this.state.types}\r\n            packages={this.state.juiceSizes}\r\n            // goals={this.state.goals}\r\n            // handleSelect={this.handleSelect}\r\n            handlePackageSelect={this.handlePackageSelect}\r\n            selectedPackage={this.state.selectedPackage}\r\n            // selectedGoal={this.state.selectedGoal}\r\n          />\r\n        );\r\n      case 2:\r\n        return <Customize juices={this.state.juices} />;\r\n      case 3:\r\n        return (\r\n          <Review\r\n            juices={this.state.selectedJuices}\r\n            selectedPackage={this.state.selectedPackage}\r\n            selectedDelivery={this.state.selectedDeliveryLocation}\r\n            shipping={this.state.shippingOptions}\r\n            handleSelect={this.handleDeliverySelect}\r\n            deliveryOption={this.state.deliveryOption}\r\n            setDeliveryOption={this.setDeliveryOption}\r\n            deliveryTime={this.state.deliveryTime}\r\n            setDeliveryTime={this.setDeliveryTime}\r\n            total={this.state.total}\r\n            isContactValid={this.state.isContactValid}\r\n            handleIsContactValid={this.handleIsContactValid}\r\n            handleProceed={this.handleProceed}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <div className=\"spinner-container\">\r\n            <span className=\"spinner fa fa-spin fa-spinner fa-3x fa-fw\" />\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n  render() {\r\n    if (!this.state.isDataLoaded) {\r\n      return (\r\n        <div className=\"spinner-container\">\r\n          <span className=\"spinner fa fa-spin fa-spinner fa-3x fa-fw\" />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <FormProvider\r\n        value={{\r\n          baseURL: this.baseURL,\r\n          handleJuiceChange: this.handleJuiceChange,\r\n          juicesRemaining: this.state.juicesRemaining,\r\n          handleComments: this.handleComments,\r\n          comments: this.state.comments,\r\n          selectedJuices: this.state.selectedJuices,\r\n        }}\r\n      >\r\n        <SelectedPackageProvider value={this.state?.selectedPackage}>\r\n          <div className=\"form__header grid-container grid-x align-justify align-middle\">\r\n            <StepList step={this.state.step} />\r\n            <Total\r\n              itemCount={+this.state?.selectedPackage?.acf?.size}\r\n              total={this.state.total}\r\n            />\r\n          </div>\r\n          <div className=\"grid-container\">{this.renderSections()}</div>\r\n          <Pagination\r\n            canProceed={this.state.canProceed}\r\n            handleNextStepChange={this.handleNextStepChange}\r\n            handlePrevStepChange={this.handlePrevStepChange}\r\n            step={this.state.step}\r\n          />\r\n        </SelectedPackageProvider>\r\n      </FormProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormJuice;\r\n","import React, { Component } from 'react';\r\nimport CardItem from '../cards/CardItem_Title';\r\nimport './section.scss';\r\n// import axios from \"axios\";\r\n\r\nexport class Choose extends Component {\r\n  state = {\r\n    packages: [],\r\n    // selectedPackage: null\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    const {\r\n      packages,\r\n      goals,\r\n      handleSelect,\r\n      selectedPackage,\r\n      selectedGoal,\r\n      handlePackageSelect,\r\n      // packageAmount\r\n    } = this.props;\r\n    const packageList = packages.map((packageItem) => (\r\n      <CardItem\r\n        key={packageItem.id}\r\n        item={packageItem}\r\n        stateKey=\"selectedPackage\"\r\n        selectedItem={selectedPackage}\r\n        handleSelect={handlePackageSelect}\r\n        handlePackageSelect={handlePackageSelect}\r\n        buttonText={`$${packageItem.acf.price}`}\r\n        description={`${packageItem.acf.meal_count} Personal Sized Meals`}\r\n        group=\"packages\"\r\n        cardTitle={packageItem.title.rendered}\r\n      />\r\n    ));\r\n    const goalList = goals.map((goal) => (\r\n      <CardItem\r\n        key={goal.id}\r\n        item={goal}\r\n        group=\"goals\"\r\n        selectedItem={selectedGoal}\r\n        handleSelect={handleSelect}\r\n        stateKey=\"selectedGoal\"\r\n        description={goal.acf.portion_description}\r\n        buttonText={\r\n          parseFloat(goal.acf.portion_price) > 0\r\n            ? `$${parseFloat(goal.acf.portion_price).toFixed(2)}`\r\n            : `FREE`\r\n        }\r\n        cardTitle={goal.acf.portion_goal}\r\n      />\r\n    ));\r\n    return (\r\n      <section className=\"section section--choose\">\r\n        <div className=\"section__item\">\r\n          <h2 className=\"section__heading\">Select a Package</h2>\r\n          <p className=\"section__subheading\">\r\n            Choose how many meals you intend to eat per day for six (6) days.\r\n          </p>\r\n          <div className=\"section__grid grid-x grid-margin-x align-large-justify align-spaced\">\r\n            {packageList}\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"section__item\">\r\n          <h2 className=\"section__heading\">Select Your Goal</h2>\r\n          <p className=\"section__subheading\">\r\n            We have 3 sizes for you to choose from: 4oz, 6oz, and 8oz (+$1), to\r\n            help you lose, maintain, and gain weight.\r\n          </p>\r\n          <div className=\"section__grid grid-x grid-margin-x align-large-justify align-spaced\">\r\n            {goalList}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Choose;\r\n","import React, { useContext } from 'react';\r\n// import SelectDropdown from \"./SelectDropdown\";\r\nimport CardItemNumber from './CardItem_Number';\r\nimport SelectedPackageContext from '../../contexts/SelectedPackage';\r\nimport FormContext from '../../contexts/Form';\r\n\r\nexport const CardListFallMenu = ({\r\n  groups,\r\n  handleSelect,\r\n  hasNone,\r\n  stateKey,\r\n  selected,\r\n  selectedVariant,\r\n  setVariant,\r\n  groupName,\r\n  variantKey,\r\n}) => {\r\n  const selectedPackage = useContext(SelectedPackageContext);\r\n  const form = useContext(FormContext);\r\n  const foodItemRow =\r\n    groups &&\r\n    groups.map((group) => (\r\n      <CardItemNumber\r\n        key={group.id}\r\n        group={group}\r\n        itemsRemaining={form.fallMenusRemaining}\r\n        handleItemsChange={form.handleFallMenuChange}\r\n      />\r\n    ));\r\n  return (\r\n    <div className=\"section__item\">\r\n      <h2 className=\"section__heading\">{`Select your ${groupName}s`}</h2>\r\n      <p className=\"section__subheading\">{`Select your ${selectedPackage?.acf?.meal_count} items from our premade options (required)`}</p>\r\n      <div className=\"section__grid grid-x grid-margin-x align-center\">\r\n        {foodItemRow}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardListFallMenu;\r\n","import React, { useContext } from 'react';\r\nimport CardList from '../cards/CardListFallMenu';\r\nimport './section.scss';\r\nimport FormContext from '../../contexts/Form';\r\n\r\nconst Customize = ({\r\n  carbs,\r\n  meats,\r\n  vegetables,\r\n  snacks,\r\n  salads,\r\n  vegans,\r\n  fallMenus,\r\n  customizationCount,\r\n  addToOrder,\r\n  currentCustomizationId,\r\n  // customizations,\r\n  customizationsRemaining,\r\n  handleCustomizationAmountIncrement,\r\n  handleCustomizationAmountChange,\r\n  handleCustomizationAmountDecrement,\r\n  comments,\r\n}) => {\r\n  const form = useContext(FormContext);\r\n  return (\r\n    <section className=\"section section--customize\">\r\n      <CardList groupName=\"premade item\" groups={fallMenus} />\r\n      <hr />\r\n      <div className=\"section__item\">\r\n        <h3 className=\"section__heading\">Comments</h3>\r\n        <p className=\"section__subheading\">\r\n          Please add any comments for your order\r\n        </p>\r\n        <p className=\"section__subheading\">\r\n          <em>\r\n            Please Note: Items in meals can be removed but not substituted. For\r\n            more information,{' '}\r\n            <a href={`${form.baseURL}/frequently-asked-questions`}>\r\n              click here\r\n            </a>\r\n          </em>\r\n        </p>\r\n        <div className=\"customize__textarea-container\">\r\n          <textarea\r\n            className=\"customize__textarea\"\r\n            value={comments}\r\n            onChange={(e) => form.handleComments(e.target.value)}\r\n            name=\"\"\r\n            id=\"\"\r\n            rows={4}\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Customize;\r\n","import React, { Fragment, useContext } from 'react';\r\nimport './table.scss';\r\nimport FormContext from '../../contexts/Form';\r\nimport { ADDON_PRICE } from '../constants';\r\n// const isEmptyObject = object => {\r\n//     if (Object.entries(object).length === 0 && object.constructor === Object) {\r\n//         return true;\r\n//     } else {\r\n//         return false;\r\n//     }\r\n// };\r\nconst Table = ({\r\n  selectedPackage,\r\n  addOns,\r\n  fallMenus,\r\n  goal,\r\n  shipping,\r\n  selectedDelivery,\r\n  deliveryOption,\r\n  total,\r\n}) => {\r\n  const form = useContext(FormContext);\r\n  return (\r\n    <table className=\"table unstriped\">\r\n      <thead className=\"table__head\">\r\n        <tr>\r\n          <th>Order Summary</th>\r\n          <th className=\"text-center\">QTY</th>\r\n          <th className=\"text-center\">Price</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr className=\"table__row table__row--bold\">\r\n          <td>{selectedPackage.title.rendered}</td>\r\n          <td />\r\n          <td>{`$${parseFloat(selectedPackage.acf.price).toFixed(2)}`}</td>\r\n        </tr>\r\n        {goal && (\r\n          <tr className=\"table__row table__row--indent-1\">\r\n            <td>{`${goal.acf.portion_description}`}</td>\r\n            <td />\r\n            <td>\r\n              {parseFloat(goal.acf.portion_price) > 0\r\n                ? `$${parseFloat(\r\n                    +goal.acf.portion_price * +selectedPackage.acf.meal_count\r\n                  ).toFixed(2)}`\r\n                : `Included`}\r\n            </td>\r\n          </tr>\r\n        )}\r\n        {fallMenus?.map((fallMenuItem, index) => (\r\n          <Fragment key={index}>\r\n            <tr className=\"table__row table__row--bold\">\r\n              <td>{`${fallMenuItem.item.post_title} ${\r\n                +fallMenuItem?.item?.acf?.extra_charge\r\n                  ? `(+$${parseFloat(\r\n                      fallMenuItem?.item?.acf?.extra_charge\r\n                    ).toFixed(2)} each)`\r\n                  : ''\r\n              }`}</td>\r\n              <td className=\"text-center\">{`x${fallMenuItem.count}`}</td>\r\n              <td>\r\n                {+fallMenuItem?.item?.acf?.extra_charge\r\n                  ? `$${parseFloat(\r\n                      fallMenuItem?.item?.acf?.extra_charge * fallMenuItem.count\r\n                    ).toFixed(2)}`\r\n                  : null}\r\n              </td>\r\n            </tr>\r\n          </Fragment>\r\n        ))}\r\n        {form.comments.length > 0 && (\r\n          <tr className=\"table__row\">\r\n            <td\r\n              dangerouslySetInnerHTML={{\r\n                __html: form.comments.replace(/\\n/g, '<br>'),\r\n              }}\r\n            />\r\n            <td />\r\n            <td />\r\n          </tr>\r\n        )}\r\n        {addOns.length > 0 && (\r\n          <>\r\n            <tr className=\"table__row table__row--bold\">\r\n              <td>Snacks</td>\r\n              <td />\r\n              <td>{`$${parseFloat(\r\n                addOns.reduce((acc, curr) => acc + curr.count, 0) * ADDON_PRICE\r\n              ).toFixed(2)}`}</td>\r\n            </tr>\r\n            {addOns.map((addOn) => (\r\n              <tr\r\n                key={addOn.snack.id}\r\n                className=\"table__row table__row--indent-1\"\r\n              >\r\n                <td>{addOn.snack.post_title}</td>\r\n                <td className={`text-bold text-center`}>{`x${addOn.count}`}</td>\r\n                <td />\r\n              </tr>\r\n            ))}\r\n          </>\r\n        )}\r\n        {selectedDelivery !== 'default' && deliveryOption === 'delivery' && (\r\n          <Fragment>\r\n            <tr className=\"table__row table__row--bold\">\r\n              <td>Delivery Location</td>\r\n              <td />\r\n              <td />\r\n            </tr>\r\n            <tr className=\"table__row table__row--indent-1\">\r\n              <td>{shipping.delivery_locations[selectedDelivery].location}</td>\r\n              <td />\r\n              <td>{`$${parseFloat(\r\n                shipping.delivery_locations[selectedDelivery].price\r\n              ).toFixed(2)}`}</td>\r\n            </tr>\r\n          </Fragment>\r\n        )}\r\n      </tbody>\r\n      <tfoot className=\"table__footer\">\r\n        <tr>\r\n          <th>Order Total</th>\r\n          <th />\r\n          <th className=\"text-center\">{`$${total.toFixed(2)}`}</th>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport Table from '../table/TableFallMenu';\r\nimport Logistics from '../logistics/Logistics';\r\n// import CardItem from \"../cards/CardItem_Title\";\r\nimport SplitButton from '../SplitButton';\r\nimport './section.scss';\r\nimport { capitalize } from 'lodash';\r\nconst useForm = (initialValues) => {\r\n  const [values, setValues] = useState(initialValues);\r\n  return [\r\n    values,\r\n    (e) => {\r\n      setValues({\r\n        ...values,\r\n        [e.target.id]: e.target.value,\r\n      });\r\n    },\r\n  ];\r\n};\r\nconst emailRegex = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\nconst Review = ({\r\n  snacks,\r\n  vegans,\r\n  addOns,\r\n  fallMenus,\r\n  customizations,\r\n  selectedPackage,\r\n  selectedGoal,\r\n  shipping,\r\n  handleSelect,\r\n  selectedDelivery,\r\n  deliveryOption,\r\n  setDeliveryOption,\r\n  deliveryTime,\r\n  setDeliveryTime,\r\n  total,\r\n  isContactValid,\r\n  handleIsContactValid,\r\n  handleProceed,\r\n}) => {\r\n  const [submittedCust, setSubmittedCust] = useState('');\r\n  const [paymentOption, setPaymentOption] = useState('cash');\r\n  const setPayment = (option) => (e) => {\r\n    e.preventDefault();\r\n    setPaymentOption(option);\r\n  };\r\n  // const [cityIndex, setCityIndex] = useState(\"\");\r\n  const [cityValue, setCityValue] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isEmailValid, setIsEmailValid] = useState(true);\r\n  const [values, handleChange] = useForm({\r\n    fullName: '',\r\n    // email: \"\",\r\n    phone: '',\r\n    address: '',\r\n    address2: '',\r\n    // city: \"\",\r\n    postalCode: '',\r\n    specialInstructions: '',\r\n  });\r\n\r\n  const checkEmail = () => {\r\n    setIsEmailValid(emailRegex.test(email));\r\n    // setEmail(e);\r\n  };\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n    checkEmail();\r\n  };\r\n  useEffect(() => {\r\n    // const replacer = (key, value) =>\r\n    //     value === null || value.length === 0 ? \"none\" : value; // specify how you want to handle null values here\r\n    const header = Object.keys(fallMenus[0]);\r\n    const fallMenuCsv = fallMenus.map((row) => {\r\n      //   console.log(row);\r\n      return header\r\n        .map((fieldName) => {\r\n          const formattedFieldName = fieldName\r\n            .split('_')\r\n            .map((w) => capitalize(w))\r\n            .join(' ');\r\n          return fieldName === `customization_price`\r\n            ? null\r\n            : `${formattedFieldName}: ${\r\n                row[fieldName].constructor === Object\r\n                  ? row[fieldName] && row[fieldName].variation\r\n                    ? row[fieldName].variation\r\n                    : row[fieldName].post_title || `None`\r\n                  : row[fieldName]\r\n              }`;\r\n          // return JSON.stringify(\r\n          //     `${formattedFieldName} : ${row[fieldName]}`,\r\n          //     replacer\r\n          // );\r\n        })\r\n        .join('\\r\\n');\r\n    });\r\n    const addOnCsv =\r\n      addOns.length > 0\r\n        ? addOns\r\n            .map((row) => {\r\n              return `Snack: ${row.snack.post_title}\r\n            Quantity: ${row.count}\r\n            `;\r\n            })\r\n            .join('\\r\\n')\r\n        : '';\r\n    const csv = [...fallMenuCsv, addOnCsv].join('\\r\\n');\r\n    // console.log(csv);\r\n    setSubmittedCust(csv);\r\n    // console.log(customizations);\r\n    // console.log(submittedCust);\r\n  }, [fallMenus, addOns, submittedCust]);\r\n\r\n  useEffect(() => {\r\n    setCityValue(shipping.delivery_locations[+selectedDelivery]);\r\n    // console.log(cityValue);\r\n    return setCityValue(shipping.delivery_locations[+selectedDelivery]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cityValue, selectedDelivery]);\r\n\r\n  useEffect(() => {\r\n    // validate for when selected delivery method is delivery\r\n    if (deliveryOption === 'delivery') {\r\n      if (\r\n        selectedDelivery !== 'default' &&\r\n        values.fullName.length > 0 &&\r\n        values.phone.length > 0 &&\r\n        values.address.length > 0 &&\r\n        isEmailValid\r\n      ) {\r\n        handleIsContactValid(true);\r\n      } else {\r\n        handleIsContactValid(false);\r\n      }\r\n    } else {\r\n      //validate for when selected delivery method is pickup\r\n      if (\r\n        values.fullName.length > 0 &&\r\n        values.phone.length > 0 &&\r\n        isEmailValid\r\n      ) {\r\n        handleIsContactValid(true);\r\n      } else {\r\n        handleIsContactValid(false);\r\n      }\r\n    }\r\n    handleProceed();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    deliveryOption,\r\n    selectedDelivery,\r\n    isEmailValid,\r\n    values.address,\r\n    values.fullName,\r\n    values.phone,\r\n  ]);\r\n  useEffect(() => {\r\n    handleProceed();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isContactValid]);\r\n  // useEffect(() => {\r\n  //     submittedCust.forEach(c => {\r\n  //         const veg = c.selectedVeg.join();\r\n  //         return { ...c, selectedVeg: veg };\r\n  //     });\r\n  //     console.log(submittedCust);\r\n  // }, [submittedCust]);\r\n  return (\r\n    <Fragment>\r\n      <section className=\"section section--review\">\r\n        <div className=\"section__item\">\r\n          <h2 className=\"section__heading\">Review Your Order</h2>\r\n          <p className=\"section__subheading\">\r\n            Take a look at your orders and make sure that we have everything you\r\n            want and need!\r\n          </p>\r\n          <div className=\"grid-x grid-margin-x section__grid\">\r\n            <div className=\"cell small-12 large-6\">\r\n              <Table\r\n                fallMenus={fallMenus}\r\n                addOns={addOns}\r\n                selectedPackage={selectedPackage}\r\n                shipping={shipping}\r\n                goal={selectedGoal}\r\n                selectedDelivery={selectedDelivery}\r\n                deliveryOption={deliveryOption}\r\n                total={total}\r\n              />\r\n            </div>\r\n            <div className=\"cell small-12 large-6\">\r\n              <Logistics\r\n                handleSelect={handleSelect}\r\n                shipping={shipping}\r\n                setDeliveryOption={setDeliveryOption}\r\n                deliveryOption={deliveryOption}\r\n                values={values}\r\n                handleChange={handleChange}\r\n                city={\r\n                  selectedDelivery === 'default' ? 'default' : selectedDelivery\r\n                }\r\n                email={email}\r\n                setEmail={handleEmail}\r\n                checkEmail={checkEmail}\r\n                isEmailValid={isEmailValid}\r\n                deliveryTime={deliveryTime}\r\n                setDeliveryTime={setDeliveryTime}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"section section--payment\">\r\n        <div className=\"section__item\">\r\n          <h2 className=\"section__heading\">Payment Option</h2>\r\n          <p className=\"section__subheading\">\r\n            Unfortunately, we currently do not accept pre-payment via credit\r\n            card or debit card. Cash or e-Transfer only.\r\n          </p>\r\n          <div className=\"grid-x grid-margin-x section__grid align-center\">\r\n            <div\r\n              onClick={setPayment('cash')}\r\n              className={\r\n                'card text-center small-12 medium-6 large-4 card__item card__item--title ' +\r\n                (paymentOption === 'cash' ? 'card__item--active' : '')\r\n              }\r\n            >\r\n              <div className=\"card-divider\">{`Cash`}</div>\r\n              <div className=\"card-section align-justify\">\r\n                <p>{`Deposit Required. Paid on Day-Of.`}</p>\r\n                <SplitButton\r\n                  handleClick={setPayment('cash')}\r\n                  text={paymentOption === 'cash' ? 'Selected' : 'Select'}\r\n                  isActive={paymentOption === 'cash' ? true : false}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              onClick={setPayment('etransfer')}\r\n              className={\r\n                'card text-center small-12 medium-6 large-4 card__item card__item--title ' +\r\n                (paymentOption === 'etransfer' ? 'card__item--active' : '')\r\n              }\r\n            >\r\n              <div className=\"card-divider\">{`E-Transfer`}</div>\r\n              <div className=\"card-section\">\r\n                <p>\r\n                  {`Paid to `}\r\n                  <a href=\"mailto:roundaxxfitness@gmail.com\">\r\n                    roundaxxfitness@gmail.com\r\n                  </a>\r\n                </p>\r\n                <p>Transferred by Sunday 9PM latest</p>\r\n                <SplitButton\r\n                  handleClick={setPayment('etransfer')}\r\n                  text={paymentOption === 'etransfer' ? 'Selected' : 'Select'}\r\n                  isActive={paymentOption === 'etransfer' ? true : false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <input type=\"hidden\" name=\"1\" value={values.fullName} />\r\n        <input type=\"hidden\" name=\"2\" value={selectedPackage.title.rendered} />\r\n        <input type=\"hidden\" name=\"3\" value={selectedGoal.title.rendered} />\r\n        <input type=\"hidden\" name=\"5\" value={total.toFixed(2)} />\r\n        <input type=\"hidden\" name=\"6\" value={deliveryOption} />\r\n        <input type=\"hidden\" name=\"7\" value={deliveryTime} />\r\n        <input type=\"hidden\" name=\"8\" value={paymentOption} />\r\n        <input type=\"hidden\" name=\"18\" value={email} />\r\n        <input type=\"hidden\" name=\"10\" value={values.phone} />\r\n        <input type=\"hidden\" name=\"11\" value={values.address} />\r\n        <input type=\"hidden\" name=\"12\" value={values.address2} />\r\n        <input type=\"hidden\" name=\"13\" value={cityValue?.location ?? ''} />\r\n        <input type=\"hidden\" name=\"14\" value={values.postalCode} />\r\n        <input type=\"hidden\" name=\"15\" value={values.specialInstructions} />\r\n        <input type=\"hidden\" name=\"16\" value={submittedCust} />\r\n        <input type=\"hidden\" name=\"17\" value={`No`} />\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React, { Component } from 'react';\r\nimport StepList from './steps/StepList';\r\nimport Choose from './fall-menu-steps/Choose';\r\nimport Customize from './fall-menu-steps/Customize';\r\nimport Review from './fall-menu-steps/Review';\r\nimport Pagination from './pagination/Pagination';\r\nimport Total from './TotalSnack';\r\nimport { SelectedPackageProvider } from '../contexts/SelectedPackage';\r\nimport axios from 'axios';\r\nimport { isEmptyObject } from './utils';\r\nimport { FormProvider } from '../contexts/Form';\r\nimport { ALLOWED_ADDONS, ADDON_PRICE } from './constants';\r\nimport Popup from './Popup';\r\n\r\nexport class FormFallMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 1,\r\n      isDataLoaded: false,\r\n      types: {},\r\n      packages: [],\r\n      goals: [],\r\n      fallMenu: [],\r\n      selectedFallMenus: [],\r\n      fallMenusRemaining: null,\r\n      salads: [],\r\n      juices: [],\r\n      snackSizes: [],\r\n      snacks: [],\r\n      selectedSnacks: [],\r\n      addOns: [],\r\n      addOnsRemaining: ALLOWED_ADDONS,\r\n      shippingOptions: null,\r\n      selectedPackage: {},\r\n      packageAmount: 1,\r\n      selectedGoal: {},\r\n      snacksRemaining: null,\r\n      totalCustomizations: 0,\r\n      currentCustomization: {},\r\n      customizations: [],\r\n      comments: '',\r\n      selectedDeliveryLocation: 'default',\r\n      deliveryOption: 'delivery',\r\n      deliveryTime: '',\r\n      isContactValid: false,\r\n      canProceed: false,\r\n      total: null,\r\n      modalActive: true,\r\n    };\r\n    this.baseURL = this.props?.homeUrl || 'https://fitaxxmeals.com';\r\n  }\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevState.selectedPackage !== this.state.selectedPackage ||\r\n      prevState.step !== this.state.step\r\n    ) {\r\n      this.handleProceed();\r\n    }\r\n    if (prevState.addOns !== this.state.addOns) {\r\n      this.setState({\r\n        addOnsRemaining:\r\n          ALLOWED_ADDONS -\r\n          +this.state.addOns.reduce((acc, curr) => acc + curr.count, 0),\r\n      });\r\n    }\r\n    if (\r\n      prevState.selectedPackage !== this.state.selectedPackage ||\r\n      prevState.selectedGoal !== this.state.selectedGoal ||\r\n      prevState.step !== this.state.step ||\r\n      prevState.selectedDeliveryLocation !==\r\n        this.state.selectedDeliveryLocation ||\r\n      prevState.deliveryOption !== this.state.deliveryOption ||\r\n      prevState.addOns !== this.state.addOns ||\r\n      prevState.selectedFallMenus !== this.state.selectedFallMenus\r\n    ) {\r\n      const total =\r\n        +this.state.selectedPackage?.acf?.price +\r\n        (this.state.selectedGoal.acf && this.state.selectedPackage.acf\r\n          ? +this.state.selectedPackage.acf.meal_count *\r\n            +this.state.selectedGoal.acf.portion_price\r\n          : 0) +\r\n        (this.state.selectedDeliveryLocation !== 'default' &&\r\n        this.state.deliveryOption === 'delivery'\r\n          ? +this.state.shippingOptions.delivery_locations[\r\n              this.state.selectedDeliveryLocation\r\n            ].price\r\n          : 0) +\r\n        (this.state.selectedFallMenus.length > 0\r\n          ? this.state.selectedFallMenus.reduce(\r\n              (acc, curr) =>\r\n                +curr.count * parseFloat(+curr.item?.acf?.extra_charge || 0) +\r\n                +acc,\r\n              0\r\n            )\r\n          : 0) +\r\n        (this.state.addOns.length > 0\r\n          ? this.state.addOns.reduce((acc, curr) => acc + curr.count, 0) *\r\n            ADDON_PRICE\r\n          : 0);\r\n      this.setState({ total });\r\n    }\r\n    if (prevState.selectedFallMenus !== this.state.selectedFallMenus) {\r\n      this.setState({\r\n        fallMenusRemaining:\r\n          +this.state.selectedPackage?.acf?.meal_count -\r\n          +this.state.selectedFallMenus.reduce(\r\n            (acc, curr) => acc + curr.count,\r\n            0\r\n          ),\r\n      });\r\n    }\r\n  }\r\n  getData = async () => {\r\n    const getTypes = await axios.get(`${this.baseURL}/wp-json/wp/v2/types`);\r\n    const getPackages = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/packages?order=asc&per_page=100`\r\n    );\r\n    const getGoals = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/goals?order=asc&per_page=100`\r\n    );\r\n    const getShippingOptions = await axios.get(\r\n      `${this.baseURL}/wp-json/acf/v3/options/options`\r\n    );\r\n    const getSalads = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/salads?order=asc&per_page=100`\r\n    );\r\n    const getSnacks = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/snacks?order=asc&per_page=100`\r\n    );\r\n    const getSnackSizes = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/snack_sizes?order=asc&per_page=100`\r\n    );\r\n    const getFallMenu = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/fall_menu?order=asc&per_page=100`\r\n    );\r\n    const getJuices = await axios.get(\r\n      `${this.baseURL}/wp-json/wp/v2/juice?order=asc&per_page=100`\r\n    );\r\n    Promise.all([\r\n      getTypes,\r\n      getPackages,\r\n      getGoals,\r\n      getShippingOptions,\r\n      getSalads,\r\n      getSnacks,\r\n      getSnackSizes,\r\n      getFallMenu,\r\n      getJuices,\r\n    ]).then(\r\n      ([\r\n        types,\r\n        packages,\r\n        goals,\r\n        shippingOptions,\r\n        salads,\r\n        snacks,\r\n        snackSizes,\r\n        fallMenu,\r\n        juices,\r\n      ]) => {\r\n        this.setState({\r\n          types: types.data,\r\n          packages: packages.data,\r\n          goals: goals.data,\r\n          shippingOptions: shippingOptions.data.acf,\r\n          // deliveryTime: shippingOptions.data.acf.delivery_times[0].timeframe,\r\n          deliveryTime: ``,\r\n          salads: salads.data,\r\n          snacks: snacks.data,\r\n          snackSizes: snackSizes.data,\r\n          fallMenu: fallMenu.data,\r\n          juices: juices.data,\r\n          isDataLoaded: true,\r\n        });\r\n      }\r\n    );\r\n    // console.log(this.state.salads);\r\n    // console.log(this.state.packages);\r\n    // console.log(this.state.goals);\r\n    // console.log(this.state.carbs);\r\n  };\r\n  // Handle fields change\r\n  // handleChange = input => e => {\r\n  //     this.setState({ [input]: e.target.value });\r\n  // };\r\n  scrollToTop = () => {\r\n    document\r\n      .getElementById('form-anchor')\r\n      .scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n  };\r\n\r\n  handlePrevStepChange = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ step: this.state.step - 1 });\r\n  };\r\n  handleNextStepChange = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.step === 1) {\r\n      if (\r\n        isEmptyObject(this.state.selectedPackage) ||\r\n        isEmptyObject(this.state.selectedGoal)\r\n      ) {\r\n      } else {\r\n        this.setState({ step: this.state.step + 1 });\r\n        this.scrollToTop();\r\n      }\r\n    } else if (this.state.step === 2) {\r\n      // this.addCustomizationToOrder();\r\n      if (this.state.fallMenusRemaining === 0) {\r\n        // if user has no customizations left to customize, simply go to next step without saving\r\n        this.setState({ step: this.state.step + 1 });\r\n      } else {\r\n        // else do nothing\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.state.isContactValid) {\r\n        document.getElementById('order-form').submit();\r\n      }\r\n    }\r\n  };\r\n  handlePackageSelect = (selection) => (e) => {\r\n    e.preventDefault();\r\n    // console.log(selection);\r\n    if (selection.acf) {\r\n      this.setState({\r\n        selectedPackage: selection,\r\n        fallMenusRemaining: +selection.acf.meal_count,\r\n      });\r\n    }\r\n  };\r\n  handleFallMenuChange = (item, count) => {\r\n    this.setState({\r\n      selectedFallMenus: [\r\n        ...this.state.selectedFallMenus.filter(\r\n          (selectedFallMenu) => selectedFallMenu.item.id !== item.id\r\n        ),\r\n        { item, count },\r\n      ]\r\n        .filter((s) => s.count > 0)\r\n        .sort((a, b) => a.item.id - b.item.id),\r\n    });\r\n  };\r\n  handleSnackChange = (snack, count) => {\r\n    this.setState({\r\n      addOns: [\r\n        ...this.state.addOns.filter(\r\n          (selectedSnack) => selectedSnack.snack.id !== snack.id\r\n        ),\r\n        { snack, count },\r\n      ]\r\n        .filter((s) => s.count > 0)\r\n        .sort((a, b) => a.snack.id - b.snack.id),\r\n    });\r\n  };\r\n  handleComments = (comments) => {\r\n    this.setState({\r\n      comments,\r\n    });\r\n  };\r\n  handleProceed = () => {\r\n    if (this.state.step === 1) {\r\n      if (!isEmptyObject(this.state.selectedPackage)) {\r\n        this.setState({ canProceed: true });\r\n        // return true;\r\n      } else {\r\n        this.setState({ canProceed: false });\r\n        // return false;\r\n      }\r\n    }\r\n  };\r\n  handleSelect = (state, selection) => (e) => {\r\n    e.preventDefault();\r\n    // console.log(selection);\r\n    this.setState({ [state]: selection });\r\n  };\r\n  handleDeliverySelect = (selected) => {\r\n    this.setState({ selectedDeliveryLocation: selected });\r\n  };\r\n  setDeliveryOption = (option) => (e) => {\r\n    e.preventDefault();\r\n    this.setState({ deliveryOption: option });\r\n  };\r\n  setDeliveryTime = (option) => (e) => {\r\n    e.preventDefault();\r\n    this.setState({ deliveryTime: option });\r\n  };\r\n  handleIsContactValid = (isValid) => {\r\n    this.setState({ isContactValid: isValid });\r\n  };\r\n  toggleModal = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ modalActive: !this.state.modalActive });\r\n  };\r\n  handleNoThanks = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      modalActive: !this.state.modalActive,\r\n      addOnsRemaining: 14,\r\n      addOns: [],\r\n    });\r\n  };\r\n  renderSections = () => {\r\n    const { step } = this.state;\r\n    if (!step) {\r\n      return (\r\n        <div className=\"spinner-container\">\r\n          <span className=\"spinner fa fa-spin fa-spinner fa-3x fa-fw\" />\r\n        </div>\r\n      );\r\n    }\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <Choose\r\n            meta={this.state.types}\r\n            packages={this.state.packages}\r\n            goals={this.state.goals}\r\n            handleSelect={this.handleSelect}\r\n            handlePackageSelect={this.handlePackageSelect}\r\n            selectedPackage={this.state.selectedPackage}\r\n            selectedGoal={this.state.selectedGoal}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <Customize\r\n            // snacks={this.state.snacks}\r\n            // salads={[...this.state.salads, ...this.state.snacks]}\r\n            fallMenus={this.state.fallMenu}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <>\r\n            <Review\r\n              fallMenus={this.state.selectedFallMenus}\r\n              selectedPackage={this.state.selectedPackage}\r\n              selectedGoal={this.state.selectedGoal}\r\n              selectedDelivery={this.state.selectedDeliveryLocation}\r\n              shipping={this.state.shippingOptions}\r\n              handleSelect={this.handleDeliverySelect}\r\n              deliveryOption={this.state.deliveryOption}\r\n              setDeliveryOption={this.setDeliveryOption}\r\n              deliveryTime={this.state.deliveryTime}\r\n              setDeliveryTime={this.setDeliveryTime}\r\n              total={this.state.total}\r\n              isContactValid={this.state.isContactValid}\r\n              handleIsContactValid={this.handleIsContactValid}\r\n              handleProceed={this.handleProceed}\r\n              addOns={this.state.addOns}\r\n            />\r\n            <Popup\r\n              items={[\r\n                ...this.state.salads,\r\n                ...this.state.snacks,\r\n                ...this.state.juices,\r\n              ]}\r\n              active={this.state.modalActive}\r\n              toggleModal={this.toggleModal}\r\n              handleNoThanks={this.handleNoThanks}\r\n            />\r\n          </>\r\n        );\r\n      default:\r\n        return (\r\n          <div className=\"spinner-container\">\r\n            <span className=\"spinner fa fa-spin fa-spinner fa-3x fa-fw\" />\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n  render() {\r\n    if (!this.state.isDataLoaded) {\r\n      return (\r\n        <div className=\"spinner-container\">\r\n          <span className=\"spinner fa fa-spin fa-spinner fa-3x fa-fw\" />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <FormProvider\r\n        value={{\r\n          baseURL: this.baseURL,\r\n          handleSnackChange: this.handleSnackChange,\r\n          snacksRemaining: this.state.addOnsRemaining,\r\n          handleComments: this.handleComments,\r\n          comments: this.state.comments,\r\n          fallMenusRemaining: this.state.fallMenusRemaining,\r\n          handleFallMenuChange: this.handleFallMenuChange,\r\n          allowedAddons: ALLOWED_ADDONS,\r\n        }}\r\n      >\r\n        <SelectedPackageProvider value={this.state?.selectedPackage}>\r\n          <div className=\"form__header grid-container grid-x align-justify align-middle\">\r\n            <StepList step={this.state.step} />\r\n            <Total\r\n              itemCount={+this.state?.selectedPackage?.acf?.meal_count}\r\n              total={this.state.total}\r\n            />\r\n          </div>\r\n          <div className=\"grid-container\">{this.renderSections()}</div>\r\n          <Pagination\r\n            canProceed={this.state.canProceed}\r\n            handleNextStepChange={this.handleNextStepChange}\r\n            handlePrevStepChange={this.handlePrevStepChange}\r\n            step={this.state.step}\r\n          />\r\n        </SelectedPackageProvider>\r\n      </FormProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormFallMenu;\r\n","import React, { Fragment, useState } from 'react';\r\n\r\nimport Form from '../components/Form';\r\nimport FormSnack from '../components/FormSnack';\r\n// import \"./foundation.min.css\";\r\nimport './App.scss';\r\nimport FormVegan from '../components/FormVegan';\r\nimport FormJuice from '../components/FormJuice';\r\nimport FormFallMenu from '../components/FormFallMenu';\r\n// import Button from \"../components/pagination/PaginationButton\";\r\n// import CardItem from \"../components/cards/CardItem_Title\";\r\nconst SNACK = 'snack';\r\nconst MEAL = 'meal';\r\nconst VEGAN = 'vegan';\r\nconst JUICE = 'juice';\r\nconst PREMADE = 'fall_menu';\r\nconst App = ({ homeUrl }) => {\r\n  const [formType, setFormType] = useState(null);\r\n  const renderForm = (type) => {\r\n    switch (type) {\r\n      case SNACK:\r\n        return <FormSnack homeUrl={homeUrl} />;\r\n      case MEAL:\r\n        return <Form homeUrl={homeUrl} />;\r\n      case VEGAN:\r\n        return <FormVegan homeUrl={homeUrl} />;\r\n      case JUICE:\r\n        return <FormJuice homeUrl={homeUrl} />;\r\n      case PREMADE:\r\n        return <FormFallMenu homeUrl={homeUrl} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <form\r\n        id=\"order-form\"\r\n        className=\"order\"\r\n        action={`${\r\n          homeUrl ?? ''\r\n        }/wp-content/themes/fitaxxmeals/page-templates/inc/process-order.php`}\r\n        encType=\"multipart/form-data\"\r\n        method=\"post\"\r\n      >\r\n        <div id=\"form-anchor\" />\r\n        {!formType && (\r\n          <section\r\n            style={{ minHeight: 200 }}\r\n            className=\"section grid-container\"\r\n          >\r\n            <div className=\"section__item\">\r\n              <h2 style={{ textAlign: 'center' }} className=\"section__heading\">\r\n                Select Menu\r\n              </h2>\r\n              <p\r\n                className=\"section__subheading\"\r\n                style={{ textAlign: 'center' }}\r\n              >\r\n                Choose which menu you'd like to order from.\r\n              </p>\r\n              <div className=\"section__grid grid-x grid-margin-x align-large-justify align-spaced\">\r\n                <div\r\n                  onClick={() => setFormType(MEAL)}\r\n                  className={\r\n                    'card text-center small-12 medium-6 card__item card__item--title card__item--active'\r\n                  }\r\n                >\r\n                  <div className=\"card-divider\">{`Meals`}</div>\r\n                  <div className=\"card-section\">\r\n                    <p>{`Customize your own meals`}</p>\r\n                    <button\r\n                      onClick={() => setFormType(MEAL)}\r\n                      className={'input-group select-button '}\r\n                    >\r\n                      <span className=\"input-group-field select-button__text\">\r\n                        {`Select`}\r\n                      </span>\r\n                      <span\r\n                        className={\r\n                          'input-group-label select-button__icon fa fa-arrow-right'\r\n                        }\r\n                      />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  onClick={() => setFormType(PREMADE)}\r\n                  className={\r\n                    'card text-center small-12 medium-6 card__item card__item--title card__item--active'\r\n                  }\r\n                >\r\n                  <div className=\"card-divider\">{`Pre-made Meals`}</div>\r\n                  <div className=\"card-section\">\r\n                    <p>{`Choose from premade meals.`}</p>\r\n                    <button\r\n                      onClick={() => setFormType(PREMADE)}\r\n                      className={'input-group select-button '}\r\n                    >\r\n                      <span className=\"input-group-field select-button__text\">\r\n                        {`Select`}\r\n                      </span>\r\n                      <span\r\n                        className={\r\n                          'input-group-label select-button__icon fa fa-arrow-right'\r\n                        }\r\n                      />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  onClick={() => setFormType(SNACK)}\r\n                  className={\r\n                    'card text-center small-12 medium-6 card__item card__item--title card__item--active'\r\n                  }\r\n                >\r\n                  <div className=\"card-divider\">{`Snacks`}</div>\r\n                  <div className=\"card-section\">\r\n                    <p>{`Healthy snacks for the munchies`}</p>\r\n                    <button\r\n                      onClick={() => setFormType(SNACK)}\r\n                      className={'input-group select-button '}\r\n                    >\r\n                      <span className=\"input-group-field select-button__text\">\r\n                        {`Select`}\r\n                      </span>\r\n                      <span\r\n                        className={\r\n                          'input-group-label select-button__icon fa fa-arrow-right'\r\n                        }\r\n                      />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  onClick={() => setFormType(VEGAN)}\r\n                  className={\r\n                    'card text-center small-12 medium-6 card__item card__item--title card__item--active'\r\n                  }\r\n                >\r\n                  <div className=\"card-divider\">{`Vegan`}</div>\r\n                  <div className=\"card-section\">\r\n                    <p>{`Vegan Menu`}</p>\r\n                    <button\r\n                      onClick={() => setFormType(VEGAN)}\r\n                      className={'input-group select-button '}\r\n                    >\r\n                      <span className=\"input-group-field select-button__text\">\r\n                        {`Select`}\r\n                      </span>\r\n                      <span\r\n                        className={\r\n                          'input-group-label select-button__icon fa fa-arrow-right'\r\n                        }\r\n                      />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  onClick={() => setFormType(JUICE)}\r\n                  className={\r\n                    'card text-center small-12 medium-6 card__item card__item--title card__item--active'\r\n                  }\r\n                >\r\n                  <div className=\"card-divider\">{`Juices`}</div>\r\n                  <div className=\"card-section\">\r\n                    <p>{`Juice Menu`}</p>\r\n                    <button\r\n                      onClick={() => setFormType(JUICE)}\r\n                      className={'input-group select-button '}\r\n                    >\r\n                      <span className=\"input-group-field select-button__text\">\r\n                        {`Select`}\r\n                      </span>\r\n                      <span\r\n                        className={\r\n                          'input-group-label select-button__icon fa fa-arrow-right'\r\n                        }\r\n                      />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        )}\r\n        {renderForm(formType)}\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n// const SALAD = \"salad\";\r\n// const MEAL = \"meal\";\r\nconst element = document.getElementById(\"root\");\r\nlet parsed = {};\r\nfor (let e in element.dataset) {\r\n    parsed = { ...parsed, [e]: element.dataset[e] };\r\n}\r\nconst props = Object.assign({}, parsed);\r\n\r\nReactDOM.render(\r\n    <App\r\n        // formType={\r\n        //     new URLSearchParams(window.location.search).get(\"form\") || MEAL\r\n        // }\r\n        {...props}\r\n    />,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}